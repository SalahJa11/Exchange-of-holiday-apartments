{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"react-native-paper\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n    navigation.navigate(\"HomeScreen\");\n  };\n  return _jsx(Background, {\n    children: _jsx(ScrollView, {\n      style: styles.ScrollView1,\n      contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: \"center\"\n      },\n      children: _jsxs(View, {\n        style: styles.View2,\n        children: [_jsx(BackButton, {\n          goBack: navigation.goBack\n        }), _jsx(Logo, {}), _jsx(Header, {\n          children: \"Welcome\"\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          returnKeyType: \"next\",\n          value: email.value,\n          onChangeText: function onChangeText(text) {\n            return setEmail({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!email.error,\n          errorText: email.error,\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"Password\",\n          returnKeyType: \"done\",\n          value: password.value,\n          onChangeText: function onChangeText(text) {\n            return setPassword({\n              value: text,\n              error: \"\"\n            });\n          },\n          error: !!password.error,\n          errorText: password.error,\n          secureTextEntry: true\n        }), _jsx(View, {\n          style: styles.forgotPassword,\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"ResetPasswordScreen\");\n            },\n            children: _jsx(Text, {\n              style: styles.forgot,\n              children: \"Forgot your password?\"\n            })\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: onLoginPressed,\n          children: \"Login\"\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"Don't have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.replace(\"RegisterScreen\");\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Sign up\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  ScrollView1: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  scrollViewContainer: {},\n  View2: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignContent: \"space-around\",\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","ScrollView","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","navigate","styles","ScrollView1","flexGrow","justifyContent","View2","goBack","text","forgotPassword","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary","height","scrollViewContainer","alignContent","flex"],"sources":["C:/Users/salah/Documents/Exchange of holiday apartments/Coding/Final_Project/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TouchableOpacity, StyleSheet, View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n\n  const onLoginPressed = () => {\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    }\n    navigation.navigate(\"HomeScreen\");\n  };\n\n  return (\n    <Background>\n      <ScrollView\n        style={styles.ScrollView1}\n        contentContainerStyle={{ flexGrow: 1, justifyContent: \"center\" }}\n      >\n        <View style={styles.View2}>\n          <BackButton goBack={navigation.goBack} />\n\n          <Logo />\n          <Header>Welcome</Header>\n          <TextInput\n            label=\"Email\"\n            returnKeyType=\"next\"\n            value={email.value}\n            onChangeText={(text) => setEmail({ value: text, error: \"\" })}\n            error={!!email.error}\n            errorText={email.error}\n            autoCapitalize=\"none\"\n            autoCompleteType=\"email\"\n            textContentType=\"emailAddress\"\n            keyboardType=\"email-address\"\n          />\n          <TextInput\n            label=\"Password\"\n            returnKeyType=\"done\"\n            value={password.value}\n            onChangeText={(text) => setPassword({ value: text, error: \"\" })}\n            error={!!password.error}\n            errorText={password.error}\n            secureTextEntry\n          />\n          <View style={styles.forgotPassword}>\n            <TouchableOpacity\n              onPress={() => navigation.navigate(\"ResetPasswordScreen\")}\n            >\n              <Text style={styles.forgot}>Forgot your password?</Text>\n            </TouchableOpacity>\n          </View>\n          <Button mode=\"contained\" onPress={onLoginPressed}>\n            Login\n          </Button>\n          <View style={styles.row}>\n            <Text>Don't have an account? </Text>\n            <TouchableOpacity\n              onPress={() => navigation.replace(\"RegisterScreen\")}\n            >\n              <Text style={styles.link}>Sign up</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary,\n  },\n  ScrollView1: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n  scrollViewContainer: {},\n  View2: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignContent: \"space-around\",\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}