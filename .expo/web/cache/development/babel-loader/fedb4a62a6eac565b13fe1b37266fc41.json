{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { withInternalTheme } from \"../../core/theming\";\nimport Card from \"../Card/Card\";\nimport Text from \"../Typography/Text\";\nimport FAB from \"./FAB\";\nimport { getFABGroupColors } from \"./utils\";\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n    icon = _ref.icon,\n    open = _ref.open,\n    _onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    theme = _ref.theme,\n    style = _ref.style,\n    fabStyle = _ref.fabStyle,\n    visible = _ref.visible,\n    label = _ref.label,\n    testID = _ref.testID,\n    onStateChange = _ref.onStateChange,\n    colorProp = _ref.color,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    customBackdropColor = _ref.backdropColor;\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    backdrop = _React$useRef.current;\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prevActions = _React$useState2[0],\n    setPrevActions = _React$useState2[1];\n  var scale = theme.animation.scale;\n  var isV3 = theme.isV3;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n  var _getFABGroupColors = getFABGroupColors({\n      theme: theme,\n      customBackdropColor: customBackdropColor\n    }),\n    labelColor = _getFABGroupColors.labelColor,\n    backdropColor = _getFABGroupColors.backdropColor,\n    stackedFABBackgroundColor = _getFABGroupColors.stackedFABBackgroundColor;\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n  });\n  var translations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [24, -8]\n    }) : -8;\n  });\n  var labelTranslations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [8, -8]\n    }) : -8;\n  });\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    top = _useSafeAreaInsets.top,\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top\n  };\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, containerPaddings, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityRole: \"button\",\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  })), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n    var labelTextStyle = _objectSpread({\n      color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n    var marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    var accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    var size = typeof it.size !== 'undefined' ? it.size : 'small';\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: marginHorizontal\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, {\n      mode: isV3 ? 'contained' : 'elevated',\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityHint: it.accessibilityHint,\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle]\n    }, React.createElement(Text, {\n      variant: \"titleMedium\",\n      style: [labelTextStyle, it.labelStyle]\n    }, it.label))), React.createElement(FAB, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress(e) {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    label: label,\n    testID: testID,\n    variant: variant\n  })));\n};\nFABGroup.displayName = 'FAB.Group';\nexport default withInternalTheme(FABGroup);\nvar FABGroupWithTheme = withInternalTheme(FABGroup);\nexport { FABGroupWithTheme as FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","withInternalTheme","Card","Text","FAB","getFABGroupColors","FABGroup","_ref","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","label","testID","onStateChange","colorProp","color","variant","customBackdropColor","backdropColor","useRef","Animated","Value","backdrop","current","animations","map","useState","prevActions","setPrevActions","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","top","bottom","right","left","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","length","_","i","View","pointerEvents","styles","container","TouchableWithoutFeedback","accessibilityRole","backgroundColor","safeArea","it","labelTextStyle","labelTextColor","fonts","titleMedium","marginHorizontal","size","key","item","mode","e","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","labelStyle","accessibilityState","expanded","fab","displayName","FABGroupWithTheme","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: StyleProp<ViewStyle>;\n    containerStyle?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Optional label for `FAB`.\n   */\n  label?: string;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-group.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  label,\n  testID,\n  onStateChange,\n  color: colorProp,\n  variant = 'primary',\n  backdropColor: customBackdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const { top, bottom, right, left } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <TouchableWithoutFeedback accessibilityRole=\"button\" onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      mode={isV3 ? 'contained' : 'elevated'}\n                      onPress={(e) => {\n                        it.onPress(e);\n                        close();\n                      }}\n                      accessibilityHint={it.accessibilityHint}\n                      accessibilityLabel={accessibilityLabel}\n                      accessibilityRole=\"button\"\n                      style={\n                        [\n                          styles.containerStyle,\n                          {\n                            transform: [\n                              isV3\n                                ? { translateY: labelTranslations[i] }\n                                : { scale: scales[i] },\n                            ],\n                            opacity: opacities[i],\n                          },\n                          isV3 && styles.v3ContainerStyle,\n                          it.containerStyle,\n                        ] as StyleProp<ViewStyle>\n                      }\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        style={[labelTextStyle, it.labelStyle]}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: stackedFABBackgroundColor,\n                      },\n                      isV3 && { transform: [{ translateY: translations[i] }] },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={(e) => {\n                    it.onPress(e);\n                    close();\n                  }}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={(e) => {\n            onPress?.(e);\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          label={label}\n          testID={testID}\n          variant={variant}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withInternalTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withInternalTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}