{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nvar DURATION = 2400;\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _theme$colors;\n  var _ref$animating = _ref.animating,\n    animating = _ref$animating === void 0 ? true : _ref$animating,\n    indicatorColor = _ref.color,\n    _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n    hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n    _ref$size = _ref.size,\n    indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    timer = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n    fade = _React$useRef2.current;\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n    if (rotation.current) {\n      timer.setValue(0);\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || ((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary);\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n  var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: animating\n    }\n  }), React.createElement(Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n      var direction = index ? -1 : +1;\n      return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(Animated.View, {\n      style: layerStyle\n    }, React.createElement(Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: viewportStyle\n    }, React.createElement(Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withInternalTheme(ActivityIndicator);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","DURATION","ActivityIndicator","_ref","animating","indicatorColor","color","hidesWhenStopped","size","indicatorSize","style","theme","rest","useRef","Animated","Value","timer","current","fade","rotation","undefined","scale","animation","startRotation","useCallback","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","useEffect","easing","Easing","linear","Platform","OS","colors","_theme$colors","primary","frames","bezier","containerStyle","width","height","overflow","View","styles","container","accessible","accessibilityRole","accessibilityState","busy","opacity","collapsable","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","key","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"sources":["ActivityIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, MD2Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={MD2Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors?.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withInternalTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}