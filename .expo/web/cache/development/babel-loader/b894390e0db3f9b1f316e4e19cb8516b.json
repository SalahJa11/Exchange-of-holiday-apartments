{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PortalManager from \"./PortalManager\";\nexport var PortalContext = React.createContext(null);\nvar PortalHost = function (_React$Component) {\n  _inherits(PortalHost, _React$Component);\n  var _super = _createSuper(PortalHost);\n  function PortalHost() {\n    var _this;\n    _classCallCheck(this, PortalHost);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"setManager\", function (manager) {\n      _this.manager = manager;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"mount\", function (children) {\n      var key = _this.nextKey++;\n      if (_this.manager) {\n        _this.manager.mount(key, children);\n      } else {\n        _this.queue.push({\n          type: 'mount',\n          key: key,\n          children: children\n        });\n      }\n      return key;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (key, children) {\n      if (_this.manager) {\n        _this.manager.update(key, children);\n      } else {\n        var op = {\n          type: 'mount',\n          key: key,\n          children: children\n        };\n        var index = _this.queue.findIndex(function (o) {\n          return o.type === 'mount' || o.type === 'update' && o.key === key;\n        });\n        if (index > -1) {\n          _this.queue[index] = op;\n        } else {\n          _this.queue.push(op);\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"unmount\", function (key) {\n      if (_this.manager) {\n        _this.manager.unmount(key);\n      } else {\n        _this.queue.push({\n          type: 'unmount',\n          key: key\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"nextKey\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"queue\", []);\n    _defineProperty(_assertThisInitialized(_this), \"manager\", void 0);\n    return _this;\n  }\n  _createClass(PortalHost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var manager = this.manager;\n      var queue = this.queue;\n      while (queue.length && manager) {\n        var action = queue.pop();\n        if (action) {\n          switch (action.type) {\n            case 'mount':\n              manager.mount(action.key, action.children);\n              break;\n            case 'update':\n              manager.update(action.key, action.children);\n              break;\n            case 'unmount':\n              manager.unmount(action.key);\n              break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PortalContext.Provider, {\n        value: {\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        pointerEvents: \"box-none\"\n      }, this.props.children), React.createElement(PortalManager, {\n        ref: this.setManager\n      }));\n    }\n  }]);\n  return PortalHost;\n}(React.Component);\nexport { PortalHost as default };\n_defineProperty(PortalHost, \"displayName\", 'Portal.Host');\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["React","PortalManager","PortalContext","createContext","PortalHost","_defineProperty","manager","children","key","nextKey","mount","queue","push","type","update","op","index","findIndex","o","unmount","componentDidMount","length","action","pop","render","Provider","value","View","style","styles","container","collapsable","pointerEvents","props","ref","setManager","Component","StyleSheet","create","flex"],"sources":["PortalHost.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport PortalManager from './PortalManager';\n\nexport type Props = {\n  children: React.ReactNode;\n};\n\ntype Operation =\n  | { type: 'mount'; key: number; children: React.ReactNode }\n  | { type: 'update'; key: number; children: React.ReactNode }\n  | { type: 'unmount'; key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.ReactNode) => number;\n  update: (key: number, children: React.ReactNode) => void;\n  unmount: (key: number) => void;\n};\n\nexport const PortalContext = React.createContext<PortalMethods>(null as any);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal.Host>\n *     <Text>Content of the app</Text>\n *   </Portal.Host>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this.manager;\n    const queue = this.queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n      if (action) {\n        // eslint-disable-next-line default-case\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }\n\n  private setManager = (manager: PortalManager | undefined | null) => {\n    this.manager = manager;\n  };\n\n  private mount = (children: React.ReactNode) => {\n    const key = this.nextKey++;\n\n    if (this.manager) {\n      this.manager.mount(key, children);\n    } else {\n      this.queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  private update = (key: number, children: React.ReactNode) => {\n    if (this.manager) {\n      this.manager.update(key, children);\n    } else {\n      const op: Operation = { type: 'mount', key, children };\n      const index = this.queue.findIndex(\n        (o) => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        this.queue[index] = op;\n      } else {\n        this.queue.push(op as Operation);\n      }\n    }\n  };\n\n  private unmount = (key: number) => {\n    if (this.manager) {\n      this.manager.unmount(key);\n    } else {\n      this.queue.push({ type: 'unmount', key });\n    }\n  };\n\n  private nextKey = 0;\n  private queue: Operation[] = [];\n  private manager: PortalManager | null | undefined;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View\n          style={styles.container}\n          collapsable={false}\n          pointerEvents=\"box-none\"\n        >\n          {this.props.children}\n        </View>\n        <PortalManager ref={this.setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}