{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { db, auth, storage } from \"./firebase\";\nimport { useState } from \"react\";\nimport { async } from \"@firebase/util\";\nimport { collection, setDoc, doc, addDoc, getDocs, getDoc, updateDoc, deleteDoc, increment, query, orderBy, where, Timestamp } from \"firebase/firestore\";\nimport { createUserWithEmailAndPassword, signOut, updateCurrentUser } from \"firebase/auth\";\nexport function createNewUser(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _createNewUser.apply(this, arguments);\n}\nfunction _createNewUser() {\n  _createNewUser = _asyncToGenerator(function* (userEmail, password, displayName, userPersonalID, phoneNumber, userPhotoURL, userRank) {\n    var originalUser = auth.currentUser;\n    var newUserID = null;\n    yield createUserWithEmailAndPassword(auth, userEmail, password).then(function (userCredential) {\n      newUserID = userCredential.user.uid;\n      console.log(\"Hello world\");\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n    console.log(\"new user created: \" + newUserID);\n    yield updateCurrentUser(auth, originalUser);\n    console.log(\"current user: \" + auth.currentUser.uid);\n    var docRefID = yield addNewUser(newUserID, userEmail, displayName, userPersonalID, phoneNumber, userPhotoURL, userRank);\n    return docRefID;\n  });\n  return _createNewUser.apply(this, arguments);\n}\nfunction addNewUser(_x8, _x9, _x10, _x11, _x12, _x13, _x14) {\n  return _addNewUser.apply(this, arguments);\n}\nfunction _addNewUser() {\n  _addNewUser = _asyncToGenerator(function* (userID, userEmail, displayName, userPersonalID, userPhoneNumber, userPhotoURI, userRank) {\n    var imageRef = {};\n    if (!userPhotoURI) {\n      imageRef.name = null;\n      imageRef.URL = null;\n    } else {\n      imageRef = yield uploadImageAsync(userPhotoURI);\n    }\n    yield setDoc(doc(db, \"users\", userID), {\n      name: displayName,\n      email: userEmail,\n      personalID: userPersonalID,\n      image: imageRef.URL,\n      imageName: imageRef.name,\n      phoneNumber: userPhoneNumber,\n      rank: userRank,\n      isActive: true\n    }).catch(alert);\n    return userID;\n  });\n  return _addNewUser.apply(this, arguments);\n}","map":{"version":3,"names":["db","auth","storage","useState","async","collection","setDoc","doc","addDoc","getDocs","getDoc","updateDoc","deleteDoc","increment","query","orderBy","where","Timestamp","createUserWithEmailAndPassword","signOut","updateCurrentUser","createNewUser","userEmail","password","displayName","userPersonalID","phoneNumber","userPhotoURL","userRank","originalUser","currentUser","newUserID","then","userCredential","user","uid","console","log","catch","error","errorCode","code","errorMessage","message","docRefID","addNewUser","userID","userPhoneNumber","userPhotoURI","imageRef","name","URL","uploadImageAsync","email","personalID","image","imageName","rank","isActive","alert"],"sources":["C:/Users/salah/Documents/Exchange of holiday apartments/Coding/Final_Project/src/config/cloud.js"],"sourcesContent":["import { db, auth, storage } from \"./firebase\";\r\nimport { useState } from \"react\";\r\nimport { async } from \"@firebase/util\";\r\nimport {\r\n  collection,\r\n  setDoc,\r\n  doc,\r\n  addDoc,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  increment,\r\n  query,\r\n  orderBy,\r\n  where,\r\n  Timestamp,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signOut,\r\n  updateCurrentUser,\r\n} from \"firebase/auth\";\r\n// import * as firebase from \"firebase\";\r\n/**\r\n *\r\n * @param {*} userName\r\n * @param {*} userEmail\r\n * @param {*} userPhoneNumber\r\n * @param {*} userDateCreated\r\n * @param {*} userIdNumber\r\n */\r\nexport async function createNewUser(\r\n  userEmail,\r\n  password,\r\n  displayName,\r\n  userPersonalID,\r\n  phoneNumber,\r\n  userPhotoURL,\r\n  userRank\r\n) {\r\n  let originalUser = auth.currentUser;\r\n  let newUserID = null;\r\n  await createUserWithEmailAndPassword(auth, userEmail, password)\r\n    .then((userCredential) => {\r\n      newUserID = userCredential.user.uid;\r\n      // ...\r\n      console.log(\"Hello world\");\r\n    })\r\n    .catch((error) => {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n    });\r\n  console.log(\"new user created: \" + newUserID);\r\n  await updateCurrentUser(auth, originalUser);\r\n  console.log(\"current user: \" + auth.currentUser.uid);\r\n\r\n  const docRefID = await addNewUser(\r\n    newUserID,\r\n    userEmail,\r\n    displayName,\r\n    userPersonalID,\r\n    phoneNumber,\r\n    userPhotoURL,\r\n    userRank\r\n  );\r\n  return docRefID;\r\n}\r\nasync function addNewUser(\r\n  userID,\r\n  userEmail,\r\n  displayName,\r\n  userPersonalID,\r\n  userPhoneNumber,\r\n  userPhotoURI,\r\n  userRank\r\n) {\r\n  let imageRef = {};\r\n  if (!userPhotoURI) {\r\n    imageRef.name = null;\r\n    imageRef.URL = null;\r\n  } else {\r\n    imageRef = await uploadImageAsync(userPhotoURI);\r\n  }\r\n\r\n  await setDoc(doc(db, \"users\", userID), {\r\n    name: displayName,\r\n    email: userEmail,\r\n    personalID: userPersonalID,\r\n    image: imageRef.URL,\r\n    imageName: imageRef.name,\r\n    phoneNumber: userPhoneNumber,\r\n    rank: userRank,\r\n    isActive: true,\r\n  }).catch(alert);\r\n\r\n  return userID;\r\n}\r\n// export async function handleSignUp(email, password) {\r\n//   try {\r\n//     const response = await firebase\r\n//       .auth()\r\n//       .createUserWithEmailAndPassword(email, password);\r\n\r\n//     console.log(response.user.email);\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//   }\r\n// }\r\n"],"mappings":";AAAA,SAASA,EAAE,EAAEC,IAAI,EAAEC,OAAO;AAC1B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SACEC,UAAU,EACVC,MAAM,EACNC,GAAG,EACHC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,SAAS,QACJ,oBAAoB;AAC3B,SACEC,8BAA8B,EAC9BC,OAAO,EACPC,iBAAiB,QACZ,eAAe;AAUtB,gBAAsBC,aAAa;EAAA;AAAA;AAmClC;EAAA,mCAnCM,WACLC,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACR;IACA,IAAIC,YAAY,GAAG5B,IAAI,CAAC6B,WAAW;IACnC,IAAIC,SAAS,GAAG,IAAI;IACpB,MAAMb,8BAA8B,CAACjB,IAAI,EAAEqB,SAAS,EAAEC,QAAQ,CAAC,CAC5DS,IAAI,CAAC,UAACC,cAAc,EAAK;MACxBF,SAAS,GAAGE,cAAc,CAACC,IAAI,CAACC,GAAG;MAEnCC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB,IAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,IAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;IACpC,CAAC,CAAC;IACJP,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGN,SAAS,CAAC;IAC7C,MAAMX,iBAAiB,CAACnB,IAAI,EAAE4B,YAAY,CAAC;IAC3CO,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGpC,IAAI,CAAC6B,WAAW,CAACK,GAAG,CAAC;IAEpD,IAAMS,QAAQ,SAASC,UAAU,CAC/Bd,SAAS,EACTT,SAAS,EACTE,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAQ,CACT;IACD,OAAOgB,QAAQ;EACjB,CAAC;EAAA;AAAA;AAAA,SACcC,UAAU;EAAA;AAAA;AAAA;EAAA,gCAAzB,WACEC,MAAM,EACNxB,SAAS,EACTE,WAAW,EACXC,cAAc,EACdsB,eAAe,EACfC,YAAY,EACZpB,QAAQ,EACR;IACA,IAAIqB,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAI,CAACD,YAAY,EAAE;MACjBC,QAAQ,CAACC,IAAI,GAAG,IAAI;MACpBD,QAAQ,CAACE,GAAG,GAAG,IAAI;IACrB,CAAC,MAAM;MACLF,QAAQ,SAASG,gBAAgB,CAACJ,YAAY,CAAC;IACjD;IAEA,MAAM1C,MAAM,CAACC,GAAG,CAACP,EAAE,EAAE,OAAO,EAAE8C,MAAM,CAAC,EAAE;MACrCI,IAAI,EAAE1B,WAAW;MACjB6B,KAAK,EAAE/B,SAAS;MAChBgC,UAAU,EAAE7B,cAAc;MAC1B8B,KAAK,EAAEN,QAAQ,CAACE,GAAG;MACnBK,SAAS,EAAEP,QAAQ,CAACC,IAAI;MACxBxB,WAAW,EAAEqB,eAAe;MAC5BU,IAAI,EAAE7B,QAAQ;MACd8B,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACpB,KAAK,CAACqB,KAAK,CAAC;IAEf,OAAOb,MAAM;EACf,CAAC;EAAA;AAAA"},"metadata":{},"sourceType":"module"}