{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  (function () {\n    'use strict';\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    \"use strict\";\n    var React = require(\"react\");\n    require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\n    var ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\n    var Scheduler = require(\"scheduler\");\n    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning(\"warn\", format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning(\"error\", format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        if (stack !== \"\") {\n          format += \"%s\";\n          args = args.concat([stack]);\n        }\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        });\n        argsWithFormat.unshift(\"Warning: \" + format);\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n      try {\n        func.apply(context, funcArgs);\n      } catch (error) {\n        this.onError(error);\n      }\n    }\n    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n    {\n      if (typeof window !== \"undefined\" && typeof window.dispatchEvent === \"function\" && typeof document !== \"undefined\" && typeof document.createEvent === \"function\") {\n        var fakeNode = document.createElement(\"react\");\n        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n          if (typeof document === \"undefined\" || document === null) {\n            throw new Error(\"The `document` global was defined when React was initialized, but is not \" + \"defined anymore. This can happen in a test environment if a component \" + \"schedules an update from an asynchronous callback, but the test has already \" + \"finished running. To solve this, you can either unmount the component at \" + \"the end of your test (and ensure that any asynchronous operations get \" + \"canceled in `componentWillUnmount`), or you can change the test itself \" + \"to be asynchronous.\");\n          }\n          var evt = document.createEvent(\"Event\");\n          var didCall = false;\n          var didError = true;\n          var windowEvent = window.event;\n          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, \"event\");\n          function restoreAfterDispatch() {\n            fakeNode.removeEventListener(evtType, callCallback, false);\n            if (typeof window.event !== \"undefined\" && window.hasOwnProperty(\"event\")) {\n              window.event = windowEvent;\n            }\n          }\n          var funcArgs = Array.prototype.slice.call(arguments, 3);\n          function callCallback() {\n            didCall = true;\n            restoreAfterDispatch();\n            func.apply(context, funcArgs);\n            didError = false;\n          }\n          var error;\n          var didSetError = false;\n          var isCrossOriginError = false;\n          function handleWindowError(event) {\n            error = event.error;\n            didSetError = true;\n            if (error === null && event.colno === 0 && event.lineno === 0) {\n              isCrossOriginError = true;\n            }\n            if (event.defaultPrevented) {\n              if (error != null && typeof error === \"object\") {\n                try {\n                  error._suppressLogging = true;\n                } catch (inner) {}\n              }\n            }\n          }\n          var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\");\n          window.addEventListener(\"error\", handleWindowError);\n          fakeNode.addEventListener(evtType, callCallback, false);\n          evt.initEvent(evtType, false, false);\n          fakeNode.dispatchEvent(evt);\n          if (windowEventDescriptor) {\n            Object.defineProperty(window, \"event\", windowEventDescriptor);\n          }\n          if (didCall && didError) {\n            if (!didSetError) {\n              error = new Error(\"An error was thrown inside one of your components, but React \" + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + \"your browser. Try triggering the error in production mode, \" + \"or switching to a modern browser. If you suspect that this is \" + \"actually an issue with React, please file an issue.\");\n            } else if (isCrossOriginError) {\n              error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + \"the actual error object in development. \" + \"See https://reactjs.org/link/crossorigin-error for more information.\");\n            }\n            this.onError(error);\n          }\n          window.removeEventListener(\"error\", handleWindowError);\n          if (!didCall) {\n            restoreAfterDispatch();\n            return invokeGuardedCallbackProd.apply(this, arguments);\n          }\n        };\n      }\n    }\n    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n    var hasError = false;\n    var caughtError = null;\n    var hasRethrowError = false;\n    var rethrowError = null;\n    var reporter = {\n      onError: function onError(error) {\n        hasError = true;\n        caughtError = error;\n      }\n    };\n    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n      hasError = false;\n      caughtError = null;\n      invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n    }\n    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n      invokeGuardedCallback.apply(this, arguments);\n      if (hasError) {\n        var error = clearCaughtError();\n        if (!hasRethrowError) {\n          hasRethrowError = true;\n          rethrowError = error;\n        }\n      }\n    }\n    function rethrowCaughtError() {\n      if (hasRethrowError) {\n        var error = rethrowError;\n        hasRethrowError = false;\n        rethrowError = null;\n        throw error;\n      }\n    }\n    function hasCaughtError() {\n      return hasError;\n    }\n    function clearCaughtError() {\n      if (hasError) {\n        var error = caughtError;\n        hasError = false;\n        caughtError = null;\n        return error;\n      } else {\n        throw new Error(\"clearCaughtError was called but no error was captured. This error \" + \"is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    var isArrayImpl = Array.isArray;\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n    var getFiberCurrentPropsFromNode = null;\n    var getInstanceFromNode = null;\n    var getNodeFromInstance = null;\n    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\n      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n      getInstanceFromNode = getInstanceFromNodeImpl;\n      getNodeFromInstance = getNodeFromInstanceImpl;\n      {\n        if (!getNodeFromInstance || !getInstanceFromNode) {\n          error(\"EventPluginUtils.setComponentTree(...): Injected \" + \"module is missing getNodeFromInstance or getInstanceFromNode.\");\n        }\n      }\n    }\n    var validateEventDispatches;\n    {\n      validateEventDispatches = function validateEventDispatches(event) {\n        var dispatchListeners = event._dispatchListeners;\n        var dispatchInstances = event._dispatchInstances;\n        var listenersIsArr = isArray(dispatchListeners);\n        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n        var instancesIsArr = isArray(dispatchInstances);\n        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n        if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n          error(\"EventPluginUtils: Invalid `event`.\");\n        }\n      };\n    }\n    function executeDispatch(event, listener, inst) {\n      var type = event.type || \"unknown-event\";\n      event.currentTarget = getNodeFromInstance(inst);\n      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n      event.currentTarget = null;\n    }\n    function executeDispatchesInOrder(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n        }\n      } else if (dispatchListeners) {\n        executeDispatch(event, dispatchListeners, dispatchInstances);\n      }\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n    }\n    function executeDispatchesInOrderStopAtTrueImpl(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n          if (dispatchListeners[i](event, dispatchInstances[i])) {\n            return dispatchInstances[i];\n          }\n        }\n      } else if (dispatchListeners) {\n        if (dispatchListeners(event, dispatchInstances)) {\n          return dispatchInstances;\n        }\n      }\n      return null;\n    }\n    function executeDispatchesInOrderStopAtTrue(event) {\n      var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n      event._dispatchInstances = null;\n      event._dispatchListeners = null;\n      return ret;\n    }\n    function executeDirectDispatch(event) {\n      {\n        validateEventDispatches(event);\n      }\n      var dispatchListener = event._dispatchListeners;\n      var dispatchInstance = event._dispatchInstances;\n      if (isArray(dispatchListener)) {\n        throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n      }\n      event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;\n      var res = dispatchListener ? dispatchListener(event) : null;\n      event.currentTarget = null;\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n      return res;\n    }\n    function hasDispatches(event) {\n      return !!event._dispatchListeners;\n    }\n    var assign = Object.assign;\n    var EVENT_POOL_SIZE = 10;\n    var EventInterface = {\n      type: null,\n      target: null,\n      currentTarget: function currentTarget() {\n        return null;\n      },\n      eventPhase: null,\n      bubbles: null,\n      cancelable: null,\n      timeStamp: function timeStamp(event) {\n        return event.timeStamp || Date.now();\n      },\n      defaultPrevented: null,\n      isTrusted: null\n    };\n    function functionThatReturnsTrue() {\n      return true;\n    }\n    function functionThatReturnsFalse() {\n      return false;\n    }\n    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n      {\n        delete this.nativeEvent;\n        delete this.preventDefault;\n        delete this.stopPropagation;\n        delete this.isDefaultPrevented;\n        delete this.isPropagationStopped;\n      }\n      this.dispatchConfig = dispatchConfig;\n      this._targetInst = targetInst;\n      this.nativeEvent = nativeEvent;\n      this._dispatchListeners = null;\n      this._dispatchInstances = null;\n      var Interface = this.constructor.Interface;\n      for (var propName in Interface) {\n        if (!Interface.hasOwnProperty(propName)) {\n          continue;\n        }\n        {\n          delete this[propName];\n        }\n        var normalize = Interface[propName];\n        if (normalize) {\n          this[propName] = normalize(nativeEvent);\n        } else {\n          if (propName === \"target\") {\n            this.target = nativeEventTarget;\n          } else {\n            this[propName] = nativeEvent[propName];\n          }\n        }\n      }\n      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n      if (defaultPrevented) {\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      } else {\n        this.isDefaultPrevented = functionThatReturnsFalse;\n      }\n      this.isPropagationStopped = functionThatReturnsFalse;\n      return this;\n    }\n    assign(SyntheticEvent.prototype, {\n      preventDefault: function preventDefault() {\n        this.defaultPrevented = true;\n        var event = this.nativeEvent;\n        if (!event) {\n          return;\n        }\n        if (event.preventDefault) {\n          event.preventDefault();\n        } else if (typeof event.returnValue !== \"unknown\") {\n          event.returnValue = false;\n        }\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      },\n      stopPropagation: function stopPropagation() {\n        var event = this.nativeEvent;\n        if (!event) {\n          return;\n        }\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        } else if (typeof event.cancelBubble !== \"unknown\") {\n          event.cancelBubble = true;\n        }\n        this.isPropagationStopped = functionThatReturnsTrue;\n      },\n      persist: function persist() {\n        this.isPersistent = functionThatReturnsTrue;\n      },\n      isPersistent: functionThatReturnsFalse,\n      destructor: function destructor() {\n        var Interface = this.constructor.Interface;\n        for (var propName in Interface) {\n          {\n            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n          }\n        }\n        this.dispatchConfig = null;\n        this._targetInst = null;\n        this.nativeEvent = null;\n        this.isDefaultPrevented = functionThatReturnsFalse;\n        this.isPropagationStopped = functionThatReturnsFalse;\n        this._dispatchListeners = null;\n        this._dispatchInstances = null;\n        {\n          Object.defineProperty(this, \"nativeEvent\", getPooledWarningPropertyDefinition(\"nativeEvent\", null));\n          Object.defineProperty(this, \"isDefaultPrevented\", getPooledWarningPropertyDefinition(\"isDefaultPrevented\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"isPropagationStopped\", getPooledWarningPropertyDefinition(\"isPropagationStopped\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"preventDefault\", getPooledWarningPropertyDefinition(\"preventDefault\", function () {}));\n          Object.defineProperty(this, \"stopPropagation\", getPooledWarningPropertyDefinition(\"stopPropagation\", function () {}));\n        }\n      }\n    });\n    SyntheticEvent.Interface = EventInterface;\n    SyntheticEvent.extend = function (Interface) {\n      var Super = this;\n      var E = function E() {};\n      E.prototype = Super.prototype;\n      var prototype = new E();\n      function Class() {\n        return Super.apply(this, arguments);\n      }\n      assign(prototype, Class.prototype);\n      Class.prototype = prototype;\n      Class.prototype.constructor = Class;\n      Class.Interface = assign({}, Super.Interface, Interface);\n      Class.extend = Super.extend;\n      addEventPoolingTo(Class);\n      return Class;\n    };\n    addEventPoolingTo(SyntheticEvent);\n    function getPooledWarningPropertyDefinition(propName, getVal) {\n      function set(val) {\n        var action = isFunction ? \"setting the method\" : \"setting the property\";\n        warn(action, \"This is effectively a no-op\");\n        return val;\n      }\n      function get() {\n        var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n        var result = isFunction ? \"This is a no-op function\" : \"This is set to null\";\n        warn(action, result);\n        return getVal;\n      }\n      function warn(action, result) {\n        {\n          error(\"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + \"If you must keep the original synthetic event around, use event.persist(). \" + \"See https://reactjs.org/link/event-pooling for more information.\", action, propName, result);\n        }\n      }\n      var isFunction = typeof getVal === \"function\";\n      return {\n        configurable: true,\n        set: set,\n        get: get\n      };\n    }\n    function createOrGetPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n      var EventConstructor = this;\n      if (EventConstructor.eventPool.length) {\n        var instance = EventConstructor.eventPool.pop();\n        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n        return instance;\n      }\n      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n    }\n    function releasePooledEvent(event) {\n      var EventConstructor = this;\n      if (!(event instanceof EventConstructor)) {\n        throw new Error(\"Trying to release an event instance into a pool of a different type.\");\n      }\n      event.destructor();\n      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n        EventConstructor.eventPool.push(event);\n      }\n    }\n    function addEventPoolingTo(EventConstructor) {\n      EventConstructor.getPooled = createOrGetPooledEvent;\n      EventConstructor.eventPool = [];\n      EventConstructor.release = releasePooledEvent;\n    }\n    var ResponderSyntheticEvent = SyntheticEvent.extend({\n      touchHistory: function touchHistory(nativeEvent) {\n        return null;\n      }\n    });\n    var TOP_TOUCH_START = \"topTouchStart\";\n    var TOP_TOUCH_MOVE = \"topTouchMove\";\n    var TOP_TOUCH_END = \"topTouchEnd\";\n    var TOP_TOUCH_CANCEL = \"topTouchCancel\";\n    var TOP_SCROLL = \"topScroll\";\n    var TOP_SELECTION_CHANGE = \"topSelectionChange\";\n    function isStartish(topLevelType) {\n      return topLevelType === TOP_TOUCH_START;\n    }\n    function isMoveish(topLevelType) {\n      return topLevelType === TOP_TOUCH_MOVE;\n    }\n    function isEndish(topLevelType) {\n      return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n    }\n    var startDependencies = [TOP_TOUCH_START];\n    var moveDependencies = [TOP_TOUCH_MOVE];\n    var endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n    var MAX_TOUCH_BANK = 20;\n    var touchBank = [];\n    var touchHistory = {\n      touchBank: touchBank,\n      numberActiveTouches: 0,\n      indexOfSingleActiveTouch: -1,\n      mostRecentTimeStamp: 0\n    };\n    function timestampForTouch(touch) {\n      return touch.timeStamp || touch.timestamp;\n    }\n    function createTouchRecord(touch) {\n      return {\n        touchActive: true,\n        startPageX: touch.pageX,\n        startPageY: touch.pageY,\n        startTimeStamp: timestampForTouch(touch),\n        currentPageX: touch.pageX,\n        currentPageY: touch.pageY,\n        currentTimeStamp: timestampForTouch(touch),\n        previousPageX: touch.pageX,\n        previousPageY: touch.pageY,\n        previousTimeStamp: timestampForTouch(touch)\n      };\n    }\n    function resetTouchRecord(touchRecord, touch) {\n      touchRecord.touchActive = true;\n      touchRecord.startPageX = touch.pageX;\n      touchRecord.startPageY = touch.pageY;\n      touchRecord.startTimeStamp = timestampForTouch(touch);\n      touchRecord.currentPageX = touch.pageX;\n      touchRecord.currentPageY = touch.pageY;\n      touchRecord.currentTimeStamp = timestampForTouch(touch);\n      touchRecord.previousPageX = touch.pageX;\n      touchRecord.previousPageY = touch.pageY;\n      touchRecord.previousTimeStamp = timestampForTouch(touch);\n    }\n    function getTouchIdentifier(_ref) {\n      var identifier = _ref.identifier;\n      if (identifier == null) {\n        throw new Error(\"Touch object is missing identifier.\");\n      }\n      {\n        if (identifier > MAX_TOUCH_BANK) {\n          error(\"Touch identifier %s is greater than maximum supported %s which causes \" + \"performance issues backfilling array locations for all of the indices.\", identifier, MAX_TOUCH_BANK);\n        }\n      }\n      return identifier;\n    }\n    function recordTouchStart(touch) {\n      var identifier = getTouchIdentifier(touch);\n      var touchRecord = touchBank[identifier];\n      if (touchRecord) {\n        resetTouchRecord(touchRecord, touch);\n      } else {\n        touchBank[identifier] = createTouchRecord(touch);\n      }\n      touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n    }\n    function recordTouchMove(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n      if (touchRecord) {\n        touchRecord.touchActive = true;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch move without a touch start.\\n\" + \"Touch Move: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n    function recordTouchEnd(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n      if (touchRecord) {\n        touchRecord.touchActive = false;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch end without a touch start.\\n\" + \"Touch End: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n    function printTouch(touch) {\n      return JSON.stringify({\n        identifier: touch.identifier,\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        timestamp: timestampForTouch(touch)\n      });\n    }\n    function printTouchBank() {\n      var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n      if (touchBank.length > MAX_TOUCH_BANK) {\n        printed += \" (original size: \" + touchBank.length + \")\";\n      }\n      return printed;\n    }\n    var instrumentationCallback;\n    var ResponderTouchHistoryStore = {\n      instrument: function instrument(callback) {\n        instrumentationCallback = callback;\n      },\n      recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {\n        if (instrumentationCallback != null) {\n          instrumentationCallback(topLevelType, nativeEvent);\n        }\n        if (isMoveish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchMove);\n        } else if (isStartish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchStart);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n          if (touchHistory.numberActiveTouches === 1) {\n            touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n          }\n        } else if (isEndish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchEnd);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n          if (touchHistory.numberActiveTouches === 1) {\n            for (var i = 0; i < touchBank.length; i++) {\n              var touchTrackToCheck = touchBank[i];\n              if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n                touchHistory.indexOfSingleActiveTouch = i;\n                break;\n              }\n            }\n            {\n              var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n              if (activeRecord == null || !activeRecord.touchActive) {\n                error(\"Cannot find single active touch.\");\n              }\n            }\n          }\n        }\n      },\n      touchHistory: touchHistory\n    };\n    function accumulate(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulate(...): Accumulated items must not be null or undefined.\");\n      }\n      if (current == null) {\n        return next;\n      }\n      if (isArray(current)) {\n        return current.concat(next);\n      }\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n      return [current, next];\n    }\n    function accumulateInto(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulateInto(...): Accumulated items must not be null or undefined.\");\n      }\n      if (current == null) {\n        return next;\n      }\n      if (isArray(current)) {\n        if (isArray(next)) {\n          current.push.apply(current, next);\n          return current;\n        }\n        current.push(next);\n        return current;\n      }\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n      return [current, next];\n    }\n    function forEachAccumulated(arr, cb, scope) {\n      if (Array.isArray(arr)) {\n        arr.forEach(cb, scope);\n      } else if (arr) {\n        cb.call(scope, arr);\n      }\n    }\n    var FunctionComponent = 0;\n    var ClassComponent = 1;\n    var IndeterminateComponent = 2;\n    var HostRoot = 3;\n    var HostPortal = 4;\n    var HostComponent = 5;\n    var HostText = 6;\n    var Fragment = 7;\n    var Mode = 8;\n    var ContextConsumer = 9;\n    var ContextProvider = 10;\n    var ForwardRef = 11;\n    var Profiler = 12;\n    var SuspenseComponent = 13;\n    var MemoComponent = 14;\n    var SimpleMemoComponent = 15;\n    var LazyComponent = 16;\n    var IncompleteClassComponent = 17;\n    var DehydratedFragment = 18;\n    var SuspenseListComponent = 19;\n    var ScopeComponent = 21;\n    var OffscreenComponent = 22;\n    var LegacyHiddenComponent = 23;\n    var CacheComponent = 24;\n    var TracingMarkerComponent = 25;\n    var responderInst = null;\n    var trackedTouchCount = 0;\n    var changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {\n      var oldResponderInst = responderInst;\n      responderInst = nextResponderInst;\n      if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n        ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);\n      }\n    };\n    var eventTypes = {\n      startShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onStartShouldSetResponder\",\n          captured: \"onStartShouldSetResponderCapture\"\n        },\n        dependencies: startDependencies\n      },\n      scrollShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onScrollShouldSetResponder\",\n          captured: \"onScrollShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SCROLL]\n      },\n      selectionChangeShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onSelectionChangeShouldSetResponder\",\n          captured: \"onSelectionChangeShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SELECTION_CHANGE]\n      },\n      moveShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onMoveShouldSetResponder\",\n          captured: \"onMoveShouldSetResponderCapture\"\n        },\n        dependencies: moveDependencies\n      },\n      responderStart: {\n        registrationName: \"onResponderStart\",\n        dependencies: startDependencies\n      },\n      responderMove: {\n        registrationName: \"onResponderMove\",\n        dependencies: moveDependencies\n      },\n      responderEnd: {\n        registrationName: \"onResponderEnd\",\n        dependencies: endDependencies\n      },\n      responderRelease: {\n        registrationName: \"onResponderRelease\",\n        dependencies: endDependencies\n      },\n      responderTerminationRequest: {\n        registrationName: \"onResponderTerminationRequest\",\n        dependencies: []\n      },\n      responderGrant: {\n        registrationName: \"onResponderGrant\",\n        dependencies: []\n      },\n      responderReject: {\n        registrationName: \"onResponderReject\",\n        dependencies: []\n      },\n      responderTerminate: {\n        registrationName: \"onResponderTerminate\",\n        dependencies: []\n      }\n    };\n    function getParent(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n      if (inst) {\n        return inst;\n      }\n      return null;\n    }\n    function getLowestCommonAncestor(instA, instB) {\n      var depthA = 0;\n      for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n        depthA++;\n      }\n      var depthB = 0;\n      for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n        depthB++;\n      }\n      while (depthA - depthB > 0) {\n        instA = getParent(instA);\n        depthA--;\n      }\n      while (depthB - depthA > 0) {\n        instB = getParent(instB);\n        depthB--;\n      }\n      var depth = depthA;\n      while (depth--) {\n        if (instA === instB || instA === instB.alternate) {\n          return instA;\n        }\n        instA = getParent(instA);\n        instB = getParent(instB);\n      }\n      return null;\n    }\n    function isAncestor(instA, instB) {\n      while (instB) {\n        if (instA === instB || instA === instB.alternate) {\n          return true;\n        }\n        instB = getParent(instB);\n      }\n      return false;\n    }\n    function traverseTwoPhase(inst, fn, arg) {\n      var path = [];\n      while (inst) {\n        path.push(inst);\n        inst = getParent(inst);\n      }\n      var i;\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n      for (i = 0; i < path.length; i++) {\n        fn(path[i], \"bubbled\", arg);\n      }\n    }\n    function getListener(inst, registrationName) {\n      var stateNode = inst.stateNode;\n      if (stateNode === null) {\n        return null;\n      }\n      var props = getFiberCurrentPropsFromNode(stateNode);\n      if (props === null) {\n        return null;\n      }\n      var listener = props[registrationName];\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n      return listener;\n    }\n    function listenerAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListener(inst, registrationName);\n    }\n    function accumulateDirectionalDispatches(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listener = listenerAtPhase(inst, event, phase);\n      if (listener) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n      }\n    }\n    function accumulateDispatches(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listener = getListener(inst, registrationName);\n        if (listener) {\n          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n        }\n      }\n    }\n    function accumulateDirectDispatchesSingle(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches(event._targetInst, null, event);\n      }\n    }\n    function accumulateDirectDispatches(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle);\n    }\n    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        var targetInst = event._targetInst;\n        var parentInst = targetInst ? getParent(targetInst) : null;\n        traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n      }\n    }\n    function accumulateTwoPhaseDispatchesSkipTarget(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n    }\n    function accumulateTwoPhaseDispatchesSingle(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n      }\n    }\n    function accumulateTwoPhaseDispatches(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n    }\n    function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === TOP_SELECTION_CHANGE ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\n      var bubbleShouldSetFrom = !responderInst ? targetInst : getLowestCommonAncestor(responderInst, targetInst);\n      var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n      var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\n      shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      if (skipOverBubbleShouldSetFrom) {\n        accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n      } else {\n        accumulateTwoPhaseDispatches(shouldSetEvent);\n      }\n      var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n      if (!shouldSetEvent.isPersistent()) {\n        shouldSetEvent.constructor.release(shouldSetEvent);\n      }\n      if (!wantsResponderInst || wantsResponderInst === responderInst) {\n        return null;\n      }\n      var extracted;\n      var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);\n      grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(grantEvent);\n      var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n      if (responderInst) {\n        var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);\n        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n        accumulateDirectDispatches(terminationRequestEvent);\n        var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\n        if (!terminationRequestEvent.isPersistent()) {\n          terminationRequestEvent.constructor.release(terminationRequestEvent);\n        }\n        if (shouldSwitch) {\n          var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);\n          terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(terminateEvent);\n          extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n          changeResponder(wantsResponderInst, blockHostResponder);\n        } else {\n          var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);\n          rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(rejectEvent);\n          extracted = accumulate(extracted, rejectEvent);\n        }\n      } else {\n        extracted = accumulate(extracted, grantEvent);\n        changeResponder(wantsResponderInst, blockHostResponder);\n      }\n      return extracted;\n    }\n    function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n      return topLevelInst && (topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE || isStartish(topLevelType) || isMoveish(topLevelType));\n    }\n    function noResponderTouches(nativeEvent) {\n      var touches = nativeEvent.touches;\n      if (!touches || touches.length === 0) {\n        return true;\n      }\n      for (var i = 0; i < touches.length; i++) {\n        var activeTouch = touches[i];\n        var target = activeTouch.target;\n        if (target !== null && target !== undefined && target !== 0) {\n          var targetInst = getInstanceFromNode(target);\n          if (isAncestor(responderInst, targetInst)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    var ResponderEventPlugin = {\n      _getResponder: function _getResponder() {\n        return responderInst;\n      },\n      eventTypes: eventTypes,\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {\n        if (isStartish(topLevelType)) {\n          trackedTouchCount += 1;\n        } else if (isEndish(topLevelType)) {\n          if (trackedTouchCount >= 0) {\n            trackedTouchCount -= 1;\n          } else {\n            {\n              warn(\"Ended a touch event which was not counted in `trackedTouchCount`.\");\n            }\n            return null;\n          }\n        }\n        ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;\n        var isResponderTouchStart = responderInst && isStartish(topLevelType);\n        var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n        var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n        var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\n        if (incrementalTouch) {\n          var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);\n          gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(gesture);\n          extracted = accumulate(extracted, gesture);\n        }\n        var isResponderTerminate = responderInst && topLevelType === TOP_TOUCH_CANCEL;\n        var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\n        var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\n        if (finalTouch) {\n          var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);\n          finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(finalEvent);\n          extracted = accumulate(extracted, finalEvent);\n          changeResponder(null);\n        }\n        return extracted;\n      },\n      GlobalResponderHandler: null,\n      injection: {\n        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {\n          ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n        }\n      }\n    };\n    var eventPluginOrder = null;\n    var namesToPlugins = {};\n    function recomputePluginOrdering() {\n      if (!eventPluginOrder) {\n        return;\n      }\n      for (var pluginName in namesToPlugins) {\n        var pluginModule = namesToPlugins[pluginName];\n        var pluginIndex = eventPluginOrder.indexOf(pluginName);\n        if (pluginIndex <= -1) {\n          throw new Error(\"EventPluginRegistry: Cannot inject event plugins that do not exist in \" + (\"the plugin ordering, `\" + pluginName + \"`.\"));\n        }\n        if (plugins[pluginIndex]) {\n          continue;\n        }\n        if (!pluginModule.extractEvents) {\n          throw new Error(\"EventPluginRegistry: Event plugins must implement an `extractEvents` \" + (\"method, but `\" + pluginName + \"` does not.\"));\n        }\n        plugins[pluginIndex] = pluginModule;\n        var publishedEvents = pluginModule.eventTypes;\n        for (var eventName in publishedEvents) {\n          if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {\n            throw new Error(\"EventPluginRegistry: Failed to publish event `\" + eventName + \"` for plugin `\" + pluginName + \"`.\");\n          }\n        }\n      }\n    }\n    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"event name, `\" + eventName + \"`.\"));\n      }\n      eventNameDispatchConfigs[eventName] = dispatchConfig;\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n      if (phasedRegistrationNames) {\n        for (var phaseName in phasedRegistrationNames) {\n          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n            var phasedRegistrationName = phasedRegistrationNames[phaseName];\n            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n          }\n        }\n        return true;\n      } else if (dispatchConfig.registrationName) {\n        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n        return true;\n      }\n      return false;\n    }\n    function publishRegistrationName(registrationName, pluginModule, eventName) {\n      if (registrationNameModules[registrationName]) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"registration name, `\" + registrationName + \"`.\"));\n      }\n      registrationNameModules[registrationName] = pluginModule;\n      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n      {\n        var lowerCasedName = registrationName.toLowerCase();\n      }\n    }\n    var plugins = [];\n    var eventNameDispatchConfigs = {};\n    var registrationNameModules = {};\n    var registrationNameDependencies = {};\n    function injectEventPluginOrder(injectedEventPluginOrder) {\n      if (eventPluginOrder) {\n        throw new Error(\"EventPluginRegistry: Cannot inject event plugin ordering more than \" + \"once. You are likely trying to load more than one copy of React.\");\n      }\n      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n      recomputePluginOrdering();\n    }\n    function injectEventPluginsByName(injectedNamesToPlugins) {\n      var isOrderingDirty = false;\n      for (var pluginName in injectedNamesToPlugins) {\n        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n          continue;\n        }\n        var pluginModule = injectedNamesToPlugins[pluginName];\n        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n          if (namesToPlugins[pluginName]) {\n            throw new Error(\"EventPluginRegistry: Cannot inject two different event plugins \" + (\"using the same name, `\" + pluginName + \"`.\"));\n          }\n          namesToPlugins[pluginName] = pluginModule;\n          isOrderingDirty = true;\n        }\n      }\n      if (isOrderingDirty) {\n        recomputePluginOrdering();\n      }\n    }\n    function getListeners(inst, registrationName, phase, dispatchToImperativeListeners) {\n      var stateNode = inst.stateNode;\n      if (stateNode === null) {\n        return null;\n      }\n      var props = getFiberCurrentPropsFromNode(stateNode);\n      if (props === null) {\n        return null;\n      }\n      var listener = props[registrationName];\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n      if (!(dispatchToImperativeListeners && stateNode.canonical && stateNode.canonical._eventListeners)) {\n        return listener;\n      }\n      var listeners = [];\n      if (listener) {\n        listeners.push(listener);\n      }\n      var requestedPhaseIsCapture = phase === \"captured\";\n      var mangledImperativeRegistrationName = requestedPhaseIsCapture ? \"rn:\" + registrationName.replace(/Capture$/, \"\") : \"rn:\" + registrationName;\n      if (stateNode.canonical._eventListeners[mangledImperativeRegistrationName] && stateNode.canonical._eventListeners[mangledImperativeRegistrationName].length > 0) {\n        var eventListeners = stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n        eventListeners.forEach(function (listenerObj) {\n          var isCaptureEvent = listenerObj.options.capture != null && listenerObj.options.capture;\n          if (isCaptureEvent !== requestedPhaseIsCapture) {\n            return;\n          }\n          var listenerFnWrapper = function listenerFnWrapper(syntheticEvent) {\n            var eventInst = new ReactNativePrivateInterface.CustomEvent(mangledImperativeRegistrationName, {\n              detail: syntheticEvent.nativeEvent\n            });\n            eventInst.isTrusted = true;\n            eventInst.setSyntheticEvent(syntheticEvent);\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n            listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n          };\n          if (listenerObj.options.once) {\n            listeners.push(function () {\n              stateNode.canonical.removeEventListener_unstable(mangledImperativeRegistrationName, listenerObj.listener, listenerObj.capture);\n              if (!listenerObj.invalidated) {\n                listenerObj.invalidated = true;\n                listenerObj.listener.apply(listenerObj, arguments);\n              }\n            });\n          } else {\n            listeners.push(listenerFnWrapper);\n          }\n        });\n      }\n      if (listeners.length === 0) {\n        return null;\n      }\n      if (listeners.length === 1) {\n        return listeners[0];\n      }\n      return listeners;\n    }\n    var customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,\n      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;\n    function listenersAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListeners(inst, registrationName, propagationPhase, true);\n    }\n    function accumulateListenersAndInstances(inst, event, listeners) {\n      var listenersLength = listeners ? isArray(listeners) ? listeners.length : 1 : 0;\n      if (listenersLength > 0) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listeners);\n        if (event._dispatchInstances == null && listenersLength === 1) {\n          event._dispatchInstances = inst;\n        } else {\n          event._dispatchInstances = event._dispatchInstances || [];\n          if (!isArray(event._dispatchInstances)) {\n            event._dispatchInstances = [event._dispatchInstances];\n          }\n          for (var i = 0; i < listenersLength; i++) {\n            event._dispatchInstances.push(inst);\n          }\n        }\n      }\n    }\n    function accumulateDirectionalDispatches$1(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listeners = listenersAtPhase(inst, event, phase);\n      accumulateListenersAndInstances(inst, event, listeners);\n    }\n    function getParent$1(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n      if (inst) {\n        return inst;\n      }\n      return null;\n    }\n    function traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n      var path = [];\n      while (inst) {\n        path.push(inst);\n        inst = getParent$1(inst);\n      }\n      var i;\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n      if (skipBubbling) {\n        fn(path[0], \"bubbled\", arg);\n      } else {\n        for (i = 0; i < path.length; i++) {\n          fn(path[i], \"bubbled\", arg);\n        }\n      }\n    }\n    function accumulateTwoPhaseDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, false);\n      }\n    }\n    function accumulateTwoPhaseDispatches$1(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n    }\n    function accumulateCapturePhaseDispatches(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, true);\n      }\n    }\n    function accumulateDispatches$1(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n        accumulateListenersAndInstances(inst, event, listeners);\n      }\n    }\n    function accumulateDirectDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches$1(event._targetInst, null, event);\n      }\n    }\n    function accumulateDirectDispatches$1(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n    }\n    var ReactNativeBridgeEventPlugin = {\n      eventTypes: {},\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n        if (targetInst == null) {\n          return null;\n        }\n        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n        var directDispatchConfig = customDirectEventTypes[topLevelType];\n        if (!bubbleDispatchConfig && !directDispatchConfig) {\n          throw new Error('Unsupported top level event type \"' + topLevelType + '\" dispatched');\n        }\n        var event = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n        if (bubbleDispatchConfig) {\n          var skipBubbling = event != null && event.dispatchConfig.phasedRegistrationNames != null && event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n          if (skipBubbling) {\n            accumulateCapturePhaseDispatches(event);\n          } else {\n            accumulateTwoPhaseDispatches$1(event);\n          }\n        } else if (directDispatchConfig) {\n          accumulateDirectDispatches$1(event);\n        } else {\n          return null;\n        }\n        return event;\n      }\n    };\n    var ReactNativeEventPluginOrder = [\"ResponderEventPlugin\", \"ReactNativeBridgeEventPlugin\"];\n    injectEventPluginOrder(ReactNativeEventPluginOrder);\n    injectEventPluginsByName({\n      ResponderEventPlugin: ResponderEventPlugin,\n      ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n    });\n    var instanceCache = new Map();\n    var instanceProps = new Map();\n    function precacheFiberNode(hostInst, tag) {\n      instanceCache.set(tag, hostInst);\n    }\n    function uncacheFiberNode(tag) {\n      instanceCache.delete(tag);\n      instanceProps.delete(tag);\n    }\n    function getInstanceFromTag(tag) {\n      return instanceCache.get(tag) || null;\n    }\n    function getTagFromInstance(inst) {\n      var nativeInstance = inst.stateNode;\n      var tag = nativeInstance._nativeTag;\n      if (tag === undefined) {\n        nativeInstance = nativeInstance.canonical;\n        tag = nativeInstance._nativeTag;\n      }\n      if (!tag) {\n        throw new Error(\"All native instances should have a tag.\");\n      }\n      return nativeInstance;\n    }\n    function getFiberCurrentPropsFromNode$1(stateNode) {\n      return instanceProps.get(stateNode._nativeTag) || null;\n    }\n    function updateFiberProps(tag, props) {\n      instanceProps.set(tag, props);\n    }\n    var batchedUpdatesImpl = function batchedUpdatesImpl(fn, bookkeeping) {\n      return fn(bookkeeping);\n    };\n    var isInsideEventHandler = false;\n    function batchedUpdates(fn, bookkeeping) {\n      if (isInsideEventHandler) {\n        return fn(bookkeeping);\n      }\n      isInsideEventHandler = true;\n      try {\n        return batchedUpdatesImpl(fn, bookkeeping);\n      } finally {\n        isInsideEventHandler = false;\n      }\n    }\n    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n      batchedUpdatesImpl = _batchedUpdatesImpl;\n    }\n    var eventQueue = null;\n    var executeDispatchesAndRelease = function executeDispatchesAndRelease(event) {\n      if (event) {\n        executeDispatchesInOrder(event);\n        if (!event.isPersistent()) {\n          event.constructor.release(event);\n        }\n      }\n    };\n    var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {\n      return executeDispatchesAndRelease(e);\n    };\n    function runEventsInBatch(events) {\n      if (events !== null) {\n        eventQueue = accumulateInto(eventQueue, events);\n      }\n      var processingEventQueue = eventQueue;\n      eventQueue = null;\n      if (!processingEventQueue) {\n        return;\n      }\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n      if (eventQueue) {\n        throw new Error(\"processEventQueue(): Additional events were enqueued while processing \" + \"an event queue. Support for this has not yet been implemented.\");\n      }\n      rethrowCaughtError();\n    }\n    var EMPTY_NATIVE_EVENT = {};\n    var touchSubsequence = function touchSubsequence(touches, indices) {\n      var ret = [];\n      for (var i = 0; i < indices.length; i++) {\n        ret.push(touches[indices[i]]);\n      }\n      return ret;\n    };\n    var removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {\n      var rippedOut = [];\n      var temp = touches;\n      for (var i = 0; i < indices.length; i++) {\n        var index = indices[i];\n        rippedOut.push(touches[index]);\n        temp[index] = null;\n      }\n      var fillAt = 0;\n      for (var j = 0; j < temp.length; j++) {\n        var cur = temp[j];\n        if (cur !== null) {\n          temp[fillAt++] = cur;\n        }\n      }\n      temp.length = fillAt;\n      return rippedOut;\n    };\n    function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {\n      var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n      var inst = getInstanceFromTag(rootNodeID);\n      var target = null;\n      if (inst != null) {\n        target = inst.stateNode;\n      }\n      batchedUpdates(function () {\n        runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n      });\n    }\n    function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = null;\n      var legacyPlugins = plugins;\n      for (var i = 0; i < legacyPlugins.length; i++) {\n        var possiblePlugin = legacyPlugins[i];\n        if (possiblePlugin) {\n          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n          if (extractedEvents) {\n            events = accumulateInto(events, extractedEvents);\n          }\n        }\n      }\n      return events;\n    }\n    function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n      runEventsInBatch(events);\n    }\n    function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {\n      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n    }\n    function receiveTouches(eventTopLevelType, touches, changedIndices) {\n      var changedTouches = eventTopLevelType === \"topTouchEnd\" || eventTopLevelType === \"topTouchCancel\" ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices);\n      for (var jj = 0; jj < changedTouches.length; jj++) {\n        var touch = changedTouches[jj];\n        touch.changedTouches = changedTouches;\n        touch.touches = touches;\n        var nativeEvent = touch;\n        var rootNodeID = null;\n        var target = nativeEvent.target;\n        if (target !== null && target !== undefined) {\n          if (target < 1) {\n            {\n              error(\"A view is reporting that a touch occurred on tag zero.\");\n            }\n          } else {\n            rootNodeID = target;\n          }\n        }\n        _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n      }\n    }\n    var ReactNativeGlobalResponderHandler = {\n      onChange: function onChange(from, to, blockNativeResponder) {\n        if (to !== null) {\n          var tag = to.stateNode._nativeTag;\n          ReactNativePrivateInterface.UIManager.setJSResponder(tag, blockNativeResponder);\n        } else {\n          ReactNativePrivateInterface.UIManager.clearJSResponder();\n        }\n      }\n    };\n    ReactNativePrivateInterface.RCTEventEmitter.register({\n      receiveEvent: receiveEvent,\n      receiveTouches: receiveTouches\n    });\n    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromTag, getTagFromInstance);\n    ResponderEventPlugin.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler);\n    function get(key) {\n      return key._reactInternals;\n    }\n    function set(key, value) {\n      key._reactInternals = value;\n    }\n    var enableSchedulingProfiler = false;\n    var enableProfilerTimer = true;\n    var enableProfilerCommitHooks = true;\n    var warnAboutStringRefs = false;\n    var enableSuspenseAvoidThisFallback = false;\n    var enableNewReconciler = false;\n    var enableLazyContextPropagation = false;\n    var enableLegacyHidden = false;\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n    var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n    var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n    var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n    var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n    var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n    var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n    var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n    var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n    var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n    var REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\n    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\n    var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\n    var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n    var REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === \"function\") {\n        return maybeIterator;\n      }\n      return null;\n    }\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    }\n    function getContextName(type) {\n      return type.displayName || \"Context\";\n    }\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        return null;\n      }\n      {\n        if (typeof type.tag === \"number\") {\n          error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n        }\n      }\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === \"string\") {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + \".Consumer\";\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + \".Provider\";\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, \"ForwardRef\");\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || \"Memo\";\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n    function getWrappedName$1(outerType, innerType, wrapperName) {\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return outerType.displayName || (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n    }\n    function getContextName$1(type) {\n      return type.displayName || \"Context\";\n    }\n    function getComponentNameFromFiber(fiber) {\n      var tag = fiber.tag,\n        type = fiber.type;\n      switch (tag) {\n        case CacheComponent:\n          return \"Cache\";\n        case ContextConsumer:\n          var context = type;\n          return getContextName$1(context) + \".Consumer\";\n        case ContextProvider:\n          var provider = type;\n          return getContextName$1(provider._context) + \".Provider\";\n        case DehydratedFragment:\n          return \"DehydratedFragment\";\n        case ForwardRef:\n          return getWrappedName$1(type, type.render, \"ForwardRef\");\n        case Fragment:\n          return \"Fragment\";\n        case HostComponent:\n          return type;\n        case HostPortal:\n          return \"Portal\";\n        case HostRoot:\n          return \"Root\";\n        case HostText:\n          return \"Text\";\n        case LazyComponent:\n          return getComponentNameFromType(type);\n        case Mode:\n          if (type === REACT_STRICT_MODE_TYPE) {\n            return \"StrictMode\";\n          }\n          return \"Mode\";\n        case OffscreenComponent:\n          return \"Offscreen\";\n        case Profiler:\n          return \"Profiler\";\n        case ScopeComponent:\n          return \"Scope\";\n        case SuspenseComponent:\n          return \"Suspense\";\n        case SuspenseListComponent:\n          return \"SuspenseList\";\n        case TracingMarkerComponent:\n          return \"TracingMarker\";\n        case ClassComponent:\n        case FunctionComponent:\n        case IncompleteClassComponent:\n        case IndeterminateComponent:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          if (typeof type === \"function\") {\n            return type.displayName || type.name || null;\n          }\n          if (typeof type === \"string\") {\n            return type;\n          }\n          break;\n      }\n      return null;\n    }\n    var NoFlags = 0;\n    var PerformedWork = 1;\n    var Placement = 2;\n    var Update = 4;\n    var ChildDeletion = 16;\n    var ContentReset = 32;\n    var Callback = 64;\n    var DidCapture = 128;\n    var ForceClientRender = 256;\n    var Ref = 512;\n    var Snapshot = 1024;\n    var Passive = 2048;\n    var Hydrating = 4096;\n    var Visibility = 8192;\n    var StoreConsistency = 16384;\n    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n    var HostEffectMask = 32767;\n    var Incomplete = 32768;\n    var ShouldCapture = 65536;\n    var ForceUpdateForLegacySuspense = 131072;\n    var Forked = 1048576;\n    var RefStatic = 2097152;\n    var LayoutStatic = 4194304;\n    var PassiveStatic = 8388608;\n    var BeforeMutationMask = Update | Snapshot | 0;\n    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\n    var LayoutMask = Update | Callback | Ref | Visibility;\n    var PassiveMask = Passive | ChildDeletion;\n    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n    function getNearestMountedFiber(fiber) {\n      var node = fiber;\n      var nearestMounted = fiber;\n      if (!fiber.alternate) {\n        var nextNode = node;\n        do {\n          node = nextNode;\n          if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n            nearestMounted = node.return;\n          }\n          nextNode = node.return;\n        } while (nextNode);\n      } else {\n        while (node.return) {\n          node = node.return;\n        }\n      }\n      if (node.tag === HostRoot) {\n        return nearestMounted;\n      }\n      return null;\n    }\n    function isFiberMounted(fiber) {\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n    function isMounted(component) {\n      {\n        var owner = ReactCurrentOwner.current;\n        if (owner !== null && owner.tag === ClassComponent) {\n          var ownerFiber = owner;\n          var instance = ownerFiber.stateNode;\n          if (!instance._warnedAboutRefsInRender) {\n            error(\"%s is accessing isMounted inside its render() function. \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromFiber(ownerFiber) || \"A component\");\n          }\n          instance._warnedAboutRefsInRender = true;\n        }\n      }\n      var fiber = get(component);\n      if (!fiber) {\n        return false;\n      }\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n    function assertIsMounted(fiber) {\n      if (getNearestMountedFiber(fiber) !== fiber) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n    }\n    function findCurrentFiberUsingSlowPath(fiber) {\n      var alternate = fiber.alternate;\n      if (!alternate) {\n        var nearestMounted = getNearestMountedFiber(fiber);\n        if (nearestMounted === null) {\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (nearestMounted !== fiber) {\n          return null;\n        }\n        return fiber;\n      }\n      var a = fiber;\n      var b = alternate;\n      while (true) {\n        var parentA = a.return;\n        if (parentA === null) {\n          break;\n        }\n        var parentB = parentA.alternate;\n        if (parentB === null) {\n          var nextParent = parentA.return;\n          if (nextParent !== null) {\n            a = b = nextParent;\n            continue;\n          }\n          break;\n        }\n        if (parentA.child === parentB.child) {\n          var child = parentA.child;\n          while (child) {\n            if (child === a) {\n              assertIsMounted(parentA);\n              return fiber;\n            }\n            if (child === b) {\n              assertIsMounted(parentA);\n              return alternate;\n            }\n            child = child.sibling;\n          }\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (a.return !== b.return) {\n          a = parentA;\n          b = parentB;\n        } else {\n          var didFindChild = false;\n          var _child = parentA.child;\n          while (_child) {\n            if (_child === a) {\n              didFindChild = true;\n              a = parentA;\n              b = parentB;\n              break;\n            }\n            if (_child === b) {\n              didFindChild = true;\n              b = parentA;\n              a = parentB;\n              break;\n            }\n            _child = _child.sibling;\n          }\n          if (!didFindChild) {\n            _child = parentB.child;\n            while (_child) {\n              if (_child === a) {\n                didFindChild = true;\n                a = parentB;\n                b = parentA;\n                break;\n              }\n              if (_child === b) {\n                didFindChild = true;\n                b = parentB;\n                a = parentA;\n                break;\n              }\n              _child = _child.sibling;\n            }\n            if (!didFindChild) {\n              throw new Error(\"Child was not found in either parent set. This indicates a bug \" + \"in React related to the return pointer. Please file an issue.\");\n            }\n          }\n        }\n        if (a.alternate !== b) {\n          throw new Error(\"Return fibers should always be each others' alternates. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n      if (a.tag !== HostRoot) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n      if (a.stateNode.current === a) {\n        return fiber;\n      }\n      return alternate;\n    }\n    function findCurrentHostFiber(parent) {\n      var currentParent = findCurrentFiberUsingSlowPath(parent);\n      return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n    }\n    function findCurrentHostFiberImpl(node) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        return node;\n      }\n      var child = node.child;\n      while (child !== null) {\n        var match = findCurrentHostFiberImpl(child);\n        if (match !== null) {\n          return match;\n        }\n        child = child.sibling;\n      }\n      return null;\n    }\n    var emptyObject = {};\n    var removedKeys = null;\n    var removedKeyCount = 0;\n    var deepDifferOptions = {\n      unsafelyIgnoreFunctions: true\n    };\n    function defaultDiffer(prevProp, nextProp) {\n      if (typeof nextProp !== \"object\" || nextProp === null) {\n        return true;\n      } else {\n        return ReactNativePrivateInterface.deepDiffer(prevProp, nextProp, deepDifferOptions);\n      }\n    }\n    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {\n      if (isArray(node)) {\n        var i = node.length;\n        while (i-- && removedKeyCount > 0) {\n          restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);\n        }\n      } else if (node && removedKeyCount > 0) {\n        var obj = node;\n        for (var propKey in removedKeys) {\n          if (!removedKeys[propKey]) {\n            continue;\n          }\n          var nextProp = obj[propKey];\n          if (nextProp === undefined) {\n            continue;\n          }\n          var attributeConfig = validAttributes[propKey];\n          if (!attributeConfig) {\n            continue;\n          }\n          if (typeof nextProp === \"function\") {\n            nextProp = true;\n          }\n          if (typeof nextProp === \"undefined\") {\n            nextProp = null;\n          }\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n          removedKeys[propKey] = false;\n          removedKeyCount--;\n        }\n      }\n    }\n    function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {\n      var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n      var i;\n      for (i = 0; i < minLength; i++) {\n        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);\n      }\n      for (; i < prevArray.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);\n      }\n      for (; i < nextArray.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {\n      if (!updatePayload && prevProp === nextProp) {\n        return updatePayload;\n      }\n      if (!prevProp || !nextProp) {\n        if (nextProp) {\n          return addNestedProperty(updatePayload, nextProp, validAttributes);\n        }\n        if (prevProp) {\n          return clearNestedProperty(updatePayload, prevProp, validAttributes);\n        }\n        return updatePayload;\n      }\n      if (!isArray(prevProp) && !isArray(nextProp)) {\n        return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n      }\n      if (isArray(prevProp) && isArray(nextProp)) {\n        return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);\n      }\n      if (isArray(prevProp)) {\n        return diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes);\n      }\n      return diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);\n    }\n    function addNestedProperty(updatePayload, nextProp, validAttributes) {\n      if (!nextProp) {\n        return updatePayload;\n      }\n      if (!isArray(nextProp)) {\n        return addProperties(updatePayload, nextProp, validAttributes);\n      }\n      for (var i = 0; i < nextProp.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function clearNestedProperty(updatePayload, prevProp, validAttributes) {\n      if (!prevProp) {\n        return updatePayload;\n      }\n      if (!isArray(prevProp)) {\n        return clearProperties(updatePayload, prevProp, validAttributes);\n      }\n      for (var i = 0; i < prevProp.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n      var attributeConfig;\n      var nextProp;\n      var prevProp;\n      for (var propKey in nextProps) {\n        attributeConfig = validAttributes[propKey];\n        if (!attributeConfig) {\n          continue;\n        }\n        prevProp = prevProps[propKey];\n        nextProp = nextProps[propKey];\n        if (typeof nextProp === \"function\") {\n          nextProp = true;\n          if (typeof prevProp === \"function\") {\n            prevProp = true;\n          }\n        }\n        if (typeof nextProp === \"undefined\") {\n          nextProp = null;\n          if (typeof prevProp === \"undefined\") {\n            prevProp = null;\n          }\n        }\n        if (removedKeys) {\n          removedKeys[propKey] = false;\n        }\n        if (updatePayload && updatePayload[propKey] !== undefined) {\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n          continue;\n        }\n        if (prevProp === nextProp) {\n          continue;\n        }\n        if (typeof attributeConfig !== \"object\") {\n          if (defaultDiffer(prevProp, nextProp)) {\n            (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n          }\n        } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === \"function\" ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));\n          if (shouldUpdate) {\n            var _nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n          }\n        } else {\n          removedKeys = null;\n          removedKeyCount = 0;\n          updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);\n          if (removedKeyCount > 0 && updatePayload) {\n            restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);\n            removedKeys = null;\n          }\n        }\n      }\n      for (var _propKey in prevProps) {\n        if (nextProps[_propKey] !== undefined) {\n          continue;\n        }\n        attributeConfig = validAttributes[_propKey];\n        if (!attributeConfig) {\n          continue;\n        }\n        if (updatePayload && updatePayload[_propKey] !== undefined) {\n          continue;\n        }\n        prevProp = prevProps[_propKey];\n        if (prevProp === undefined) {\n          continue;\n        }\n        if (typeof attributeConfig !== \"object\" || typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          (updatePayload || (updatePayload = {}))[_propKey] = null;\n          if (!removedKeys) {\n            removedKeys = {};\n          }\n          if (!removedKeys[_propKey]) {\n            removedKeys[_propKey] = true;\n            removedKeyCount++;\n          }\n        } else {\n          updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);\n        }\n      }\n      return updatePayload;\n    }\n    function addProperties(updatePayload, props, validAttributes) {\n      return diffProperties(updatePayload, emptyObject, props, validAttributes);\n    }\n    function clearProperties(updatePayload, prevProps, validAttributes) {\n      return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n    }\n    function create(props, validAttributes) {\n      return addProperties(null, props, validAttributes);\n    }\n    function diff(prevProps, nextProps, validAttributes) {\n      return diffProperties(null, prevProps, nextProps, validAttributes);\n    }\n    function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n      return function () {\n        if (!callback) {\n          return undefined;\n        }\n        if (typeof context.__isMounted === \"boolean\") {\n          if (!context.__isMounted) {\n            return undefined;\n          }\n        }\n        return callback.apply(context, arguments);\n      };\n    }\n    function warnForStyleProps(props, validAttributes) {\n      {\n        for (var key in validAttributes.style) {\n          if (!(validAttributes[key] || props[key] === undefined)) {\n            error(\"You are setting the style `{ %s\" + \": ... }` as a prop. You \" + \"should nest it in a style object. \" + \"E.g. `{ style: { %s\" + \": ... } }`\", key, key);\n          }\n        }\n      }\n    }\n    var ReactNativeFiberHostComponent = function () {\n      function ReactNativeFiberHostComponent(tag, viewConfig, internalInstanceHandleDEV) {\n        this._nativeTag = tag;\n        this._children = [];\n        this.viewConfig = viewConfig;\n        {\n          this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n        }\n      }\n      var _proto = ReactNativeFiberHostComponent.prototype;\n      _proto.blur = function blur() {\n        ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n      };\n      _proto.focus = function focus() {\n        ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n      };\n      _proto.measure = function measure(callback) {\n        ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n      };\n      _proto.measureInWindow = function measureInWindow(callback) {\n        ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n      };\n      _proto.measureLayout = function measureLayout(relativeToNativeNode, onSuccess, onFail) {\n        var relativeNode;\n        if (typeof relativeToNativeNode === \"number\") {\n          relativeNode = relativeToNativeNode;\n        } else {\n          var nativeNode = relativeToNativeNode;\n          if (nativeNode._nativeTag) {\n            relativeNode = nativeNode._nativeTag;\n          }\n        }\n        if (relativeNode == null) {\n          {\n            error(\"Warning: ref.measureLayout must be called with a node handle or a ref to a native component.\");\n          }\n          return;\n        }\n        ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));\n      };\n      _proto.setNativeProps = function setNativeProps(nativeProps) {\n        {\n          warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n        }\n        var updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n        if (updatePayload != null) {\n          ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);\n        }\n      };\n      return ReactNativeFiberHostComponent;\n    }();\n    var scheduleCallback = Scheduler.unstable_scheduleCallback;\n    var cancelCallback = Scheduler.unstable_cancelCallback;\n    var shouldYield = Scheduler.unstable_shouldYield;\n    var requestPaint = Scheduler.unstable_requestPaint;\n    var now = Scheduler.unstable_now;\n    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;\n    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\n    var NormalPriority = Scheduler.unstable_NormalPriority;\n    var IdlePriority = Scheduler.unstable_IdlePriority;\n    var rendererID = null;\n    var injectedHook = null;\n    var hasLoggedError = false;\n    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\n    function injectInternals(internals) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n        return false;\n      }\n      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n      if (hook.isDisabled) {\n        return true;\n      }\n      if (!hook.supportsFiber) {\n        {\n          error(\"The installed version of React DevTools is too old and will not work \" + \"with the current version of React. Please update React DevTools. \" + \"https://reactjs.org/link/react-devtools\");\n        }\n        return true;\n      }\n      try {\n        if (enableSchedulingProfiler) {\n          internals = assign({}, internals, {\n            getLaneLabelMap: getLaneLabelMap,\n            injectProfilingHooks: injectProfilingHooks\n          });\n        }\n        rendererID = hook.inject(internals);\n        injectedHook = hook;\n      } catch (err) {\n        {\n          error(\"React instrumentation encountered an error: %s.\", err);\n        }\n      }\n      if (hook.checkDCE) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    function onScheduleRoot(root, children) {\n      {\n        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === \"function\") {\n          try {\n            injectedHook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onCommitRoot(root, eventPriority) {\n      if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n        try {\n          var didError = (root.current.flags & DidCapture) === DidCapture;\n          if (enableProfilerTimer) {\n            var schedulerPriority;\n            switch (eventPriority) {\n              case DiscreteEventPriority:\n                schedulerPriority = ImmediatePriority;\n                break;\n              case ContinuousEventPriority:\n                schedulerPriority = UserBlockingPriority;\n                break;\n              case DefaultEventPriority:\n                schedulerPriority = NormalPriority;\n                break;\n              case IdleEventPriority:\n                schedulerPriority = IdlePriority;\n                break;\n              default:\n                schedulerPriority = NormalPriority;\n                break;\n            }\n            injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n          } else {\n            injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n          }\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onPostCommitRoot(root) {\n      if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === \"function\") {\n        try {\n          injectedHook.onPostCommitFiberRoot(rendererID, root);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onCommitUnmount(fiber) {\n      if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n        try {\n          injectedHook.onCommitFiberUnmount(rendererID, fiber);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function injectProfilingHooks(profilingHooks) {}\n    function getLaneLabelMap() {\n      {\n        return null;\n      }\n    }\n    function markComponentRenderStopped() {}\n    function markComponentErrored(fiber, thrownValue, lanes) {}\n    function markComponentSuspended(fiber, wakeable, lanes) {}\n    var NoMode = 0;\n    var ConcurrentMode = 1;\n    var ProfileMode = 2;\n    var StrictLegacyMode = 8;\n    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n    var log = Math.log;\n    var LN2 = Math.LN2;\n    function clz32Fallback(x) {\n      var asUint = x >>> 0;\n      if (asUint === 0) {\n        return 32;\n      }\n      return 31 - (log(asUint) / LN2 | 0) | 0;\n    }\n    var TotalLanes = 31;\n    var NoLanes = 0;\n    var NoLane = 0;\n    var SyncLane = 1;\n    var InputContinuousHydrationLane = 2;\n    var InputContinuousLane = 4;\n    var DefaultHydrationLane = 8;\n    var DefaultLane = 16;\n    var TransitionHydrationLane = 32;\n    var TransitionLanes = 4194240;\n    var TransitionLane1 = 64;\n    var TransitionLane2 = 128;\n    var TransitionLane3 = 256;\n    var TransitionLane4 = 512;\n    var TransitionLane5 = 1024;\n    var TransitionLane6 = 2048;\n    var TransitionLane7 = 4096;\n    var TransitionLane8 = 8192;\n    var TransitionLane9 = 16384;\n    var TransitionLane10 = 32768;\n    var TransitionLane11 = 65536;\n    var TransitionLane12 = 131072;\n    var TransitionLane13 = 262144;\n    var TransitionLane14 = 524288;\n    var TransitionLane15 = 1048576;\n    var TransitionLane16 = 2097152;\n    var RetryLanes = 130023424;\n    var RetryLane1 = 4194304;\n    var RetryLane2 = 8388608;\n    var RetryLane3 = 16777216;\n    var RetryLane4 = 33554432;\n    var RetryLane5 = 67108864;\n    var SomeRetryLane = RetryLane1;\n    var SelectiveHydrationLane = 134217728;\n    var NonIdleLanes = 268435455;\n    var IdleHydrationLane = 268435456;\n    var IdleLane = 536870912;\n    var OffscreenLane = 1073741824;\n    var NoTimestamp = -1;\n    var nextTransitionLane = TransitionLane1;\n    var nextRetryLane = RetryLane1;\n    function getHighestPriorityLanes(lanes) {\n      switch (getHighestPriorityLane(lanes)) {\n        case SyncLane:\n          return SyncLane;\n        case InputContinuousHydrationLane:\n          return InputContinuousHydrationLane;\n        case InputContinuousLane:\n          return InputContinuousLane;\n        case DefaultHydrationLane:\n          return DefaultHydrationLane;\n        case DefaultLane:\n          return DefaultLane;\n        case TransitionHydrationLane:\n          return TransitionHydrationLane;\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return lanes & TransitionLanes;\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return lanes & RetryLanes;\n        case SelectiveHydrationLane:\n          return SelectiveHydrationLane;\n        case IdleHydrationLane:\n          return IdleHydrationLane;\n        case IdleLane:\n          return IdleLane;\n        case OffscreenLane:\n          return OffscreenLane;\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return lanes;\n      }\n    }\n    function getNextLanes(root, wipLanes) {\n      var pendingLanes = root.pendingLanes;\n      if (pendingLanes === NoLanes) {\n        return NoLanes;\n      }\n      var nextLanes = NoLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n      if (nonIdlePendingLanes !== NoLanes) {\n        var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n        if (nonIdleUnblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        } else {\n          var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n          if (nonIdlePingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          }\n        }\n      } else {\n        var unblockedLanes = pendingLanes & ~suspendedLanes;\n        if (unblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(unblockedLanes);\n        } else {\n          if (pingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(pingedLanes);\n          }\n        }\n      }\n      if (nextLanes === NoLanes) {\n        return NoLanes;\n      }\n      if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {\n        var nextLane = getHighestPriorityLane(nextLanes);\n        var wipLane = getHighestPriorityLane(wipLanes);\n        if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n          return wipLanes;\n        }\n      }\n      if ((nextLanes & InputContinuousLane) !== NoLanes) {\n        nextLanes |= pendingLanes & DefaultLane;\n      }\n      var entangledLanes = root.entangledLanes;\n      if (entangledLanes !== NoLanes) {\n        var entanglements = root.entanglements;\n        var lanes = nextLanes & entangledLanes;\n        while (lanes > 0) {\n          var index = pickArbitraryLaneIndex(lanes);\n          var lane = 1 << index;\n          nextLanes |= entanglements[index];\n          lanes &= ~lane;\n        }\n      }\n      return nextLanes;\n    }\n    function getMostRecentEventTime(root, lanes) {\n      var eventTimes = root.eventTimes;\n      var mostRecentEventTime = NoTimestamp;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var eventTime = eventTimes[index];\n        if (eventTime > mostRecentEventTime) {\n          mostRecentEventTime = eventTime;\n        }\n        lanes &= ~lane;\n      }\n      return mostRecentEventTime;\n    }\n    function computeExpirationTime(lane, currentTime) {\n      switch (lane) {\n        case SyncLane:\n        case InputContinuousHydrationLane:\n        case InputContinuousLane:\n          return currentTime + 250;\n        case DefaultHydrationLane:\n        case DefaultLane:\n        case TransitionHydrationLane:\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return currentTime + 5000;\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return NoTimestamp;\n        case SelectiveHydrationLane:\n        case IdleHydrationLane:\n        case IdleLane:\n        case OffscreenLane:\n          return NoTimestamp;\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return NoTimestamp;\n      }\n    }\n    function markStarvedLanesAsExpired(root, currentTime) {\n      var pendingLanes = root.pendingLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = pendingLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var expirationTime = expirationTimes[index];\n        if (expirationTime === NoTimestamp) {\n          if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n            expirationTimes[index] = computeExpirationTime(lane, currentTime);\n          }\n        } else if (expirationTime <= currentTime) {\n          root.expiredLanes |= lane;\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getLanesToRetrySynchronouslyOnError(root) {\n      var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n      if (everythingButOffscreen !== NoLanes) {\n        return everythingButOffscreen;\n      }\n      if (everythingButOffscreen & OffscreenLane) {\n        return OffscreenLane;\n      }\n      return NoLanes;\n    }\n    function includesSyncLane(lanes) {\n      return (lanes & SyncLane) !== NoLanes;\n    }\n    function includesNonIdleWork(lanes) {\n      return (lanes & NonIdleLanes) !== NoLanes;\n    }\n    function includesOnlyRetries(lanes) {\n      return (lanes & RetryLanes) === lanes;\n    }\n    function includesOnlyNonUrgentLanes(lanes) {\n      var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n      return (lanes & UrgentLanes) === NoLanes;\n    }\n    function includesOnlyTransitions(lanes) {\n      return (lanes & TransitionLanes) === lanes;\n    }\n    function includesBlockingLane(root, lanes) {\n      var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n      return (lanes & SyncDefaultLanes) !== NoLanes;\n    }\n    function includesExpiredLane(root, lanes) {\n      return (lanes & root.expiredLanes) !== NoLanes;\n    }\n    function isTransitionLane(lane) {\n      return (lane & TransitionLanes) !== NoLanes;\n    }\n    function claimNextTransitionLane() {\n      var lane = nextTransitionLane;\n      nextTransitionLane <<= 1;\n      if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n        nextTransitionLane = TransitionLane1;\n      }\n      return lane;\n    }\n    function claimNextRetryLane() {\n      var lane = nextRetryLane;\n      nextRetryLane <<= 1;\n      if ((nextRetryLane & RetryLanes) === NoLanes) {\n        nextRetryLane = RetryLane1;\n      }\n      return lane;\n    }\n    function getHighestPriorityLane(lanes) {\n      return lanes & -lanes;\n    }\n    function pickArbitraryLane(lanes) {\n      return getHighestPriorityLane(lanes);\n    }\n    function pickArbitraryLaneIndex(lanes) {\n      return 31 - clz32(lanes);\n    }\n    function laneToIndex(lane) {\n      return pickArbitraryLaneIndex(lane);\n    }\n    function includesSomeLane(a, b) {\n      return (a & b) !== NoLanes;\n    }\n    function isSubsetOfLanes(set, subset) {\n      return (set & subset) === subset;\n    }\n    function mergeLanes(a, b) {\n      return a | b;\n    }\n    function removeLanes(set, subset) {\n      return set & ~subset;\n    }\n    function intersectLanes(a, b) {\n      return a & b;\n    }\n    function laneToLanes(lane) {\n      return lane;\n    }\n    function createLaneMap(initial) {\n      var laneMap = [];\n      for (var i = 0; i < TotalLanes; i++) {\n        laneMap.push(initial);\n      }\n      return laneMap;\n    }\n    function markRootUpdated(root, updateLane, eventTime) {\n      root.pendingLanes |= updateLane;\n      if (updateLane !== IdleLane) {\n        root.suspendedLanes = NoLanes;\n        root.pingedLanes = NoLanes;\n      }\n      var eventTimes = root.eventTimes;\n      var index = laneToIndex(updateLane);\n      eventTimes[index] = eventTime;\n    }\n    function markRootSuspended(root, suspendedLanes) {\n      root.suspendedLanes |= suspendedLanes;\n      root.pingedLanes &= ~suspendedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = suspendedLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n    function markRootPinged(root, pingedLanes, eventTime) {\n      root.pingedLanes |= root.suspendedLanes & pingedLanes;\n    }\n    function markRootFinished(root, remainingLanes) {\n      var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n      root.pendingLanes = remainingLanes;\n      root.suspendedLanes = NoLanes;\n      root.pingedLanes = NoLanes;\n      root.expiredLanes &= remainingLanes;\n      root.mutableReadLanes &= remainingLanes;\n      root.entangledLanes &= remainingLanes;\n      var entanglements = root.entanglements;\n      var eventTimes = root.eventTimes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = noLongerPendingLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        entanglements[index] = NoLanes;\n        eventTimes[index] = NoTimestamp;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n    function markRootEntangled(root, entangledLanes) {\n      var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n      var entanglements = root.entanglements;\n      var lanes = rootEntangledLanes;\n      while (lanes) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        if (lane & entangledLanes | entanglements[index] & entangledLanes) {\n          entanglements[index] |= entangledLanes;\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getBumpedLaneForHydration(root, renderLanes) {\n      var renderLane = getHighestPriorityLane(renderLanes);\n      var lane;\n      switch (renderLane) {\n        case InputContinuousLane:\n          lane = InputContinuousHydrationLane;\n          break;\n        case DefaultLane:\n          lane = DefaultHydrationLane;\n          break;\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          lane = TransitionHydrationLane;\n          break;\n        case IdleLane:\n          lane = IdleHydrationLane;\n          break;\n        default:\n          lane = NoLane;\n          break;\n      }\n      if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n        return NoLane;\n      }\n      return lane;\n    }\n    function addFiberToLanesMap(root, fiber, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        updaters.add(fiber);\n        lanes &= ~lane;\n      }\n    }\n    function movePendingFibersToMemoized(root, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      var memoizedUpdaters = root.memoizedUpdaters;\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        if (updaters.size > 0) {\n          updaters.forEach(function (fiber) {\n            var alternate = fiber.alternate;\n            if (alternate === null || !memoizedUpdaters.has(alternate)) {\n              memoizedUpdaters.add(fiber);\n            }\n          });\n          updaters.clear();\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getTransitionsForLanes(root, lanes) {\n      {\n        return null;\n      }\n    }\n    var DiscreteEventPriority = SyncLane;\n    var ContinuousEventPriority = InputContinuousLane;\n    var DefaultEventPriority = DefaultLane;\n    var IdleEventPriority = IdleLane;\n    var currentUpdatePriority = NoLane;\n    function getCurrentUpdatePriority() {\n      return currentUpdatePriority;\n    }\n    function setCurrentUpdatePriority(newPriority) {\n      currentUpdatePriority = newPriority;\n    }\n    function higherEventPriority(a, b) {\n      return a !== 0 && a < b ? a : b;\n    }\n    function lowerEventPriority(a, b) {\n      return a === 0 || a > b ? a : b;\n    }\n    function isHigherEventPriority(a, b) {\n      return a !== 0 && a < b;\n    }\n    function lanesToEventPriority(lanes) {\n      var lane = getHighestPriorityLane(lanes);\n      if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n        return DiscreteEventPriority;\n      }\n      if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n        return ContinuousEventPriority;\n      }\n      if (includesNonIdleWork(lane)) {\n        return DefaultEventPriority;\n      }\n      return IdleEventPriority;\n    }\n    function shim() {\n      throw new Error(\"The current renderer does not support hydration. \" + \"This error is likely caused by a bug in React. \" + \"Please file an issue.\");\n    }\n    var isSuspenseInstancePending = shim;\n    var isSuspenseInstanceFallback = shim;\n    var getSuspenseInstanceFallbackErrorDetails = shim;\n    var registerSuspenseInstanceRetry = shim;\n    var hydrateTextInstance = shim;\n    var clearSuspenseBoundary = shim;\n    var clearSuspenseBoundaryFromContainer = shim;\n    var errorHydratingContainer = shim;\n    var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\n    var UPDATE_SIGNAL = {};\n    {\n      Object.freeze(UPDATE_SIGNAL);\n    }\n    var nextReactTag = 3;\n    function allocateTag() {\n      var tag = nextReactTag;\n      if (tag % 10 === 1) {\n        tag += 2;\n      }\n      nextReactTag = tag + 2;\n      return tag;\n    }\n    function recursivelyUncacheFiberNode(node) {\n      if (typeof node === \"number\") {\n        uncacheFiberNode(node);\n      } else {\n        uncacheFiberNode(node._nativeTag);\n        node._children.forEach(recursivelyUncacheFiberNode);\n      }\n    }\n    function appendInitialChild(parentInstance, child) {\n      parentInstance._children.push(child);\n    }\n    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n      var tag = allocateTag();\n      var viewConfig = getViewConfigForType(type);\n      {\n        for (var key in viewConfig.validAttributes) {\n          if (props.hasOwnProperty(key)) {\n            ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(props[key]);\n          }\n        }\n      }\n      var updatePayload = create(props, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);\n      var component = new ReactNativeFiberHostComponent(tag, viewConfig, internalInstanceHandle);\n      precacheFiberNode(internalInstanceHandle, tag);\n      updateFiberProps(tag, props);\n      return component;\n    }\n    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n      if (!hostContext.isInAParentText) {\n        throw new Error(\"Text strings must be rendered within a <Text> component.\");\n      }\n      var tag = allocateTag();\n      ReactNativePrivateInterface.UIManager.createView(tag, \"RCTRawText\", rootContainerInstance, {\n        text: text\n      });\n      precacheFiberNode(internalInstanceHandle, tag);\n      return tag;\n    }\n    function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance, hostContext) {\n      if (parentInstance._children.length === 0) {\n        return false;\n      }\n      var nativeTags = parentInstance._children.map(function (child) {\n        return typeof child === \"number\" ? child : child._nativeTag;\n      });\n      ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);\n      return false;\n    }\n    function getRootHostContext(rootContainerInstance) {\n      return {\n        isInAParentText: false\n      };\n    }\n    function getChildHostContext(parentHostContext, type, rootContainerInstance) {\n      var prevIsInAParentText = parentHostContext.isInAParentText;\n      var isInAParentText = type === \"AndroidTextInput\" || type === \"RCTMultilineTextInputView\" || type === \"RCTSinglelineTextInputView\" || type === \"RCTText\" || type === \"RCTVirtualText\";\n      if (prevIsInAParentText !== isInAParentText) {\n        return {\n          isInAParentText: isInAParentText\n        };\n      } else {\n        return parentHostContext;\n      }\n    }\n    function getPublicInstance(instance) {\n      return instance;\n    }\n    function prepareForCommit(containerInfo) {\n      return null;\n    }\n    function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {\n      return UPDATE_SIGNAL;\n    }\n    function resetAfterCommit(containerInfo) {}\n    var scheduleTimeout = setTimeout;\n    var cancelTimeout = clearTimeout;\n    var noTimeout = -1;\n    function shouldSetTextContent(type, props) {\n      return false;\n    }\n    function getCurrentEventPriority() {\n      return DefaultEventPriority;\n    }\n    function appendChild(parentInstance, child) {\n      var childTag = typeof child === \"number\" ? child : child._nativeTag;\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      if (index >= 0) {\n        children.splice(index, 1);\n        children.push(child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], []);\n      } else {\n        children.push(child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []);\n      }\n    }\n    function appendChildToContainer(parentInstance, child) {\n      var childTag = typeof child === \"number\" ? child : child._nativeTag;\n      ReactNativePrivateInterface.UIManager.setChildren(parentInstance, [childTag]);\n    }\n    function commitTextUpdate(textInstance, oldText, newText) {\n      ReactNativePrivateInterface.UIManager.updateView(textInstance, \"RCTRawText\", {\n        text: newText\n      });\n    }\n    function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {\n      var viewConfig = instance.viewConfig;\n      updateFiberProps(instance._nativeTag, newProps);\n      var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes);\n      if (updatePayload != null) {\n        ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n      }\n    }\n    function insertBefore(parentInstance, child, beforeChild) {\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      if (index >= 0) {\n        children.splice(index, 1);\n        var beforeChildIndex = children.indexOf(beforeChild);\n        children.splice(beforeChildIndex, 0, child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);\n      } else {\n        var _beforeChildIndex = children.indexOf(beforeChild);\n        children.splice(_beforeChildIndex, 0, child);\n        var childTag = typeof child === \"number\" ? child : child._nativeTag;\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);\n      }\n    }\n    function insertInContainerBefore(parentInstance, child, beforeChild) {\n      if (typeof parentInstance === \"number\") {\n        throw new Error(\"Container does not support insertBefore operation\");\n      }\n    }\n    function removeChild(parentInstance, child) {\n      recursivelyUncacheFiberNode(child);\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      children.splice(index, 1);\n      ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);\n    }\n    function removeChildFromContainer(parentInstance, child) {\n      recursivelyUncacheFiberNode(child);\n      ReactNativePrivateInterface.UIManager.manageChildren(parentInstance, [], [], [], [], [0]);\n    }\n    function resetTextContent(instance) {}\n    function hideInstance(instance) {\n      var viewConfig = instance.viewConfig;\n      var updatePayload = create({\n        style: {\n          display: \"none\"\n        }\n      }, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n    }\n    function hideTextInstance(textInstance) {\n      throw new Error(\"Not yet implemented.\");\n    }\n    function unhideInstance(instance, props) {\n      var viewConfig = instance.viewConfig;\n      var updatePayload = diff(assign({}, props, {\n        style: [props.style, {\n          display: \"none\"\n        }]\n      }), props, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n    }\n    function clearContainer(container) {}\n    function unhideTextInstance(textInstance, text) {\n      throw new Error(\"Not yet implemented.\");\n    }\n    function preparePortalMount(portalInstance) {}\n    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        var ownerName = null;\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n    function describeComponentFrame(name, source, ownerName) {\n      var sourceInfo = \"\";\n      if (source) {\n        var path = source.fileName;\n        var fileName = path.replace(BEFORE_SLASH_RE, \"\");\n        if (/^index\\./.test(fileName)) {\n          var match = path.match(BEFORE_SLASH_RE);\n          if (match) {\n            var pathBeforeSlash = match[1];\n            if (pathBeforeSlash) {\n              var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n              fileName = folderName + \"/\" + fileName;\n            }\n          }\n        }\n        sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n      } else if (ownerName) {\n        sourceInfo = \" (created by \" + ownerName + \")\";\n      }\n      return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n    }\n    function describeClassComponentFrame(ctor, source, ownerFn) {\n      {\n        return describeFunctionComponentFrame(ctor, source, ownerFn);\n      }\n    }\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        if (!fn) {\n          return \"\";\n        }\n        var name = fn.displayName || fn.name || null;\n        var ownerName = null;\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return \"\";\n      }\n      if (typeof type === \"function\") {\n        {\n          return describeFunctionComponentFrame(type, source, ownerFn);\n        }\n      }\n      if (typeof type === \"string\") {\n        return describeBuiltInComponentFrame(type, source, ownerFn);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n      }\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render, source, ownerFn);\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n      return \"\";\n    }\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame.setExtraStackFrame(null);\n        }\n      }\n    }\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        var has = Function.call.bind(hasOwnProperty);\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0;\n            try {\n              if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                err.name = \"Invariant Violation\";\n                throw err;\n              }\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (ex) {\n              error$1 = ex;\n            }\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error(\"Failed %s type: %s\", location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n    var valueStack = [];\n    var fiberStack;\n    {\n      fiberStack = [];\n    }\n    var index = -1;\n    function createCursor(defaultValue) {\n      return {\n        current: defaultValue\n      };\n    }\n    function pop(cursor, fiber) {\n      if (index < 0) {\n        {\n          error(\"Unexpected pop.\");\n        }\n        return;\n      }\n      {\n        if (fiber !== fiberStack[index]) {\n          error(\"Unexpected Fiber popped.\");\n        }\n      }\n      cursor.current = valueStack[index];\n      valueStack[index] = null;\n      {\n        fiberStack[index] = null;\n      }\n      index--;\n    }\n    function push(cursor, value, fiber) {\n      index++;\n      valueStack[index] = cursor.current;\n      {\n        fiberStack[index] = fiber;\n      }\n      cursor.current = value;\n    }\n    var warnedAboutMissingGetChildContext;\n    {\n      warnedAboutMissingGetChildContext = {};\n    }\n    var emptyContextObject = {};\n    {\n      Object.freeze(emptyContextObject);\n    }\n    var contextStackCursor = createCursor(emptyContextObject);\n    var didPerformWorkStackCursor = createCursor(false);\n    var previousContext = emptyContextObject;\n    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n      {\n        if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n          return previousContext;\n        }\n        return contextStackCursor.current;\n      }\n    }\n    function cacheContext(workInProgress, unmaskedContext, maskedContext) {\n      {\n        var instance = workInProgress.stateNode;\n        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n      }\n    }\n    function getMaskedContext(workInProgress, unmaskedContext) {\n      {\n        var type = workInProgress.type;\n        var contextTypes = type.contextTypes;\n        if (!contextTypes) {\n          return emptyContextObject;\n        }\n        var instance = workInProgress.stateNode;\n        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n          return instance.__reactInternalMemoizedMaskedChildContext;\n        }\n        var context = {};\n        for (var key in contextTypes) {\n          context[key] = unmaskedContext[key];\n        }\n        {\n          var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n          checkPropTypes(contextTypes, context, \"context\", name);\n        }\n        if (instance) {\n          cacheContext(workInProgress, unmaskedContext, context);\n        }\n        return context;\n      }\n    }\n    function hasContextChanged() {\n      {\n        return didPerformWorkStackCursor.current;\n      }\n    }\n    function isContextProvider(type) {\n      {\n        var childContextTypes = type.childContextTypes;\n        return childContextTypes !== null && childContextTypes !== undefined;\n      }\n    }\n    function popContext(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n    function popTopLevelContextObject(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n    function pushTopLevelContextObject(fiber, context, didChange) {\n      {\n        if (contextStackCursor.current !== emptyContextObject) {\n          throw new Error(\"Unexpected context found on stack. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        push(contextStackCursor, context, fiber);\n        push(didPerformWorkStackCursor, didChange, fiber);\n      }\n    }\n    function processChildContext(fiber, type, parentContext) {\n      {\n        var instance = fiber.stateNode;\n        var childContextTypes = type.childContextTypes;\n        if (typeof instance.getChildContext !== \"function\") {\n          {\n            var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n            if (!warnedAboutMissingGetChildContext[componentName]) {\n              warnedAboutMissingGetChildContext[componentName] = true;\n              error(\"%s.childContextTypes is specified but there is no getChildContext() method \" + \"on the instance. You can either define getChildContext() on %s or remove \" + \"childContextTypes from it.\", componentName, componentName);\n            }\n          }\n          return parentContext;\n        }\n        var childContext = instance.getChildContext();\n        for (var contextKey in childContext) {\n          if (!(contextKey in childContextTypes)) {\n            throw new Error((getComponentNameFromFiber(fiber) || \"Unknown\") + '.getChildContext(): key \"' + contextKey + '\" is not defined in childContextTypes.');\n          }\n        }\n        {\n          var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n          checkPropTypes(childContextTypes, childContext, \"child context\", name);\n        }\n        return assign({}, parentContext, childContext);\n      }\n    }\n    function pushContextProvider(workInProgress) {\n      {\n        var instance = workInProgress.stateNode;\n        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;\n        previousContext = contextStackCursor.current;\n        push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n        return true;\n      }\n    }\n    function invalidateContextProvider(workInProgress, type, didChange) {\n      {\n        var instance = workInProgress.stateNode;\n        if (!instance) {\n          throw new Error(\"Expected to have an instance by this point. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        if (didChange) {\n          var mergedContext = processChildContext(workInProgress, type, previousContext);\n          instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n          pop(didPerformWorkStackCursor, workInProgress);\n          pop(contextStackCursor, workInProgress);\n          push(contextStackCursor, mergedContext, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        } else {\n          pop(didPerformWorkStackCursor, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        }\n      }\n    }\n    function findCurrentUnmaskedContext(fiber) {\n      {\n        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n          throw new Error(\"Expected subtree parent to be a mounted class component. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        var node = fiber;\n        do {\n          switch (node.tag) {\n            case HostRoot:\n              return node.stateNode.context;\n            case ClassComponent:\n              {\n                var Component = node.type;\n                if (isContextProvider(Component)) {\n                  return node.stateNode.__reactInternalMemoizedMergedChildContext;\n                }\n                break;\n              }\n          }\n          node = node.return;\n        } while (node !== null);\n        throw new Error(\"Found unexpected detached subtree parent. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    var LegacyRoot = 0;\n    var ConcurrentRoot = 1;\n    function is(x, y) {\n      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n    }\n    var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n    var syncQueue = null;\n    var includesLegacySyncCallbacks = false;\n    var isFlushingSyncQueue = false;\n    function scheduleSyncCallback(callback) {\n      if (syncQueue === null) {\n        syncQueue = [callback];\n      } else {\n        syncQueue.push(callback);\n      }\n    }\n    function scheduleLegacySyncCallback(callback) {\n      includesLegacySyncCallbacks = true;\n      scheduleSyncCallback(callback);\n    }\n    function flushSyncCallbacksOnlyInLegacyMode() {\n      if (includesLegacySyncCallbacks) {\n        flushSyncCallbacks();\n      }\n    }\n    function flushSyncCallbacks() {\n      if (!isFlushingSyncQueue && syncQueue !== null) {\n        isFlushingSyncQueue = true;\n        var i = 0;\n        var previousUpdatePriority = getCurrentUpdatePriority();\n        try {\n          var isSync = true;\n          var queue = syncQueue;\n          setCurrentUpdatePriority(DiscreteEventPriority);\n          for (; i < queue.length; i++) {\n            var callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n          syncQueue = null;\n          includesLegacySyncCallbacks = false;\n        } catch (error) {\n          if (syncQueue !== null) {\n            syncQueue = syncQueue.slice(i + 1);\n          }\n          scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n          throw error;\n        } finally {\n          setCurrentUpdatePriority(previousUpdatePriority);\n          isFlushingSyncQueue = false;\n        }\n      }\n      return null;\n    }\n    function isRootDehydrated(root) {\n      var currentState = root.current.memoizedState;\n      return currentState.isDehydrated;\n    }\n    var forkStack = [];\n    var forkStackIndex = 0;\n    var treeForkProvider = null;\n    var treeForkCount = 0;\n    var idStack = [];\n    var idStackIndex = 0;\n    var treeContextProvider = null;\n    var treeContextId = 1;\n    var treeContextOverflow = \"\";\n    function popTreeContext(workInProgress) {\n      while (workInProgress === treeForkProvider) {\n        treeForkProvider = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n        treeForkCount = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n      }\n      while (workInProgress === treeContextProvider) {\n        treeContextProvider = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextOverflow = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextId = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n      }\n    }\n    var isHydrating = false;\n    var didSuspendOrErrorDEV = false;\n    var hydrationErrors = null;\n    function didSuspendOrErrorWhileHydratingDEV() {\n      {\n        return didSuspendOrErrorDEV;\n      }\n    }\n    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\n      {\n        return false;\n      }\n    }\n    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    function prepareToHydrateHostTextInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostTextInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n      var shouldUpdate = hydrateTextInstance();\n    }\n    function prepareToHydrateHostSuspenseInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    function popHydrationState(fiber) {\n      {\n        return false;\n      }\n    }\n    function upgradeHydrationErrorsToRecoverable() {\n      if (hydrationErrors !== null) {\n        queueRecoverableErrors(hydrationErrors);\n        hydrationErrors = null;\n      }\n    }\n    function getIsHydrating() {\n      return isHydrating;\n    }\n    function queueHydrationError(error) {\n      if (hydrationErrors === null) {\n        hydrationErrors = [error];\n      } else {\n        hydrationErrors.push(error);\n      }\n    }\n    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\n    var NoTransition = null;\n    function requestCurrentTransition() {\n      return ReactCurrentBatchConfig.transition;\n    }\n    function shallowEqual(objA, objB) {\n      if (objectIs(objA, objB)) {\n        return true;\n      }\n      if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false;\n      }\n      var keysA = Object.keys(objA);\n      var keysB = Object.keys(objB);\n      if (keysA.length !== keysB.length) {\n        return false;\n      }\n      for (var i = 0; i < keysA.length; i++) {\n        var currentKey = keysA[i];\n        if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function describeFiber(fiber) {\n      var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n      var source = fiber._debugSource;\n      switch (fiber.tag) {\n        case HostComponent:\n          return describeBuiltInComponentFrame(fiber.type, source, owner);\n        case LazyComponent:\n          return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n        case SuspenseComponent:\n          return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n        case SuspenseListComponent:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n        case FunctionComponent:\n        case IndeterminateComponent:\n        case SimpleMemoComponent:\n          return describeFunctionComponentFrame(fiber.type, source, owner);\n        case ForwardRef:\n          return describeFunctionComponentFrame(fiber.type.render, source, owner);\n        case ClassComponent:\n          return describeClassComponentFrame(fiber.type, source, owner);\n        default:\n          return \"\";\n      }\n    }\n    function getStackByFiberInDevAndProd(workInProgress) {\n      try {\n        var info = \"\";\n        var node = workInProgress;\n        do {\n          info += describeFiber(node);\n          node = node.return;\n        } while (node);\n        return info;\n      } catch (x) {\n        return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n      }\n    }\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n    var current = null;\n    var isRendering = false;\n    function getCurrentFiberOwnerNameInDevOrNull() {\n      {\n        if (current === null) {\n          return null;\n        }\n        var owner = current._debugOwner;\n        if (owner !== null && typeof owner !== \"undefined\") {\n          return getComponentNameFromFiber(owner);\n        }\n      }\n      return null;\n    }\n    function getCurrentFiberStackInDev() {\n      {\n        if (current === null) {\n          return \"\";\n        }\n        return getStackByFiberInDevAndProd(current);\n      }\n    }\n    function resetCurrentFiber() {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = null;\n        current = null;\n        isRendering = false;\n      }\n    }\n    function setCurrentFiber(fiber) {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\n        current = fiber;\n        isRendering = false;\n      }\n    }\n    function getCurrentFiber() {\n      {\n        return current;\n      }\n    }\n    function setIsRendering(rendering) {\n      {\n        isRendering = rendering;\n      }\n    }\n    var ReactStrictModeWarnings = {\n      recordUnsafeLifecycleWarnings: function recordUnsafeLifecycleWarnings(fiber, instance) {},\n      flushPendingUnsafeLifecycleWarnings: function flushPendingUnsafeLifecycleWarnings() {},\n      recordLegacyContextWarning: function recordLegacyContextWarning(fiber, instance) {},\n      flushLegacyContextWarning: function flushLegacyContextWarning() {},\n      discardPendingWarnings: function discardPendingWarnings() {}\n    };\n    {\n      var findStrictRoot = function findStrictRoot(fiber) {\n        var maybeStrictRoot = null;\n        var node = fiber;\n        while (node !== null) {\n          if (node.mode & StrictLegacyMode) {\n            maybeStrictRoot = node;\n          }\n          node = node.return;\n        }\n        return maybeStrictRoot;\n      };\n      var setToSortedString = function setToSortedString(set) {\n        var array = [];\n        set.forEach(function (value) {\n          array.push(value);\n        });\n        return array.sort().join(\", \");\n      };\n      var pendingComponentWillMountWarnings = [];\n      var pendingUNSAFE_ComponentWillMountWarnings = [];\n      var pendingComponentWillReceivePropsWarnings = [];\n      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n      var pendingComponentWillUpdateWarnings = [];\n      var pendingUNSAFE_ComponentWillUpdateWarnings = [];\n      var didWarnAboutUnsafeLifecycles = new Set();\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n          return;\n        }\n        if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n          pendingComponentWillMountWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === \"function\") {\n          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n        }\n        if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n          pendingComponentWillReceivePropsWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n        }\n        if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n          pendingComponentWillUpdateWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n        }\n      };\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n        var componentWillMountUniqueNames = new Set();\n        if (pendingComponentWillMountWarnings.length > 0) {\n          pendingComponentWillMountWarnings.forEach(function (fiber) {\n            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillMountWarnings = [];\n        }\n        var UNSAFE_componentWillMountUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillMountWarnings = [];\n        }\n        var componentWillReceivePropsUniqueNames = new Set();\n        if (pendingComponentWillReceivePropsWarnings.length > 0) {\n          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillReceivePropsWarnings = [];\n        }\n        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        }\n        var componentWillUpdateUniqueNames = new Set();\n        if (pendingComponentWillUpdateWarnings.length > 0) {\n          pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillUpdateWarnings = [];\n        }\n        var UNSAFE_componentWillUpdateUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        }\n        if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n          error(\"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"\\nPlease update the following components: %s\", sortedNames);\n        }\n        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n          error(\"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, \" + \"refactor your code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"\\nPlease update the following components: %s\", _sortedNames);\n        }\n        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n          error(\"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames2);\n        }\n        if (componentWillMountUniqueNames.size > 0) {\n          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n          warn(\"componentWillMount has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames3);\n        }\n        if (componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n          warn(\"componentWillReceiveProps has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, refactor your \" + \"code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames4);\n        }\n        if (componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n          warn(\"componentWillUpdate has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames5);\n        }\n      };\n      var pendingLegacyContextWarning = new Map();\n      var didWarnAboutLegacyContext = new Set();\n      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n        var strictRoot = findStrictRoot(fiber);\n        if (strictRoot === null) {\n          error(\"Expected to find a StrictMode component in a strict mode tree. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n          return;\n        }\n        if (didWarnAboutLegacyContext.has(fiber.type)) {\n          return;\n        }\n        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === \"function\") {\n          if (warningsForRoot === undefined) {\n            warningsForRoot = [];\n            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n          }\n          warningsForRoot.push(fiber);\n        }\n      };\n      ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n          if (fiberArray.length === 0) {\n            return;\n          }\n          var firstFiber = fiberArray[0];\n          var uniqueNames = new Set();\n          fiberArray.forEach(function (fiber) {\n            uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutLegacyContext.add(fiber.type);\n          });\n          var sortedNames = setToSortedString(uniqueNames);\n          try {\n            setCurrentFiber(firstFiber);\n            error(\"Legacy context API has been detected within a strict-mode tree.\" + \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" + \"using it should migrate to the new version.\" + \"\\n\\nPlease update the following components: %s\" + \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\", sortedNames);\n          } finally {\n            resetCurrentFiber();\n          }\n        });\n      };\n      ReactStrictModeWarnings.discardPendingWarnings = function () {\n        pendingComponentWillMountWarnings = [];\n        pendingUNSAFE_ComponentWillMountWarnings = [];\n        pendingComponentWillReceivePropsWarnings = [];\n        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        pendingComponentWillUpdateWarnings = [];\n        pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        pendingLegacyContextWarning = new Map();\n      };\n    }\n    function typeName(value) {\n      {\n        var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n        return type;\n      }\n    }\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n    function checkPropStringCoercion(value, propName) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided `%s` prop is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", propName, typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n    function resolveDefaultProps(Component, baseProps) {\n      if (Component && Component.defaultProps) {\n        var props = assign({}, baseProps);\n        var defaultProps = Component.defaultProps;\n        for (var propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n        return props;\n      }\n      return baseProps;\n    }\n    var valueCursor = createCursor(null);\n    var rendererSigil;\n    {\n      rendererSigil = {};\n    }\n    var currentlyRenderingFiber = null;\n    var lastContextDependency = null;\n    var lastFullyObservedContext = null;\n    var isDisallowedContextReadInDEV = false;\n    function resetContextDependencies() {\n      currentlyRenderingFiber = null;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n    function enterDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = true;\n      }\n    }\n    function exitDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n    function pushProvider(providerFiber, context, nextValue) {\n      {\n        push(valueCursor, context._currentValue, providerFiber);\n        context._currentValue = nextValue;\n        {\n          if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\n            error(\"Detected multiple renderers concurrently rendering the \" + \"same context provider. This is currently unsupported.\");\n          }\n          context._currentRenderer = rendererSigil;\n        }\n      }\n    }\n    function popProvider(context, providerFiber) {\n      var currentValue = valueCursor.current;\n      pop(valueCursor, providerFiber);\n      {\n        {\n          context._currentValue = currentValue;\n        }\n      }\n    }\n    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n      var node = parent;\n      while (node !== null) {\n        var alternate = node.alternate;\n        if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n          node.childLanes = mergeLanes(node.childLanes, renderLanes);\n          if (alternate !== null) {\n            alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n          }\n        } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n        }\n        if (node === propagationRoot) {\n          break;\n        }\n        node = node.return;\n      }\n      {\n        if (node !== propagationRoot) {\n          error(\"Expected to find the propagation root when scheduling context work. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n    }\n    function propagateContextChange(workInProgress, context, renderLanes) {\n      {\n        propagateContextChange_eager(workInProgress, context, renderLanes);\n      }\n    }\n    function propagateContextChange_eager(workInProgress, context, renderLanes) {\n      var fiber = workInProgress.child;\n      if (fiber !== null) {\n        fiber.return = workInProgress;\n      }\n      while (fiber !== null) {\n        var nextFiber = void 0;\n        var list = fiber.dependencies;\n        if (list !== null) {\n          nextFiber = fiber.child;\n          var dependency = list.firstContext;\n          while (dependency !== null) {\n            if (dependency.context === context) {\n              if (fiber.tag === ClassComponent) {\n                var lane = pickArbitraryLane(renderLanes);\n                var update = createUpdate(NoTimestamp, lane);\n                update.tag = ForceUpdate;\n                var updateQueue = fiber.updateQueue;\n                if (updateQueue === null) ;else {\n                  var sharedQueue = updateQueue.shared;\n                  var pending = sharedQueue.pending;\n                  if (pending === null) {\n                    update.next = update;\n                  } else {\n                    update.next = pending.next;\n                    pending.next = update;\n                  }\n                  sharedQueue.pending = update;\n                }\n              }\n              fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n              var alternate = fiber.alternate;\n              if (alternate !== null) {\n                alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n              }\n              scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress);\n              list.lanes = mergeLanes(list.lanes, renderLanes);\n              break;\n            }\n            dependency = dependency.next;\n          }\n        } else if (fiber.tag === ContextProvider) {\n          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n        } else if (fiber.tag === DehydratedFragment) {\n          var parentSuspense = fiber.return;\n          if (parentSuspense === null) {\n            throw new Error(\"We just came from a parent so we must have had a parent. This is a bug in React.\");\n          }\n          parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n          var _alternate = parentSuspense.alternate;\n          if (_alternate !== null) {\n            _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n          }\n          scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\n          nextFiber = fiber.sibling;\n        } else {\n          nextFiber = fiber.child;\n        }\n        if (nextFiber !== null) {\n          nextFiber.return = fiber;\n        } else {\n          nextFiber = fiber;\n          while (nextFiber !== null) {\n            if (nextFiber === workInProgress) {\n              nextFiber = null;\n              break;\n            }\n            var sibling = nextFiber.sibling;\n            if (sibling !== null) {\n              sibling.return = nextFiber.return;\n              nextFiber = sibling;\n              break;\n            }\n            nextFiber = nextFiber.return;\n          }\n        }\n        fiber = nextFiber;\n      }\n    }\n    function prepareToReadContext(workInProgress, renderLanes) {\n      currentlyRenderingFiber = workInProgress;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      var dependencies = workInProgress.dependencies;\n      if (dependencies !== null) {\n        {\n          var firstContext = dependencies.firstContext;\n          if (firstContext !== null) {\n            if (includesSomeLane(dependencies.lanes, renderLanes)) {\n              markWorkInProgressReceivedUpdate();\n            }\n            dependencies.firstContext = null;\n          }\n        }\n      }\n    }\n    function _readContext(context) {\n      {\n        if (isDisallowedContextReadInDEV) {\n          error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n        }\n      }\n      var value = context._currentValue;\n      if (lastFullyObservedContext === context) ;else {\n        var contextItem = {\n          context: context,\n          memoizedValue: value,\n          next: null\n        };\n        if (lastContextDependency === null) {\n          if (currentlyRenderingFiber === null) {\n            throw new Error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n          }\n          lastContextDependency = contextItem;\n          currentlyRenderingFiber.dependencies = {\n            lanes: NoLanes,\n            firstContext: contextItem\n          };\n        } else {\n          lastContextDependency = lastContextDependency.next = contextItem;\n        }\n      }\n      return value;\n    }\n    var interleavedQueues = null;\n    function pushInterleavedQueue(queue) {\n      if (interleavedQueues === null) {\n        interleavedQueues = [queue];\n      } else {\n        interleavedQueues.push(queue);\n      }\n    }\n    function hasInterleavedUpdates() {\n      return interleavedQueues !== null;\n    }\n    function enqueueInterleavedUpdates() {\n      if (interleavedQueues !== null) {\n        for (var i = 0; i < interleavedQueues.length; i++) {\n          var queue = interleavedQueues[i];\n          var lastInterleavedUpdate = queue.interleaved;\n          if (lastInterleavedUpdate !== null) {\n            queue.interleaved = null;\n            var firstInterleavedUpdate = lastInterleavedUpdate.next;\n            var lastPendingUpdate = queue.pending;\n            if (lastPendingUpdate !== null) {\n              var firstPendingUpdate = lastPendingUpdate.next;\n              lastPendingUpdate.next = firstInterleavedUpdate;\n              lastInterleavedUpdate.next = firstPendingUpdate;\n            }\n            queue.pending = lastInterleavedUpdate;\n          }\n        }\n        interleavedQueues = null;\n      }\n    }\n    var UpdateState = 0;\n    var ReplaceState = 1;\n    var ForceUpdate = 2;\n    var CaptureUpdate = 3;\n    var hasForceUpdate = false;\n    var didWarnUpdateInsideUpdate;\n    var currentlyProcessingQueue;\n    {\n      didWarnUpdateInsideUpdate = false;\n      currentlyProcessingQueue = null;\n    }\n    function initializeUpdateQueue(fiber) {\n      var queue = {\n        baseState: fiber.memoizedState,\n        firstBaseUpdate: null,\n        lastBaseUpdate: null,\n        shared: {\n          pending: null,\n          interleaved: null,\n          lanes: NoLanes\n        },\n        effects: null\n      };\n      fiber.updateQueue = queue;\n    }\n    function cloneUpdateQueue(current, workInProgress) {\n      var queue = workInProgress.updateQueue;\n      var currentQueue = current.updateQueue;\n      if (queue === currentQueue) {\n        var clone = {\n          baseState: currentQueue.baseState,\n          firstBaseUpdate: currentQueue.firstBaseUpdate,\n          lastBaseUpdate: currentQueue.lastBaseUpdate,\n          shared: currentQueue.shared,\n          effects: currentQueue.effects\n        };\n        workInProgress.updateQueue = clone;\n      }\n    }\n    function createUpdate(eventTime, lane) {\n      var update = {\n        eventTime: eventTime,\n        lane: lane,\n        tag: UpdateState,\n        payload: null,\n        callback: null,\n        next: null\n      };\n      return update;\n    }\n    function enqueueUpdate(fiber, update, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (updateQueue === null) {\n        return;\n      }\n      var sharedQueue = updateQueue.shared;\n      if (isInterleavedUpdate(fiber)) {\n        var interleaved = sharedQueue.interleaved;\n        if (interleaved === null) {\n          update.next = update;\n          pushInterleavedQueue(sharedQueue);\n        } else {\n          update.next = interleaved.next;\n          interleaved.next = update;\n        }\n        sharedQueue.interleaved = update;\n      } else {\n        var pending = sharedQueue.pending;\n        if (pending === null) {\n          update.next = update;\n        } else {\n          update.next = pending.next;\n          pending.next = update;\n        }\n        sharedQueue.pending = update;\n      }\n      {\n        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n          error(\"An update (setState, replaceState, or forceUpdate) was scheduled \" + \"from inside an update function. Update functions should be pure, \" + \"with zero side-effects. Consider using componentDidUpdate or a \" + \"callback.\");\n          didWarnUpdateInsideUpdate = true;\n        }\n      }\n    }\n    function entangleTransitions(root, fiber, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (updateQueue === null) {\n        return;\n      }\n      var sharedQueue = updateQueue.shared;\n      if (isTransitionLane(lane)) {\n        var queueLanes = sharedQueue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        sharedQueue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n      var queue = workInProgress.updateQueue;\n      var current = workInProgress.alternate;\n      if (current !== null) {\n        var currentQueue = current.updateQueue;\n        if (queue === currentQueue) {\n          var newFirst = null;\n          var newLast = null;\n          var firstBaseUpdate = queue.firstBaseUpdate;\n          if (firstBaseUpdate !== null) {\n            var update = firstBaseUpdate;\n            do {\n              var clone = {\n                eventTime: update.eventTime,\n                lane: update.lane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              if (newLast === null) {\n                newFirst = newLast = clone;\n              } else {\n                newLast.next = clone;\n                newLast = clone;\n              }\n              update = update.next;\n            } while (update !== null);\n            if (newLast === null) {\n              newFirst = newLast = capturedUpdate;\n            } else {\n              newLast.next = capturedUpdate;\n              newLast = capturedUpdate;\n            }\n          } else {\n            newFirst = newLast = capturedUpdate;\n          }\n          queue = {\n            baseState: currentQueue.baseState,\n            firstBaseUpdate: newFirst,\n            lastBaseUpdate: newLast,\n            shared: currentQueue.shared,\n            effects: currentQueue.effects\n          };\n          workInProgress.updateQueue = queue;\n          return;\n        }\n      }\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      if (lastBaseUpdate === null) {\n        queue.firstBaseUpdate = capturedUpdate;\n      } else {\n        lastBaseUpdate.next = capturedUpdate;\n      }\n      queue.lastBaseUpdate = capturedUpdate;\n    }\n    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n      switch (update.tag) {\n        case ReplaceState:\n          {\n            var payload = update.payload;\n            if (typeof payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              var nextState = payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n              return nextState;\n            }\n            return payload;\n          }\n        case CaptureUpdate:\n          {\n            workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n          }\n        case UpdateState:\n          {\n            var _payload = update.payload;\n            var partialState;\n            if (typeof _payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              partialState = _payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n            } else {\n              partialState = _payload;\n            }\n            if (partialState === null || partialState === undefined) {\n              return prevState;\n            }\n            return assign({}, prevState, partialState);\n          }\n        case ForceUpdate:\n          {\n            hasForceUpdate = true;\n            return prevState;\n          }\n      }\n      return prevState;\n    }\n    function processUpdateQueue(workInProgress, props, instance, renderLanes) {\n      var queue = workInProgress.updateQueue;\n      hasForceUpdate = false;\n      {\n        currentlyProcessingQueue = queue.shared;\n      }\n      var firstBaseUpdate = queue.firstBaseUpdate;\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      var pendingQueue = queue.shared.pending;\n      if (pendingQueue !== null) {\n        queue.shared.pending = null;\n        var lastPendingUpdate = pendingQueue;\n        var firstPendingUpdate = lastPendingUpdate.next;\n        lastPendingUpdate.next = null;\n        if (lastBaseUpdate === null) {\n          firstBaseUpdate = firstPendingUpdate;\n        } else {\n          lastBaseUpdate.next = firstPendingUpdate;\n        }\n        lastBaseUpdate = lastPendingUpdate;\n        var current = workInProgress.alternate;\n        if (current !== null) {\n          var currentQueue = current.updateQueue;\n          var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n          if (currentLastBaseUpdate !== lastBaseUpdate) {\n            if (currentLastBaseUpdate === null) {\n              currentQueue.firstBaseUpdate = firstPendingUpdate;\n            } else {\n              currentLastBaseUpdate.next = firstPendingUpdate;\n            }\n            currentQueue.lastBaseUpdate = lastPendingUpdate;\n          }\n        }\n      }\n      if (firstBaseUpdate !== null) {\n        var newState = queue.baseState;\n        var newLanes = NoLanes;\n        var newBaseState = null;\n        var newFirstBaseUpdate = null;\n        var newLastBaseUpdate = null;\n        var update = firstBaseUpdate;\n        do {\n          var updateLane = update.lane;\n          var updateEventTime = update.eventTime;\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              eventTime: updateEventTime,\n              lane: updateLane,\n              tag: update.tag,\n              payload: update.payload,\n              callback: update.callback,\n              next: null\n            };\n            if (newLastBaseUpdate === null) {\n              newFirstBaseUpdate = newLastBaseUpdate = clone;\n              newBaseState = newState;\n            } else {\n              newLastBaseUpdate = newLastBaseUpdate.next = clone;\n            }\n            newLanes = mergeLanes(newLanes, updateLane);\n          } else {\n            if (newLastBaseUpdate !== null) {\n              var _clone = {\n                eventTime: updateEventTime,\n                lane: NoLane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n            }\n            newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n            var callback = update.callback;\n            if (callback !== null && update.lane !== NoLane) {\n              workInProgress.flags |= Callback;\n              var effects = queue.effects;\n              if (effects === null) {\n                queue.effects = [update];\n              } else {\n                effects.push(update);\n              }\n            }\n          }\n          update = update.next;\n          if (update === null) {\n            pendingQueue = queue.shared.pending;\n            if (pendingQueue === null) {\n              break;\n            } else {\n              var _lastPendingUpdate = pendingQueue;\n              var _firstPendingUpdate = _lastPendingUpdate.next;\n              _lastPendingUpdate.next = null;\n              update = _firstPendingUpdate;\n              queue.lastBaseUpdate = _lastPendingUpdate;\n              queue.shared.pending = null;\n            }\n          }\n        } while (true);\n        if (newLastBaseUpdate === null) {\n          newBaseState = newState;\n        }\n        queue.baseState = newBaseState;\n        queue.firstBaseUpdate = newFirstBaseUpdate;\n        queue.lastBaseUpdate = newLastBaseUpdate;\n        var lastInterleaved = queue.shared.interleaved;\n        if (lastInterleaved !== null) {\n          var interleaved = lastInterleaved;\n          do {\n            newLanes = mergeLanes(newLanes, interleaved.lane);\n            interleaved = interleaved.next;\n          } while (interleaved !== lastInterleaved);\n        } else if (firstBaseUpdate === null) {\n          queue.shared.lanes = NoLanes;\n        }\n        markSkippedUpdateLanes(newLanes);\n        workInProgress.lanes = newLanes;\n        workInProgress.memoizedState = newState;\n      }\n      {\n        currentlyProcessingQueue = null;\n      }\n    }\n    function callCallback(callback, context) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"Invalid argument passed as callback. Expected a function. Instead \" + (\"received: \" + callback));\n      }\n      callback.call(context);\n    }\n    function resetHasForceUpdateBeforeProcessing() {\n      hasForceUpdate = false;\n    }\n    function checkHasForceUpdateAfterProcessing() {\n      return hasForceUpdate;\n    }\n    function commitUpdateQueue(finishedWork, finishedQueue, instance) {\n      var effects = finishedQueue.effects;\n      finishedQueue.effects = null;\n      if (effects !== null) {\n        for (var i = 0; i < effects.length; i++) {\n          var effect = effects[i];\n          var callback = effect.callback;\n          if (callback !== null) {\n            effect.callback = null;\n            callCallback(callback, instance);\n          }\n        }\n      }\n    }\n    var fakeInternalInstance = {};\n    var emptyRefsObject = new React.Component().refs;\n    var didWarnAboutStateAssignmentForComponent;\n    var didWarnAboutUninitializedState;\n    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\n    var didWarnAboutLegacyLifecyclesAndDerivedState;\n    var didWarnAboutUndefinedDerivedState;\n    var warnOnUndefinedDerivedState;\n    var warnOnInvalidCallback;\n    var didWarnAboutDirectlyAssigningPropsToState;\n    var didWarnAboutContextTypeAndContextTypes;\n    var didWarnAboutInvalidateContextType;\n    {\n      didWarnAboutStateAssignmentForComponent = new Set();\n      didWarnAboutUninitializedState = new Set();\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n      didWarnAboutDirectlyAssigningPropsToState = new Set();\n      didWarnAboutUndefinedDerivedState = new Set();\n      didWarnAboutContextTypeAndContextTypes = new Set();\n      didWarnAboutInvalidateContextType = new Set();\n      var didWarnOnInvalidCallback = new Set();\n      warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {\n        if (callback === null || typeof callback === \"function\") {\n          return;\n        }\n        var key = callerName + \"_\" + callback;\n        if (!didWarnOnInvalidCallback.has(key)) {\n          didWarnOnInvalidCallback.add(key);\n          error(\"%s(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callerName, callback);\n        }\n      };\n      warnOnUndefinedDerivedState = function warnOnUndefinedDerivedState(type, partialState) {\n        if (partialState === undefined) {\n          var componentName = getComponentNameFromType(type) || \"Component\";\n          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n            didWarnAboutUndefinedDerivedState.add(componentName);\n            error(\"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" + \"You have returned undefined.\", componentName);\n          }\n        }\n      };\n      Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n        enumerable: false,\n        value: function value() {\n          throw new Error(\"_processChildContext is not available in React 16+. This likely \" + \"means you have multiple copies of React and are attempting to nest \" + \"a React 15 tree inside a React 16 tree using \" + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + \"to make sure you have only one copy of React (and ideally, switch \" + \"to ReactDOM.createPortal).\");\n        }\n      });\n      Object.freeze(fakeInternalInstance);\n    }\n    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n      var prevState = workInProgress.memoizedState;\n      var partialState = getDerivedStateFromProps(nextProps, prevState);\n      {\n        warnOnUndefinedDerivedState(ctor, partialState);\n      }\n      var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n      workInProgress.memoizedState = memoizedState;\n      if (workInProgress.lanes === NoLanes) {\n        var updateQueue = workInProgress.updateQueue;\n        updateQueue.baseState = memoizedState;\n      }\n    }\n    var classComponentUpdater = {\n      isMounted: isMounted,\n      enqueueSetState: function enqueueSetState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.payload = payload;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"setState\");\n          }\n          update.callback = callback;\n        }\n        enqueueUpdate(fiber, update);\n        var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n        if (root !== null) {\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ReplaceState;\n        update.payload = payload;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"replaceState\");\n          }\n          update.callback = callback;\n        }\n        enqueueUpdate(fiber, update);\n        var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n        if (root !== null) {\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ForceUpdate;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"forceUpdate\");\n          }\n          update.callback = callback;\n        }\n        enqueueUpdate(fiber, update);\n        var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n        if (root !== null) {\n          entangleTransitions(root, fiber, lane);\n        }\n      }\n    };\n    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n      var instance = workInProgress.stateNode;\n      if (typeof instance.shouldComponentUpdate === \"function\") {\n        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n        {\n          if (shouldUpdate === undefined) {\n            error(\"%s.shouldComponentUpdate(): Returned undefined instead of a \" + \"boolean value. Make sure to return true or false.\", getComponentNameFromType(ctor) || \"Component\");\n          }\n        }\n        return shouldUpdate;\n      }\n      if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n      }\n      return true;\n    }\n    function checkClassInstance(workInProgress, ctor, newProps) {\n      var instance = workInProgress.stateNode;\n      {\n        var name = getComponentNameFromType(ctor) || \"Component\";\n        var renderPresent = instance.render;\n        if (!renderPresent) {\n          if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: did you accidentally return an object from the constructor?\", name);\n          } else {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: you may have forgotten to define `render`.\", name);\n          }\n        }\n        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n          error(\"getInitialState was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Did you mean to define a state property instead?\", name);\n        }\n        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n          error(\"getDefaultProps was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Use a static property to define defaultProps instead.\", name);\n        }\n        if (instance.propTypes) {\n          error(\"propTypes was defined as an instance property on %s. Use a static \" + \"property to define propTypes instead.\", name);\n        }\n        if (instance.contextType) {\n          error(\"contextType was defined as an instance property on %s. Use a static \" + \"property to define contextType instead.\", name);\n        }\n        {\n          if (instance.contextTypes) {\n            error(\"contextTypes was defined as an instance property on %s. Use a static \" + \"property to define contextTypes instead.\", name);\n          }\n          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n            didWarnAboutContextTypeAndContextTypes.add(ctor);\n            error(\"%s declares both contextTypes and contextType static properties. \" + \"The legacy contextTypes property will be ignored.\", name);\n          }\n        }\n        if (typeof instance.componentShouldUpdate === \"function\") {\n          error(\"%s has a method called \" + \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" + \"The name is phrased as a question because the function is \" + \"expected to return a value.\", name);\n        }\n        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== \"undefined\") {\n          error(\"%s has a method called shouldComponentUpdate(). \" + \"shouldComponentUpdate should not be used when extending React.PureComponent. \" + \"Please extend React.Component if shouldComponentUpdate is used.\", getComponentNameFromType(ctor) || \"A pure component\");\n        }\n        if (typeof instance.componentDidUnmount === \"function\") {\n          error(\"%s has a method called \" + \"componentDidUnmount(). But there is no such lifecycle method. \" + \"Did you mean componentWillUnmount()?\", name);\n        }\n        if (typeof instance.componentDidReceiveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentDidReceiveProps(). But there is no such lifecycle method. \" + \"If you meant to update the state in response to changing props, \" + \"use componentWillReceiveProps(). If you meant to fetch data or \" + \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\", name);\n        }\n        if (typeof instance.componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\", name);\n        }\n        if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\", name);\n        }\n        var hasMutatedProps = instance.props !== newProps;\n        if (instance.props !== undefined && hasMutatedProps) {\n          error(\"%s(...): When calling super() in `%s`, make sure to pass \" + \"up the same props that your component's constructor was passed.\", name, name);\n        }\n        if (instance.defaultProps) {\n          error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" + \" Instead, define defaultProps as a static property on %s.\", name, name);\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\" && typeof instance.componentDidUpdate !== \"function\" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n          error(\"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" + \"This component defines getSnapshotBeforeUpdate() only.\", getComponentNameFromType(ctor));\n        }\n        if (typeof instance.getDerivedStateFromProps === \"function\") {\n          error(\"%s: getDerivedStateFromProps() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n        if (typeof instance.getDerivedStateFromError === \"function\") {\n          error(\"%s: getDerivedStateFromError() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n        if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n          error(\"%s: getSnapshotBeforeUpdate() is defined as a static method \" + \"and will be ignored. Instead, declare it as an instance method.\", name);\n        }\n        var _state = instance.state;\n        if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n          error(\"%s.state: must be set to an object or null\", name);\n        }\n        if (typeof instance.getChildContext === \"function\" && typeof ctor.childContextTypes !== \"object\") {\n          error(\"%s.getChildContext(): childContextTypes must be defined in order to \" + \"use getChildContext().\", name);\n        }\n      }\n    }\n    function adoptClassInstance(workInProgress, instance) {\n      instance.updater = classComponentUpdater;\n      workInProgress.stateNode = instance;\n      set(instance, workInProgress);\n      {\n        instance._reactInternalInstance = fakeInternalInstance;\n      }\n    }\n    function constructClassInstance(workInProgress, ctor, props) {\n      var isLegacyContextConsumer = false;\n      var unmaskedContext = emptyContextObject;\n      var context = emptyContextObject;\n      var contextType = ctor.contextType;\n      {\n        if (\"contextType\" in ctor) {\n          var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined;\n          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n            didWarnAboutInvalidateContextType.add(ctor);\n            var addendum = \"\";\n            if (contextType === undefined) {\n              addendum = \" However, it is set to undefined. \" + \"This can be caused by a typo or by mixing up named and default imports. \" + \"This can also happen due to a circular dependency, so \" + \"try moving the createContext() call to a separate file.\";\n            } else if (typeof contextType !== \"object\") {\n              addendum = \" However, it is set to a \" + typeof contextType + \".\";\n            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n              addendum = \" Did you accidentally pass the Context.Provider instead?\";\n            } else if (contextType._context !== undefined) {\n              addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n            } else {\n              addendum = \" However, it is set to an object with keys {\" + Object.keys(contextType).join(\", \") + \"}.\";\n            }\n            error(\"%s defines an invalid contextType. \" + \"contextType should point to the Context object returned by React.createContext().%s\", getComponentNameFromType(ctor) || \"Component\", addendum);\n          }\n        }\n      }\n      if (typeof contextType === \"object\" && contextType !== null) {\n        context = _readContext(contextType);\n      } else {\n        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        var contextTypes = ctor.contextTypes;\n        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n      }\n      var instance = new ctor(props, context);\n      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n      adoptClassInstance(workInProgress, instance);\n      {\n        if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n          if (!didWarnAboutUninitializedState.has(componentName)) {\n            didWarnAboutUninitializedState.add(componentName);\n            error(\"`%s` uses `getDerivedStateFromProps` but its initial state is \" + \"%s. This is not recommended. Instead, define the initial state by \" + \"assigning an object to `this.state` in the constructor of `%s`. \" + \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\", componentName, instance.state === null ? \"null\" : \"undefined\", componentName);\n          }\n        }\n        if (typeof ctor.getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          var foundWillMountName = null;\n          var foundWillReceivePropsName = null;\n          var foundWillUpdateName = null;\n          if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n            foundWillMountName = \"componentWillMount\";\n          } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            foundWillMountName = \"UNSAFE_componentWillMount\";\n          }\n          if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n            foundWillReceivePropsName = \"componentWillReceiveProps\";\n          } else if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n            foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n          }\n          if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n            foundWillUpdateName = \"componentWillUpdate\";\n          } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n          }\n          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n            var _componentName = getComponentNameFromType(ctor) || \"Component\";\n            var newApiName = typeof ctor.getDerivedStateFromProps === \"function\" ? \"getDerivedStateFromProps()\" : \"getSnapshotBeforeUpdate()\";\n            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n              error(\"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" + \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" + \"The above lifecycles should be removed. Learn more about this warning here:\\n\" + \"https://reactjs.org/link/unsafe-component-lifecycles\", _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\", foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : \"\", foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\");\n            }\n          }\n        }\n      }\n      if (isLegacyContextConsumer) {\n        cacheContext(workInProgress, unmaskedContext, context);\n      }\n      return instance;\n    }\n    function callComponentWillMount(workInProgress, instance) {\n      var oldState = instance.state;\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n      if (oldState !== instance.state) {\n        {\n          error(\"%s.componentWillMount(): Assigning directly to this.state is \" + \"deprecated (except inside a component's \" + \"constructor). Use setState instead.\", getComponentNameFromFiber(workInProgress) || \"Component\");\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n      var oldState = instance.state;\n      if (typeof instance.componentWillReceiveProps === \"function\") {\n        instance.componentWillReceiveProps(newProps, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n      }\n      if (instance.state !== oldState) {\n        {\n          var componentName = getComponentNameFromFiber(workInProgress) || \"Component\";\n          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n            didWarnAboutStateAssignmentForComponent.add(componentName);\n            error(\"%s.componentWillReceiveProps(): Assigning directly to \" + \"this.state is deprecated (except inside a component's \" + \"constructor). Use setState instead.\", componentName);\n          }\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      {\n        checkClassInstance(workInProgress, ctor, newProps);\n      }\n      var instance = workInProgress.stateNode;\n      instance.props = newProps;\n      instance.state = workInProgress.memoizedState;\n      instance.refs = emptyRefsObject;\n      initializeUpdateQueue(workInProgress);\n      var contextType = ctor.contextType;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        instance.context = _readContext(contextType);\n      } else {\n        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        instance.context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      {\n        if (instance.state === newProps) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n            didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n            error(\"%s: It is not recommended to assign props directly to state \" + \"because updates to props won't be reflected in state. \" + \"In most cases, it is better to use props directly.\", componentName);\n          }\n        }\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n        }\n        {\n          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n        }\n      }\n      instance.state = workInProgress.memoizedState;\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        instance.state = workInProgress.memoizedState;\n      }\n      if (typeof ctor.getDerivedStateFromProps !== \"function\" && typeof instance.getSnapshotBeforeUpdate !== \"function\" && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n        callComponentWillMount(workInProgress, instance);\n        processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n        instance.state = workInProgress.memoizedState;\n      }\n      if (typeof instance.componentDidMount === \"function\") {\n        var fiberFlags = Update;\n        workInProgress.flags |= fiberFlags;\n      }\n    }\n    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      var oldProps = workInProgress.memoizedProps;\n      instance.props = oldProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n      }\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (oldProps !== newProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n        if (typeof instance.componentDidMount === \"function\") {\n          var fiberFlags = Update;\n          workInProgress.flags |= fiberFlags;\n        }\n        return false;\n      }\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n          if (typeof instance.componentWillMount === \"function\") {\n            instance.componentWillMount();\n          }\n          if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            instance.UNSAFE_componentWillMount();\n          }\n        }\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags = Update;\n          workInProgress.flags |= _fiberFlags;\n        }\n      } else {\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags2 = Update;\n          workInProgress.flags |= _fiberFlags2;\n        }\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      cloneUpdateQueue(current, workInProgress);\n      var unresolvedOldProps = workInProgress.memoizedProps;\n      var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n      instance.props = oldProps;\n      var unresolvedNewProps = workInProgress.pendingProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n      }\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n      if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n        return false;\n      }\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === \"function\" || typeof instance.componentWillUpdate === \"function\")) {\n          if (typeof instance.componentWillUpdate === \"function\") {\n            instance.componentWillUpdate(newProps, newState, nextContext);\n          }\n          if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n          }\n        }\n        if (typeof instance.componentDidUpdate === \"function\") {\n          workInProgress.flags |= Update;\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          workInProgress.flags |= Snapshot;\n        }\n      } else {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n    var didWarnAboutMaps;\n    var didWarnAboutGenerators;\n    var didWarnAboutStringRefs;\n    var ownerHasKeyUseWarning;\n    var ownerHasFunctionTypeWarning;\n    var warnForMissingKey = function warnForMissingKey(child, returnFiber) {};\n    {\n      didWarnAboutMaps = false;\n      didWarnAboutGenerators = false;\n      didWarnAboutStringRefs = {};\n      ownerHasKeyUseWarning = {};\n      ownerHasFunctionTypeWarning = {};\n      warnForMissingKey = function warnForMissingKey(child, returnFiber) {\n        if (child === null || typeof child !== \"object\") {\n          return;\n        }\n        if (!child._store || child._store.validated || child.key != null) {\n          return;\n        }\n        if (typeof child._store !== \"object\") {\n          throw new Error(\"React Component in warnForMissingKey should have a _store. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        child._store.validated = true;\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n        if (ownerHasKeyUseWarning[componentName]) {\n          return;\n        }\n        ownerHasKeyUseWarning[componentName] = true;\n        error(\"Each child in a list should have a unique \" + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + \"more information.\");\n      };\n    }\n    function coerceRef(returnFiber, current, element) {\n      var mixedRef = element.ref;\n      if (mixedRef !== null && typeof mixedRef !== \"function\" && typeof mixedRef !== \"object\") {\n        {\n          if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n            var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n            if (!didWarnAboutStringRefs[componentName]) {\n              {\n                error('A string ref, \"%s\", has been found within a strict mode tree. ' + \"String refs are a source of potential bugs and should be avoided. \" + \"We recommend using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", mixedRef);\n              }\n              didWarnAboutStringRefs[componentName] = true;\n            }\n          }\n        }\n        if (element._owner) {\n          var owner = element._owner;\n          var inst;\n          if (owner) {\n            var ownerFiber = owner;\n            if (ownerFiber.tag !== ClassComponent) {\n              throw new Error(\"Function components cannot have string refs. \" + \"We recommend using useRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\");\n            }\n            inst = ownerFiber.stateNode;\n          }\n          if (!inst) {\n            throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n          }\n          var resolvedInst = inst;\n          {\n            checkPropStringCoercion(mixedRef, \"ref\");\n          }\n          var stringRef = \"\" + mixedRef;\n          if (current !== null && current.ref !== null && typeof current.ref === \"function\" && current.ref._stringRef === stringRef) {\n            return current.ref;\n          }\n          var ref = function ref(value) {\n            var refs = resolvedInst.refs;\n            if (refs === emptyRefsObject) {\n              refs = resolvedInst.refs = {};\n            }\n            if (value === null) {\n              delete refs[stringRef];\n            } else {\n              refs[stringRef] = value;\n            }\n          };\n          ref._stringRef = stringRef;\n          return ref;\n        } else {\n          if (typeof mixedRef !== \"string\") {\n            throw new Error(\"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\");\n          }\n          if (!element._owner) {\n            throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + \" the following reasons:\\n\" + \"1. You may be adding a ref to a function component\\n\" + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + \"3. You have multiple copies of React loaded\\n\" + \"See https://reactjs.org/link/refs-must-have-owner for more information.\");\n          }\n        }\n      }\n      return mixedRef;\n    }\n    function throwOnInvalidObjectType(returnFiber, newChild) {\n      var childString = Object.prototype.toString.call(newChild);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childString === \"[object Object]\" ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\" : childString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n    }\n    function warnOnFunctionType(returnFiber) {\n      {\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n        if (ownerHasFunctionTypeWarning[componentName]) {\n          return;\n        }\n        ownerHasFunctionTypeWarning[componentName] = true;\n        error(\"Functions are not valid as a React child. This may happen if \" + \"you return a Component instead of <Component /> from render. \" + \"Or maybe you meant to call this function rather than return it.\");\n      }\n    }\n    function resolveLazy(lazyType) {\n      var payload = lazyType._payload;\n      var init = lazyType._init;\n      return init(payload);\n    }\n    function ChildReconciler(shouldTrackSideEffects) {\n      function deleteChild(returnFiber, childToDelete) {\n        if (!shouldTrackSideEffects) {\n          return;\n        }\n        var deletions = returnFiber.deletions;\n        if (deletions === null) {\n          returnFiber.deletions = [childToDelete];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(childToDelete);\n        }\n      }\n      function deleteRemainingChildren(returnFiber, currentFirstChild) {\n        if (!shouldTrackSideEffects) {\n          return null;\n        }\n        var childToDelete = currentFirstChild;\n        while (childToDelete !== null) {\n          deleteChild(returnFiber, childToDelete);\n          childToDelete = childToDelete.sibling;\n        }\n        return null;\n      }\n      function mapRemainingChildren(returnFiber, currentFirstChild) {\n        var existingChildren = new Map();\n        var existingChild = currentFirstChild;\n        while (existingChild !== null) {\n          if (existingChild.key !== null) {\n            existingChildren.set(existingChild.key, existingChild);\n          } else {\n            existingChildren.set(existingChild.index, existingChild);\n          }\n          existingChild = existingChild.sibling;\n        }\n        return existingChildren;\n      }\n      function useFiber(fiber, pendingProps) {\n        var clone = createWorkInProgress(fiber, pendingProps);\n        clone.index = 0;\n        clone.sibling = null;\n        return clone;\n      }\n      function placeChild(newFiber, lastPlacedIndex, newIndex) {\n        newFiber.index = newIndex;\n        if (!shouldTrackSideEffects) {\n          newFiber.flags |= Forked;\n          return lastPlacedIndex;\n        }\n        var current = newFiber.alternate;\n        if (current !== null) {\n          var oldIndex = current.index;\n          if (oldIndex < lastPlacedIndex) {\n            newFiber.flags |= Placement;\n            return lastPlacedIndex;\n          } else {\n            return oldIndex;\n          }\n        } else {\n          newFiber.flags |= Placement;\n          return lastPlacedIndex;\n        }\n      }\n      function placeSingleChild(newFiber) {\n        if (shouldTrackSideEffects && newFiber.alternate === null) {\n          newFiber.flags |= Placement;\n        }\n        return newFiber;\n      }\n      function updateTextNode(returnFiber, current, textContent, lanes) {\n        if (current === null || current.tag !== HostText) {\n          var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function updateElement(returnFiber, current, element, lanes) {\n        var elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n        }\n        if (current !== null) {\n          if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\n            var existing = useFiber(current, element.props);\n            existing.ref = coerceRef(returnFiber, current, element);\n            existing.return = returnFiber;\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        var created = createFiberFromElement(element, returnFiber.mode, lanes);\n        created.ref = coerceRef(returnFiber, current, element);\n        created.return = returnFiber;\n        return created;\n      }\n      function updatePortal(returnFiber, current, portal, lanes) {\n        if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n          var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function updateFragment(returnFiber, current, fragment, lanes, key) {\n        if (current === null || current.tag !== Fragment) {\n          var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, fragment);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function createChild(returnFiber, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n                _created.ref = coerceRef(returnFiber, null, newChild);\n                _created.return = returnFiber;\n                return _created;\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n                _created2.return = returnFiber;\n                return _created2;\n              }\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return createChild(returnFiber, init(payload), lanes);\n              }\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n            _created3.return = returnFiber;\n            return _created3;\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n        var key = oldFiber !== null ? oldFiber.key : null;\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          if (key !== null) {\n            return null;\n          }\n          return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updateElement(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updatePortal(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n              }\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            if (key !== null) {\n              return null;\n            }\n            return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var matchedFiber = existingChildren.get(newIdx) || null;\n          return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n                return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n                return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n              }\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _matchedFiber3 = existingChildren.get(newIdx) || null;\n            return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function warnOnInvalidKey(child, knownKeys, returnFiber) {\n        {\n          if (typeof child !== \"object\" || child === null) {\n            return knownKeys;\n          }\n          switch (child.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n            case REACT_PORTAL_TYPE:\n              warnForMissingKey(child, returnFiber);\n              var key = child.key;\n              if (typeof key !== \"string\") {\n                break;\n              }\n              if (knownKeys === null) {\n                knownKeys = new Set();\n                knownKeys.add(key);\n                break;\n              }\n              if (!knownKeys.has(key)) {\n                knownKeys.add(key);\n                break;\n              }\n              error(\"Encountered two children with the same key, `%s`. \" + \"Keys should be unique so that components maintain their identity \" + \"across updates. Non-unique keys may cause children to be \" + \"duplicated and/or omitted — the behavior is unsupported and \" + \"could change in a future version.\", key);\n              break;\n            case REACT_LAZY_TYPE:\n              var payload = child._payload;\n              var init = child._init;\n              warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n              break;\n          }\n        }\n        return knownKeys;\n      }\n      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n        {\n          var knownKeys = null;\n          for (var i = 0; i < newChildren.length; i++) {\n            var child = newChildren[i];\n            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n          }\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n            break;\n          }\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (newIdx === newChildren.length) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n        if (oldFiber === null) {\n          for (; newIdx < newChildren.length; newIdx++) {\n            var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n            if (_newFiber === null) {\n              continue;\n            }\n            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber;\n            } else {\n              previousNewFiber.sibling = _newFiber;\n            }\n            previousNewFiber = _newFiber;\n          }\n          return resultingFirstChild;\n        }\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n        for (; newIdx < newChildren.length; newIdx++) {\n          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n          if (_newFiber2 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber2.alternate !== null) {\n                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n              }\n            }\n            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber2;\n            } else {\n              previousNewFiber.sibling = _newFiber2;\n            }\n            previousNewFiber = _newFiber2;\n          }\n        }\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n        return resultingFirstChild;\n      }\n      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n        var iteratorFn = getIteratorFn(newChildrenIterable);\n        if (typeof iteratorFn !== \"function\") {\n          throw new Error(\"An object is not an iterable. This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n        }\n        {\n          if (typeof Symbol === \"function\" && newChildrenIterable[Symbol.toStringTag] === \"Generator\") {\n            if (!didWarnAboutGenerators) {\n              error(\"Using Generators as children is unsupported and will likely yield \" + \"unexpected results because enumerating a generator mutates it. \" + \"You may convert it to an array with `Array.from()` or the \" + \"`[...spread]` operator before rendering. Keep in mind \" + \"you might need to polyfill these features for older browsers.\");\n            }\n            didWarnAboutGenerators = true;\n          }\n          if (newChildrenIterable.entries === iteratorFn) {\n            if (!didWarnAboutMaps) {\n              error(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n            }\n            didWarnAboutMaps = true;\n          }\n          var _newChildren = iteratorFn.call(newChildrenIterable);\n          if (_newChildren) {\n            var knownKeys = null;\n            var _step = _newChildren.next();\n            for (; !_step.done; _step = _newChildren.next()) {\n              var child = _step.value;\n              knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n            }\n          }\n        }\n        var newChildren = iteratorFn.call(newChildrenIterable);\n        if (newChildren == null) {\n          throw new Error(\"An iterable object provided no iterator.\");\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        var step = newChildren.next();\n        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n            break;\n          }\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (step.done) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n        if (oldFiber === null) {\n          for (; !step.done; newIdx++, step = newChildren.next()) {\n            var _newFiber3 = createChild(returnFiber, step.value, lanes);\n            if (_newFiber3 === null) {\n              continue;\n            }\n            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber3;\n            } else {\n              previousNewFiber.sibling = _newFiber3;\n            }\n            previousNewFiber = _newFiber3;\n          }\n          return resultingFirstChild;\n        }\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n        for (; !step.done; newIdx++, step = newChildren.next()) {\n          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n          if (_newFiber4 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber4.alternate !== null) {\n                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n              }\n            }\n            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber4;\n            } else {\n              previousNewFiber.sibling = _newFiber4;\n            }\n            previousNewFiber = _newFiber4;\n          }\n        }\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n        return resultingFirstChild;\n      }\n      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n          var existing = useFiber(currentFirstChild, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n        deleteRemainingChildren(returnFiber, currentFirstChild);\n        var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n      function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n        var key = element.key;\n        var child = currentFirstChild;\n        while (child !== null) {\n          if (child.key === key) {\n            var elementType = element.type;\n            if (elementType === REACT_FRAGMENT_TYPE) {\n              if (child.tag === Fragment) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var existing = useFiber(child, element.props.children);\n                existing.return = returnFiber;\n                {\n                  existing._debugSource = element._source;\n                  existing._debugOwner = element._owner;\n                }\n                return existing;\n              }\n            } else {\n              if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var _existing = useFiber(child, element.props);\n                _existing.ref = coerceRef(returnFiber, child, element);\n                _existing.return = returnFiber;\n                {\n                  _existing._debugSource = element._source;\n                  _existing._debugOwner = element._owner;\n                }\n                return _existing;\n              }\n            }\n            deleteRemainingChildren(returnFiber, child);\n            break;\n          } else {\n            deleteChild(returnFiber, child);\n          }\n          child = child.sibling;\n        }\n        if (element.type === REACT_FRAGMENT_TYPE) {\n          var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n          _created4.return = returnFiber;\n          return _created4;\n        }\n      }\n      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n        var key = portal.key;\n        var child = currentFirstChild;\n        while (child !== null) {\n          if (child.key === key) {\n            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              var existing = useFiber(child, portal.children || []);\n              existing.return = returnFiber;\n              return existing;\n            } else {\n              deleteRemainingChildren(returnFiber, child);\n              break;\n            }\n          } else {\n            deleteChild(returnFiber, child);\n          }\n          child = child.sibling;\n        }\n        var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n        var isUnkeyedTopLevelFragment = typeof newChild === \"object\" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n        if (isUnkeyedTopLevelFragment) {\n          newChild = newChild.props.children;\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n            case REACT_PORTAL_TYPE:\n              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n          }\n          if (isArray(newChild)) {\n            return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n          }\n          if (getIteratorFn(newChild)) {\n            return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, \"\" + newChild, lanes));\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return deleteRemainingChildren(returnFiber, currentFirstChild);\n      }\n      return reconcileChildFibers;\n    }\n    var reconcileChildFibers = ChildReconciler(true);\n    var mountChildFibers = ChildReconciler(false);\n    function cloneChildFibers(current, workInProgress) {\n      if (current !== null && workInProgress.child !== current.child) {\n        throw new Error(\"Resuming work not yet implemented.\");\n      }\n      if (workInProgress.child === null) {\n        return;\n      }\n      var currentChild = workInProgress.child;\n      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n      workInProgress.child = newChild;\n      newChild.return = workInProgress;\n      while (currentChild.sibling !== null) {\n        currentChild = currentChild.sibling;\n        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n        newChild.return = workInProgress;\n      }\n      newChild.sibling = null;\n    }\n    function resetChildFibers(workInProgress, lanes) {\n      var child = workInProgress.child;\n      while (child !== null) {\n        resetWorkInProgress(child, lanes);\n        child = child.sibling;\n      }\n    }\n    var NO_CONTEXT = {};\n    var contextStackCursor$1 = createCursor(NO_CONTEXT);\n    var contextFiberStackCursor = createCursor(NO_CONTEXT);\n    var rootInstanceStackCursor = createCursor(NO_CONTEXT);\n    function requiredContext(c) {\n      if (c === NO_CONTEXT) {\n        throw new Error(\"Expected host context to exist. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n      return c;\n    }\n    function getRootHostContainer() {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      return rootInstance;\n    }\n    function pushHostContainer(fiber, nextRootInstance) {\n      push(rootInstanceStackCursor, nextRootInstance, fiber);\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, NO_CONTEXT, fiber);\n      var nextRootContext = getRootHostContext();\n      pop(contextStackCursor$1, fiber);\n      push(contextStackCursor$1, nextRootContext, fiber);\n    }\n    function popHostContainer(fiber) {\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n      pop(rootInstanceStackCursor, fiber);\n    }\n    function getHostContext() {\n      var context = requiredContext(contextStackCursor$1.current);\n      return context;\n    }\n    function pushHostContext(fiber) {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      var context = requiredContext(contextStackCursor$1.current);\n      var nextContext = getChildHostContext(context, fiber.type);\n      if (context === nextContext) {\n        return;\n      }\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, nextContext, fiber);\n    }\n    function popHostContext(fiber) {\n      if (contextFiberStackCursor.current !== fiber) {\n        return;\n      }\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n    }\n    var DefaultSuspenseContext = 0;\n    var SubtreeSuspenseContextMask = 1;\n    var InvisibleParentSuspenseContext = 1;\n    var ForceSuspenseFallback = 2;\n    var suspenseStackCursor = createCursor(DefaultSuspenseContext);\n    function hasSuspenseContext(parentContext, flag) {\n      return (parentContext & flag) !== 0;\n    }\n    function setDefaultShallowSuspenseContext(parentContext) {\n      return parentContext & SubtreeSuspenseContextMask;\n    }\n    function setShallowSuspenseContext(parentContext, shallowContext) {\n      return parentContext & SubtreeSuspenseContextMask | shallowContext;\n    }\n    function addSubtreeSuspenseContext(parentContext, subtreeContext) {\n      return parentContext | subtreeContext;\n    }\n    function pushSuspenseContext(fiber, newContext) {\n      push(suspenseStackCursor, newContext, fiber);\n    }\n    function popSuspenseContext(fiber) {\n      pop(suspenseStackCursor, fiber);\n    }\n    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n      var nextState = workInProgress.memoizedState;\n      if (nextState !== null) {\n        if (nextState.dehydrated !== null) {\n          return true;\n        }\n        return false;\n      }\n      var props = workInProgress.memoizedProps;\n      {\n        return true;\n      }\n    }\n    function findFirstSuspended(row) {\n      var node = row;\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n          if (state !== null) {\n            var dehydrated = state.dehydrated;\n            if (dehydrated === null || isSuspenseInstancePending() || isSuspenseInstanceFallback()) {\n              return node;\n            }\n          }\n        } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== undefined) {\n          var didSuspend = (node.flags & DidCapture) !== NoFlags;\n          if (didSuspend) {\n            return node;\n          }\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === row) {\n          return null;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === row) {\n            return null;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return null;\n    }\n    var NoFlags$1 = 0;\n    var HasEffect = 1;\n    var Insertion = 2;\n    var Layout = 4;\n    var Passive$1 = 8;\n    var workInProgressSources = [];\n    function resetWorkInProgressVersions() {\n      for (var i = 0; i < workInProgressSources.length; i++) {\n        var mutableSource = workInProgressSources[i];\n        {\n          mutableSource._workInProgressVersionPrimary = null;\n        }\n      }\n      workInProgressSources.length = 0;\n    }\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\n    var didWarnAboutMismatchedHooksForComponent;\n    var didWarnUncachedGetSnapshot;\n    {\n      didWarnAboutMismatchedHooksForComponent = new Set();\n    }\n    var renderLanes = NoLanes;\n    var currentlyRenderingFiber$1 = null;\n    var currentHook = null;\n    var workInProgressHook = null;\n    var didScheduleRenderPhaseUpdate = false;\n    var didScheduleRenderPhaseUpdateDuringThisPass = false;\n    var globalClientIdCounter = 0;\n    var RE_RENDER_LIMIT = 25;\n    var currentHookNameInDev = null;\n    var hookTypesDev = null;\n    var hookTypesUpdateIndexDev = -1;\n    var ignorePreviousDependencies = false;\n    function mountHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n        if (hookTypesDev === null) {\n          hookTypesDev = [hookName];\n        } else {\n          hookTypesDev.push(hookName);\n        }\n      }\n    }\n    function updateHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n        if (hookTypesDev !== null) {\n          hookTypesUpdateIndexDev++;\n          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n            warnOnHookMismatchInDev(hookName);\n          }\n        }\n      }\n    }\n    function checkDepsAreArrayDev(deps) {\n      {\n        if (deps !== undefined && deps !== null && !isArray(deps)) {\n          error(\"%s received a final argument that is not an array (instead, received `%s`). When \" + \"specified, the final argument must be an array.\", currentHookNameInDev, typeof deps);\n        }\n      }\n    }\n    function warnOnHookMismatchInDev(currentHookName) {\n      {\n        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n          didWarnAboutMismatchedHooksForComponent.add(componentName);\n          if (hookTypesDev !== null) {\n            var table = \"\";\n            var secondColumnStart = 30;\n            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n              var oldHookName = hookTypesDev[i];\n              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n              var row = i + 1 + \". \" + oldHookName;\n              while (row.length < secondColumnStart) {\n                row += \" \";\n              }\n              row += newHookName + \"\\n\";\n              table += row;\n            }\n            error(\"React has detected a change in the order of Hooks called by %s. \" + \"This will lead to bugs and errors if not fixed. \" + \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" + \"   Previous render            Next render\\n\" + \"   ------------------------------------------------------\\n\" + \"%s\" + \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\", componentName, table);\n          }\n        }\n      }\n    }\n    function throwInvalidHookError() {\n      throw new Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n    }\n    function areHookInputsEqual(nextDeps, prevDeps) {\n      {\n        if (ignorePreviousDependencies) {\n          return false;\n        }\n      }\n      if (prevDeps === null) {\n        {\n          error(\"%s received a final argument during this render, but not during \" + \"the previous render. Even though the final argument is optional, \" + \"its type cannot change between renders.\", currentHookNameInDev);\n        }\n        return false;\n      }\n      {\n        if (nextDeps.length !== prevDeps.length) {\n          error(\"The final argument passed to %s changed size between renders. The \" + \"order and size of this array must remain constant.\\n\\n\" + \"Previous: %s\\n\" + \"Incoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \") + \"]\", \"[\" + nextDeps.join(\", \") + \"]\");\n        }\n      }\n      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n        if (objectIs(nextDeps[i], prevDeps[i])) {\n          continue;\n        }\n        return false;\n      }\n      return true;\n    }\n    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n      renderLanes = nextRenderLanes;\n      currentlyRenderingFiber$1 = workInProgress;\n      {\n        hookTypesDev = current !== null ? current._debugHookTypes : null;\n        hookTypesUpdateIndexDev = -1;\n        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n      }\n      workInProgress.memoizedState = null;\n      workInProgress.updateQueue = null;\n      workInProgress.lanes = NoLanes;\n      {\n        if (current !== null && current.memoizedState !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n        } else if (hookTypesDev !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n        } else {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n        }\n      }\n      var children = Component(props, secondArg);\n      if (didScheduleRenderPhaseUpdateDuringThisPass) {\n        var numberOfReRenders = 0;\n        do {\n          didScheduleRenderPhaseUpdateDuringThisPass = false;\n          if (numberOfReRenders >= RE_RENDER_LIMIT) {\n            throw new Error(\"Too many re-renders. React limits the number of renders to prevent \" + \"an infinite loop.\");\n          }\n          numberOfReRenders += 1;\n          {\n            ignorePreviousDependencies = false;\n          }\n          currentHook = null;\n          workInProgressHook = null;\n          workInProgress.updateQueue = null;\n          {\n            hookTypesUpdateIndexDev = -1;\n          }\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n          children = Component(props, secondArg);\n        } while (didScheduleRenderPhaseUpdateDuringThisPass);\n      }\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      {\n        workInProgress._debugHookTypes = hookTypesDev;\n      }\n      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        currentHookNameInDev = null;\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && (current.mode & ConcurrentMode) !== NoMode) {\n          error(\"Internal React error: Expected static flag was missing. Please \" + \"notify the React team.\");\n        }\n      }\n      didScheduleRenderPhaseUpdate = false;\n      if (didRenderTooFewHooks) {\n        throw new Error(\"Rendered fewer hooks than expected. This may be caused by an accidental \" + \"early return statement.\");\n      }\n      return children;\n    }\n    function bailoutHooks(current, workInProgress, lanes) {\n      workInProgress.updateQueue = current.updateQueue;\n      {\n        workInProgress.flags &= ~(Passive | Update);\n      }\n      current.lanes = removeLanes(current.lanes, lanes);\n    }\n    function resetHooksAfterThrow() {\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      if (didScheduleRenderPhaseUpdate) {\n        var hook = currentlyRenderingFiber$1.memoizedState;\n        while (hook !== null) {\n          var queue = hook.queue;\n          if (queue !== null) {\n            queue.pending = null;\n          }\n          hook = hook.next;\n        }\n        didScheduleRenderPhaseUpdate = false;\n      }\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        currentHookNameInDev = null;\n        isUpdatingOpaqueValueInRenderPhase = false;\n      }\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n    }\n    function mountWorkInProgressHook() {\n      var hook = {\n        memoizedState: null,\n        baseState: null,\n        baseQueue: null,\n        queue: null,\n        next: null\n      };\n      if (workInProgressHook === null) {\n        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n      } else {\n        workInProgressHook = workInProgressHook.next = hook;\n      }\n      return workInProgressHook;\n    }\n    function updateWorkInProgressHook() {\n      var nextCurrentHook;\n      if (currentHook === null) {\n        var current = currentlyRenderingFiber$1.alternate;\n        if (current !== null) {\n          nextCurrentHook = current.memoizedState;\n        } else {\n          nextCurrentHook = null;\n        }\n      } else {\n        nextCurrentHook = currentHook.next;\n      }\n      var nextWorkInProgressHook;\n      if (workInProgressHook === null) {\n        nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n      } else {\n        nextWorkInProgressHook = workInProgressHook.next;\n      }\n      if (nextWorkInProgressHook !== null) {\n        workInProgressHook = nextWorkInProgressHook;\n        nextWorkInProgressHook = workInProgressHook.next;\n        currentHook = nextCurrentHook;\n      } else {\n        if (nextCurrentHook === null) {\n          throw new Error(\"Rendered more hooks than during the previous render.\");\n        }\n        currentHook = nextCurrentHook;\n        var newHook = {\n          memoizedState: currentHook.memoizedState,\n          baseState: currentHook.baseState,\n          baseQueue: currentHook.baseQueue,\n          queue: currentHook.queue,\n          next: null\n        };\n        if (workInProgressHook === null) {\n          currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n        } else {\n          workInProgressHook = workInProgressHook.next = newHook;\n        }\n      }\n      return workInProgressHook;\n    }\n    function createFunctionComponentUpdateQueue() {\n      return {\n        lastEffect: null,\n        stores: null\n      };\n    }\n    function basicStateReducer(state, action) {\n      return typeof action === \"function\" ? action(state) : action;\n    }\n    function mountReducer(reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      var initialState;\n      if (init !== undefined) {\n        initialState = init(initialArg);\n      } else {\n        initialState = initialArg;\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n    function updateReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n      queue.lastRenderedReducer = reducer;\n      var current = currentHook;\n      var baseQueue = current.baseQueue;\n      var pendingQueue = queue.pending;\n      if (pendingQueue !== null) {\n        if (baseQueue !== null) {\n          var baseFirst = baseQueue.next;\n          var pendingFirst = pendingQueue.next;\n          baseQueue.next = pendingFirst;\n          pendingQueue.next = baseFirst;\n        }\n        {\n          if (current.baseQueue !== baseQueue) {\n            error(\"Internal error: Expected work-in-progress queue to be a clone. \" + \"This is a bug in React.\");\n          }\n        }\n        current.baseQueue = baseQueue = pendingQueue;\n        queue.pending = null;\n      }\n      if (baseQueue !== null) {\n        var first = baseQueue.next;\n        var newState = current.baseState;\n        var newBaseState = null;\n        var newBaseQueueFirst = null;\n        var newBaseQueueLast = null;\n        var update = first;\n        do {\n          var updateLane = update.lane;\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              lane: updateLane,\n              action: update.action,\n              hasEagerState: update.hasEagerState,\n              eagerState: update.eagerState,\n              next: null\n            };\n            if (newBaseQueueLast === null) {\n              newBaseQueueFirst = newBaseQueueLast = clone;\n              newBaseState = newState;\n            } else {\n              newBaseQueueLast = newBaseQueueLast.next = clone;\n            }\n            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n            markSkippedUpdateLanes(updateLane);\n          } else {\n            if (newBaseQueueLast !== null) {\n              var _clone = {\n                lane: NoLane,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              };\n              newBaseQueueLast = newBaseQueueLast.next = _clone;\n            }\n            if (update.hasEagerState) {\n              newState = update.eagerState;\n            } else {\n              var action = update.action;\n              newState = reducer(newState, action);\n            }\n          }\n          update = update.next;\n        } while (update !== null && update !== first);\n        if (newBaseQueueLast === null) {\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast.next = newBaseQueueFirst;\n        }\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = newState;\n        hook.baseState = newBaseState;\n        hook.baseQueue = newBaseQueueLast;\n        queue.lastRenderedState = newState;\n      }\n      var lastInterleaved = queue.interleaved;\n      if (lastInterleaved !== null) {\n        var interleaved = lastInterleaved;\n        do {\n          var interleavedLane = interleaved.lane;\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n          markSkippedUpdateLanes(interleavedLane);\n          interleaved = interleaved.next;\n        } while (interleaved !== lastInterleaved);\n      } else if (baseQueue === null) {\n        queue.lanes = NoLanes;\n      }\n      var dispatch = queue.dispatch;\n      return [hook.memoizedState, dispatch];\n    }\n    function rerenderReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n      queue.lastRenderedReducer = reducer;\n      var dispatch = queue.dispatch;\n      var lastRenderPhaseUpdate = queue.pending;\n      var newState = hook.memoizedState;\n      if (lastRenderPhaseUpdate !== null) {\n        queue.pending = null;\n        var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n        var update = firstRenderPhaseUpdate;\n        do {\n          var action = update.action;\n          newState = reducer(newState, action);\n          update = update.next;\n        } while (update !== firstRenderPhaseUpdate);\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = newState;\n        if (hook.baseQueue === null) {\n          hook.baseState = newState;\n        }\n        queue.lastRenderedState = newState;\n      }\n      return [newState, dispatch];\n    }\n    function mountMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n    function updateMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = mountWorkInProgressHook();\n      var nextSnapshot;\n      {\n        nextSnapshot = getSnapshot();\n        {\n          if (!didWarnUncachedGetSnapshot) {\n            var cachedSnapshot = getSnapshot();\n            if (!objectIs(nextSnapshot, cachedSnapshot)) {\n              error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n              didWarnUncachedGetSnapshot = true;\n            }\n          }\n        }\n        var root = getWorkInProgressRoot();\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      hook.memoizedState = nextSnapshot;\n      var inst = {\n        value: nextSnapshot,\n        getSnapshot: getSnapshot\n      };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      fiber.flags |= Passive;\n      pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n      return nextSnapshot;\n    }\n    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = updateWorkInProgressHook();\n      var nextSnapshot = getSnapshot();\n      {\n        if (!didWarnUncachedGetSnapshot) {\n          var cachedSnapshot = getSnapshot();\n          if (!objectIs(nextSnapshot, cachedSnapshot)) {\n            error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n            didWarnUncachedGetSnapshot = true;\n          }\n        }\n      }\n      var prevSnapshot = hook.memoizedState;\n      var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n      if (snapshotChanged) {\n        hook.memoizedState = nextSnapshot;\n        markWorkInProgressReceivedUpdate();\n      }\n      var inst = hook.queue;\n      updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n        fiber.flags |= Passive;\n        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n        var root = getWorkInProgressRoot();\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      return nextSnapshot;\n    }\n    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n      fiber.flags |= StoreConsistency;\n      var check = {\n        getSnapshot: getSnapshot,\n        value: renderedSnapshot\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.stores = [check];\n      } else {\n        var stores = componentUpdateQueue.stores;\n        if (stores === null) {\n          componentUpdateQueue.stores = [check];\n        } else {\n          stores.push(check);\n        }\n      }\n    }\n    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n      inst.value = nextSnapshot;\n      inst.getSnapshot = getSnapshot;\n      if (checkIfSnapshotChanged(inst)) {\n        forceStoreRerender(fiber);\n      }\n    }\n    function subscribeToStore(fiber, inst, subscribe) {\n      var handleStoreChange = function handleStoreChange() {\n        if (checkIfSnapshotChanged(inst)) {\n          forceStoreRerender(fiber);\n        }\n      };\n      return subscribe(handleStoreChange);\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      var prevValue = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(prevValue, nextValue);\n      } catch (error) {\n        return true;\n      }\n    }\n    function forceStoreRerender(fiber) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n    function mountState(initialState) {\n      var hook = mountWorkInProgressHook();\n      if (typeof initialState === \"function\") {\n        initialState = initialState();\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: basicStateReducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n    function updateState(initialState) {\n      return updateReducer(basicStateReducer);\n    }\n    function rerenderState(initialState) {\n      return rerenderReducer(basicStateReducer);\n    }\n    function pushEffect(tag, create, destroy, deps) {\n      var effect = {\n        tag: tag,\n        create: create,\n        destroy: destroy,\n        deps: deps,\n        next: null\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.lastEffect = effect.next = effect;\n      } else {\n        var lastEffect = componentUpdateQueue.lastEffect;\n        if (lastEffect === null) {\n          componentUpdateQueue.lastEffect = effect.next = effect;\n        } else {\n          var firstEffect = lastEffect.next;\n          lastEffect.next = effect;\n          effect.next = firstEffect;\n          componentUpdateQueue.lastEffect = effect;\n        }\n      }\n      return effect;\n    }\n    function mountRef(initialValue) {\n      var hook = mountWorkInProgressHook();\n      {\n        var _ref2 = {\n          current: initialValue\n        };\n        hook.memoizedState = _ref2;\n        return _ref2;\n      }\n    }\n    function updateRef(initialValue) {\n      var hook = updateWorkInProgressHook();\n      return hook.memoizedState;\n    }\n    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n    }\n    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var destroy = undefined;\n      if (currentHook !== null) {\n        var prevEffect = currentHook.memoizedState;\n        destroy = prevEffect.destroy;\n        if (nextDeps !== null) {\n          var prevDeps = prevEffect.deps;\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n            return;\n          }\n        }\n      }\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n    }\n    function mountEffect(create, deps) {\n      {\n        return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n      }\n    }\n    function updateEffect(create, deps) {\n      return updateEffectImpl(Passive, Passive$1, create, deps);\n    }\n    function mountInsertionEffect(create, deps) {\n      return mountEffectImpl(Update, Insertion, create, deps);\n    }\n    function updateInsertionEffect(create, deps) {\n      return updateEffectImpl(Update, Insertion, create, deps);\n    }\n    function mountLayoutEffect(create, deps) {\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, create, deps);\n    }\n    function updateLayoutEffect(create, deps) {\n      return updateEffectImpl(Update, Layout, create, deps);\n    }\n    function imperativeHandleEffect(create, ref) {\n      if (typeof ref === \"function\") {\n        var refCallback = ref;\n        var _inst = create();\n        refCallback(_inst);\n        return function () {\n          refCallback(null);\n        };\n      } else if (ref !== null && ref !== undefined) {\n        var refObject = ref;\n        {\n          if (!refObject.hasOwnProperty(\"current\")) {\n            error(\"Expected useImperativeHandle() first argument to either be a \" + \"ref callback or React.createRef() object. Instead received: %s.\", \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\");\n          }\n        }\n        var _inst2 = create();\n        refObject.current = _inst2;\n        return function () {\n          refObject.current = null;\n        };\n      }\n    }\n    function mountImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n    function updateImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n    function mountDebugValue(value, formatterFn) {}\n    var updateDebugValue = mountDebugValue;\n    function mountCallback(callback, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n    function updateCallback(callback, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n    function mountMemo(nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n    function updateMemo(nextCreate, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n    function mountDeferredValue(value) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = value;\n      return value;\n    }\n    function updateDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      var resolvedCurrentHook = currentHook;\n      var prevValue = resolvedCurrentHook.memoizedState;\n      return updateDeferredValueImpl(hook, prevValue, value);\n    }\n    function rerenderDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      if (currentHook === null) {\n        hook.memoizedState = value;\n        return value;\n      } else {\n        var prevValue = currentHook.memoizedState;\n        return updateDeferredValueImpl(hook, prevValue, value);\n      }\n    }\n    function updateDeferredValueImpl(hook, prevValue, value) {\n      var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n      if (shouldDeferValue) {\n        if (!objectIs(value, prevValue)) {\n          var deferredLane = claimNextTransitionLane();\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\n          markSkippedUpdateLanes(deferredLane);\n          hook.baseState = true;\n        }\n        return prevValue;\n      } else {\n        if (hook.baseState) {\n          hook.baseState = false;\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = value;\n        return value;\n      }\n    }\n    function startTransition(setPending, callback, options) {\n      var previousPriority = getCurrentUpdatePriority();\n      setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n      setPending(true);\n      var prevTransition = ReactCurrentBatchConfig$1.transition;\n      ReactCurrentBatchConfig$1.transition = {};\n      var currentTransition = ReactCurrentBatchConfig$1.transition;\n      {\n        ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n      }\n      try {\n        setPending(false);\n        callback();\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$1.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n            if (updatedFibersCount > 10) {\n              warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n            }\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n    function mountTransition() {\n      var _mountState = mountState(false),\n        isPending = _mountState[0],\n        setPending = _mountState[1];\n      var start = startTransition.bind(null, setPending);\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = start;\n      return [isPending, start];\n    }\n    function updateTransition() {\n      var _updateState = updateState(),\n        isPending = _updateState[0];\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n    function rerenderTransition() {\n      var _rerenderState = rerenderState(),\n        isPending = _rerenderState[0];\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n    var isUpdatingOpaqueValueInRenderPhase = false;\n    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n      {\n        return isUpdatingOpaqueValueInRenderPhase;\n      }\n    }\n    function mountId() {\n      var hook = mountWorkInProgressHook();\n      var root = getWorkInProgressRoot();\n      var identifierPrefix = root.identifierPrefix;\n      var id;\n      {\n        var globalClientId = globalClientIdCounter++;\n        id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n      }\n      hook.memoizedState = id;\n      return id;\n    }\n    function updateId() {\n      var hook = updateWorkInProgressHook();\n      var id = hook.memoizedState;\n      return id;\n    }\n    function dispatchReducerAction(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        enqueueUpdate$1(fiber, queue, update);\n        var eventTime = requestEventTime();\n        var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n        if (root !== null) {\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n    function dispatchSetState(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        enqueueUpdate$1(fiber, queue, update);\n        var alternate = fiber.alternate;\n        if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n          var lastRenderedReducer = queue.lastRenderedReducer;\n          if (lastRenderedReducer !== null) {\n            var prevDispatcher;\n            {\n              prevDispatcher = ReactCurrentDispatcher$1.current;\n              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n            }\n            try {\n              var currentState = queue.lastRenderedState;\n              var eagerState = lastRenderedReducer(currentState, action);\n              update.hasEagerState = true;\n              update.eagerState = eagerState;\n              if (objectIs(eagerState, currentState)) {\n                return;\n              }\n            } catch (error) {} finally {\n              {\n                ReactCurrentDispatcher$1.current = prevDispatcher;\n              }\n            }\n          }\n        }\n        var eventTime = requestEventTime();\n        var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n        if (root !== null) {\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n    function isRenderPhaseUpdate(fiber) {\n      var alternate = fiber.alternate;\n      return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n    }\n    function enqueueRenderPhaseUpdate(queue, update) {\n      didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n      var pending = queue.pending;\n      if (pending === null) {\n        update.next = update;\n      } else {\n        update.next = pending.next;\n        pending.next = update;\n      }\n      queue.pending = update;\n    }\n    function enqueueUpdate$1(fiber, queue, update, lane) {\n      if (isInterleavedUpdate(fiber)) {\n        var interleaved = queue.interleaved;\n        if (interleaved === null) {\n          update.next = update;\n          pushInterleavedQueue(queue);\n        } else {\n          update.next = interleaved.next;\n          interleaved.next = update;\n        }\n        queue.interleaved = update;\n      } else {\n        var pending = queue.pending;\n        if (pending === null) {\n          update.next = update;\n        } else {\n          update.next = pending.next;\n          pending.next = update;\n        }\n        queue.pending = update;\n      }\n    }\n    function entangleTransitionUpdate(root, queue, lane) {\n      if (isTransitionLane(lane)) {\n        var queueLanes = queue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        queue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n    var ContextOnlyDispatcher = {\n      readContext: _readContext,\n      useCallback: throwInvalidHookError,\n      useContext: throwInvalidHookError,\n      useEffect: throwInvalidHookError,\n      useImperativeHandle: throwInvalidHookError,\n      useInsertionEffect: throwInvalidHookError,\n      useLayoutEffect: throwInvalidHookError,\n      useMemo: throwInvalidHookError,\n      useReducer: throwInvalidHookError,\n      useRef: throwInvalidHookError,\n      useState: throwInvalidHookError,\n      useDebugValue: throwInvalidHookError,\n      useDeferredValue: throwInvalidHookError,\n      useTransition: throwInvalidHookError,\n      useMutableSource: throwInvalidHookError,\n      useSyncExternalStore: throwInvalidHookError,\n      useId: throwInvalidHookError,\n      unstable_isNewReconciler: enableNewReconciler\n    };\n    var HooksDispatcherOnMountInDEV = null;\n    var HooksDispatcherOnMountWithHookTypesInDEV = null;\n    var HooksDispatcherOnUpdateInDEV = null;\n    var HooksDispatcherOnRerenderInDEV = null;\n    var InvalidNestedHooksDispatcherOnMountInDEV = null;\n    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;\n    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n    {\n      var warnInvalidContextAccess = function warnInvalidContextAccess() {\n        error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n      };\n      var warnInvalidHookAccess = function warnInvalidHookAccess() {\n        error(\"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" + \"You can only call Hooks at the top level of your React function. \" + \"For more information, see \" + \"https://reactjs.org/link/rules-of-hooks\");\n      };\n      HooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnMountWithHookTypesInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n    }\n    var now$1 = Scheduler.unstable_now;\n    var commitTime = 0;\n    var layoutEffectStartTime = -1;\n    var profilerStartTime = -1;\n    var passiveEffectStartTime = -1;\n    var currentUpdateIsNested = false;\n    var nestedUpdateScheduled = false;\n    function isCurrentUpdateNested() {\n      return currentUpdateIsNested;\n    }\n    function markNestedUpdateScheduled() {\n      {\n        nestedUpdateScheduled = true;\n      }\n    }\n    function resetNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = false;\n        nestedUpdateScheduled = false;\n      }\n    }\n    function syncNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = nestedUpdateScheduled;\n        nestedUpdateScheduled = false;\n      }\n    }\n    function getCommitTime() {\n      return commitTime;\n    }\n    function recordCommitTime() {\n      commitTime = now$1();\n    }\n    function startProfilerTimer(fiber) {\n      profilerStartTime = now$1();\n      if (fiber.actualStartTime < 0) {\n        fiber.actualStartTime = now$1();\n      }\n    }\n    function stopProfilerTimerIfRunning(fiber) {\n      profilerStartTime = -1;\n    }\n    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n      if (profilerStartTime >= 0) {\n        var elapsedTime = now$1() - profilerStartTime;\n        fiber.actualDuration += elapsedTime;\n        if (overrideBaseTime) {\n          fiber.selfBaseDuration = elapsedTime;\n        }\n        profilerStartTime = -1;\n      }\n    }\n    function recordLayoutEffectDuration(fiber) {\n      if (layoutEffectStartTime >= 0) {\n        var elapsedTime = now$1() - layoutEffectStartTime;\n        layoutEffectStartTime = -1;\n        var parentFiber = fiber.return;\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              root.effectDuration += elapsedTime;\n              return;\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += elapsedTime;\n              return;\n          }\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n    function recordPassiveEffectDuration(fiber) {\n      if (passiveEffectStartTime >= 0) {\n        var elapsedTime = now$1() - passiveEffectStartTime;\n        passiveEffectStartTime = -1;\n        var parentFiber = fiber.return;\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              if (root !== null) {\n                root.passiveEffectDuration += elapsedTime;\n              }\n              return;\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              if (parentStateNode !== null) {\n                parentStateNode.passiveEffectDuration += elapsedTime;\n              }\n              return;\n          }\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n    function startLayoutEffectTimer() {\n      layoutEffectStartTime = now$1();\n    }\n    function startPassiveEffectTimer() {\n      passiveEffectStartTime = now$1();\n    }\n    function transferActualDuration(fiber) {\n      var child = fiber.child;\n      while (child) {\n        fiber.actualDuration += child.actualDuration;\n        child = child.sibling;\n      }\n    }\n    function createCapturedValue(value, source) {\n      return {\n        value: value,\n        source: source,\n        stack: getStackByFiberInDevAndProd(source)\n      };\n    }\n    if (typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !== \"function\") {\n      throw new Error(\"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\");\n    }\n    function showErrorDialog(boundary, errorInfo) {\n      var capturedError = {\n        componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n        error: errorInfo.value,\n        errorBoundary: boundary !== null && boundary.tag === ClassComponent ? boundary.stateNode : null\n      };\n      return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError);\n    }\n    function logCapturedError(boundary, errorInfo) {\n      try {\n        var logError = showErrorDialog(boundary, errorInfo);\n        if (logError === false) {\n          return;\n        }\n        var error = errorInfo.value;\n        if (true) {\n          var source = errorInfo.source;\n          var stack = errorInfo.stack;\n          var componentStack = stack !== null ? stack : \"\";\n          if (error != null && error._suppressLogging) {\n            if (boundary.tag === ClassComponent) {\n              return;\n            }\n            console[\"error\"](error);\n          }\n          var componentName = source ? getComponentNameFromFiber(source) : null;\n          var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : \"The above error occurred in one of your React components:\";\n          var errorBoundaryMessage;\n          if (boundary.tag === HostRoot) {\n            errorBoundaryMessage = \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" + \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n          } else {\n            var errorBoundaryName = getComponentNameFromFiber(boundary) || \"Anonymous\";\n            errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n          }\n          var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage);\n          console[\"error\"](combinedMessage);\n        } else {\n          console[\"error\"](error);\n        }\n      } catch (e) {\n        setTimeout(function () {\n          throw e;\n        });\n      }\n    }\n    var PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n    function createRootErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      update.payload = {\n        element: null\n      };\n      var error = errorInfo.value;\n      update.callback = function () {\n        onUncaughtError(error);\n        logCapturedError(fiber, errorInfo);\n      };\n      return update;\n    }\n    function createClassErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n      if (typeof getDerivedStateFromError === \"function\") {\n        var error$1 = errorInfo.value;\n        update.payload = function () {\n          return getDerivedStateFromError(error$1);\n        };\n        update.callback = function () {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n        };\n      }\n      var inst = fiber.stateNode;\n      if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n        update.callback = function callback() {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n          if (typeof getDerivedStateFromError !== \"function\") {\n            markLegacyErrorBoundaryAsFailed(this);\n          }\n          var error$1 = errorInfo.value;\n          var stack = errorInfo.stack;\n          this.componentDidCatch(error$1, {\n            componentStack: stack !== null ? stack : \"\"\n          });\n          {\n            if (typeof getDerivedStateFromError !== \"function\") {\n              if (!includesSomeLane(fiber.lanes, SyncLane)) {\n                error(\"%s: Error boundaries should implement getDerivedStateFromError(). \" + \"In that method, return a state update to display an error message or fallback UI.\", getComponentNameFromFiber(fiber) || \"Unknown\");\n              }\n            }\n          }\n        };\n      }\n      return update;\n    }\n    function attachPingListener(root, wakeable, lanes) {\n      var pingCache = root.pingCache;\n      var threadIDs;\n      if (pingCache === null) {\n        pingCache = root.pingCache = new PossiblyWeakMap$1();\n        threadIDs = new Set();\n        pingCache.set(wakeable, threadIDs);\n      } else {\n        threadIDs = pingCache.get(wakeable);\n        if (threadIDs === undefined) {\n          threadIDs = new Set();\n          pingCache.set(wakeable, threadIDs);\n        }\n      }\n      if (!threadIDs.has(lanes)) {\n        threadIDs.add(lanes);\n        var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n        {\n          if (isDevToolsPresent) {\n            restorePendingUpdaters(root, lanes);\n          }\n        }\n        wakeable.then(ping, ping);\n      }\n    }\n    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n      var wakeables = suspenseBoundary.updateQueue;\n      if (wakeables === null) {\n        var updateQueue = new Set();\n        updateQueue.add(wakeable);\n        suspenseBoundary.updateQueue = updateQueue;\n      } else {\n        wakeables.add(wakeable);\n      }\n    }\n    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n      var tag = sourceFiber.tag;\n      if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n        var currentSource = sourceFiber.alternate;\n        if (currentSource) {\n          sourceFiber.updateQueue = currentSource.updateQueue;\n          sourceFiber.memoizedState = currentSource.memoizedState;\n          sourceFiber.lanes = currentSource.lanes;\n        } else {\n          sourceFiber.updateQueue = null;\n          sourceFiber.memoizedState = null;\n        }\n      }\n    }\n    function getNearestSuspenseBoundaryToCapture(returnFiber) {\n      var node = returnFiber;\n      do {\n        if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n          return node;\n        }\n        node = node.return;\n      } while (node !== null);\n      return null;\n    }\n    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n      if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n        if (suspenseBoundary === returnFiber) {\n          suspenseBoundary.flags |= ShouldCapture;\n        } else {\n          suspenseBoundary.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n          if (sourceFiber.tag === ClassComponent) {\n            var currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              var update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n        }\n        return suspenseBoundary;\n      }\n      suspenseBoundary.flags |= ShouldCapture;\n      suspenseBoundary.lanes = rootRenderLanes;\n      return suspenseBoundary;\n    }\n    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n      sourceFiber.flags |= Incomplete;\n      {\n        if (isDevToolsPresent) {\n          restorePendingUpdaters(root, rootRenderLanes);\n        }\n      }\n      if (value !== null && typeof value === \"object\" && typeof value.then === \"function\") {\n        var wakeable = value;\n        resetSuspendedComponent(sourceFiber);\n        var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n        if (suspenseBoundary !== null) {\n          suspenseBoundary.flags &= ~ForceClientRender;\n          markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes);\n          if (suspenseBoundary.mode & ConcurrentMode) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n          }\n          attachRetryListener(suspenseBoundary, root, wakeable);\n          return;\n        } else {\n          if (!includesSyncLane(rootRenderLanes)) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n            renderDidSuspendDelayIfPossible();\n            return;\n          }\n          var uncaughtSuspenseError = new Error(\"A component suspended while responding to synchronous input. This \" + \"will cause the UI to be replaced with a loading indicator. To \" + \"fix, updates that suspend should be wrapped \" + \"with startTransition.\");\n          value = uncaughtSuspenseError;\n        }\n      }\n      renderDidError(value);\n      value = createCapturedValue(value, sourceFiber);\n      var workInProgress = returnFiber;\n      do {\n        switch (workInProgress.tag) {\n          case HostRoot:\n            {\n              var _errorInfo = value;\n              workInProgress.flags |= ShouldCapture;\n              var lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              return;\n            }\n          case ClassComponent:\n            var errorInfo = value;\n            var ctor = workInProgress.type;\n            var instance = workInProgress.stateNode;\n            if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === \"function\" || instance !== null && typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n              workInProgress.flags |= ShouldCapture;\n              var _lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane);\n              var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n              enqueueCapturedUpdate(workInProgress, _update);\n              return;\n            }\n            break;\n        }\n        workInProgress = workInProgress.return;\n      } while (workInProgress !== null);\n    }\n    function getSuspendedCache() {\n      {\n        return null;\n      }\n    }\n    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n    var didReceiveUpdate = false;\n    var didWarnAboutBadClass;\n    var didWarnAboutModulePatternComponent;\n    var didWarnAboutContextTypeOnFunctionComponent;\n    var didWarnAboutGetDerivedStateOnFunctionComponent;\n    var didWarnAboutFunctionRefs;\n    var didWarnAboutReassigningProps;\n    var didWarnAboutRevealOrder;\n    var didWarnAboutTailOptions;\n    {\n      didWarnAboutBadClass = {};\n      didWarnAboutModulePatternComponent = {};\n      didWarnAboutContextTypeOnFunctionComponent = {};\n      didWarnAboutGetDerivedStateOnFunctionComponent = {};\n      didWarnAboutFunctionRefs = {};\n      didWarnAboutReassigningProps = false;\n      didWarnAboutRevealOrder = {};\n      didWarnAboutTailOptions = {};\n    }\n    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n      if (current === null) {\n        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n      }\n    }\n    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n      workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n    }\n    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var render = Component.render;\n      var ref = workInProgress.ref;\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n        setIsRendering(false);\n      }\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      if (current === null) {\n        var type = Component.type;\n        if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {\n          var resolvedType = type;\n          {\n            resolvedType = resolveFunctionForHotReloading(type);\n          }\n          workInProgress.tag = SimpleMemoComponent;\n          workInProgress.type = resolvedType;\n          {\n            validateFunctionComponentInDev(workInProgress, type);\n          }\n          return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n        }\n        {\n          var innerPropTypes = type.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(type));\n          }\n        }\n        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n        child.ref = workInProgress.ref;\n        child.return = workInProgress;\n        workInProgress.child = child;\n        return child;\n      }\n      {\n        var _type = Component.type;\n        var _innerPropTypes = _type.propTypes;\n        if (_innerPropTypes) {\n          checkPropTypes(_innerPropTypes, nextProps, \"prop\", getComponentNameFromType(_type));\n        }\n      }\n      var currentChild = current.child;\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n      if (!hasScheduledUpdateOrContext) {\n        var prevProps = currentChild.memoizedProps;\n        var compare = Component.compare;\n        compare = compare !== null ? compare : shallowEqual;\n        if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      }\n      workInProgress.flags |= PerformedWork;\n      var newChild = createWorkInProgress(currentChild, nextProps);\n      newChild.ref = workInProgress.ref;\n      newChild.return = workInProgress;\n      workInProgress.child = newChild;\n      return newChild;\n    }\n    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerMemoType = workInProgress.elementType;\n          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n            var lazyComponent = outerMemoType;\n            var payload = lazyComponent._payload;\n            var init = lazyComponent._init;\n            try {\n              outerMemoType = init(payload);\n            } catch (x) {\n              outerMemoType = null;\n            }\n            var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, nextProps, \"prop\", getComponentNameFromType(outerMemoType));\n            }\n          }\n        }\n      }\n      if (current !== null) {\n        var prevProps = current.memoizedProps;\n        if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {\n          didReceiveUpdate = false;\n          workInProgress.pendingProps = nextProps = prevProps;\n          if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n            workInProgress.lanes = current.lanes;\n            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n          } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          }\n        }\n      }\n      return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n    }\n    function updateOffscreenComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      var prevState = current !== null ? current.memoizedState : null;\n      if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          var nextState = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = nextState;\n          pushRenderLanes(workInProgress, renderLanes);\n        } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n          var spawnedCachePool = null;\n          var nextBaseLanes;\n          if (prevState !== null) {\n            var prevBaseLanes = prevState.baseLanes;\n            nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n          } else {\n            nextBaseLanes = renderLanes;\n          }\n          workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n          var _nextState = {\n            baseLanes: nextBaseLanes,\n            cachePool: spawnedCachePool,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState;\n          workInProgress.updateQueue = null;\n          pushRenderLanes(workInProgress, nextBaseLanes);\n          return null;\n        } else {\n          var _nextState2 = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState2;\n          var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n          pushRenderLanes(workInProgress, subtreeRenderLanes);\n        }\n      } else {\n        var _subtreeRenderLanes;\n        if (prevState !== null) {\n          _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n          workInProgress.memoizedState = null;\n        } else {\n          _subtreeRenderLanes = renderLanes;\n        }\n        pushRenderLanes(workInProgress, _subtreeRenderLanes);\n      }\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateFragment(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMode(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateProfiler(current, workInProgress, renderLanes) {\n      {\n        workInProgress.flags |= Update;\n        {\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function markRef(current, workInProgress) {\n      var ref = workInProgress.ref;\n      if (current === null && ref !== null || current !== null && current.ref !== ref) {\n        workInProgress.flags |= Ref;\n      }\n    }\n    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n        setIsRendering(false);\n      }\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        switch (shouldError(workInProgress)) {\n          case false:\n            {\n              var _instance = workInProgress.stateNode;\n              var ctor = workInProgress.type;\n              var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n              var state = tempInstance.state;\n              _instance.updater.enqueueSetState(_instance, state, null);\n              break;\n            }\n          case true:\n            {\n              workInProgress.flags |= DidCapture;\n              workInProgress.flags |= ShouldCapture;\n              var error$1 = new Error(\"Simulated error coming from DevTools\");\n              var lane = pickArbitraryLane(renderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createClassErrorUpdate(workInProgress, createCapturedValue(error$1, workInProgress), lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              break;\n            }\n        }\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var hasContext;\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var instance = workInProgress.stateNode;\n      var shouldUpdate;\n      if (instance === null) {\n        resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);\n        constructClassInstance(workInProgress, Component, nextProps);\n        mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n        shouldUpdate = true;\n      } else if (current === null) {\n        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      } else {\n        shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n      }\n      var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n      {\n        var inst = workInProgress.stateNode;\n        if (shouldUpdate && inst.props !== nextProps) {\n          if (!didWarnAboutReassigningProps) {\n            error(\"It looks like %s is reassigning its own `this.props` while rendering. \" + \"This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress) || \"a component\");\n          }\n          didWarnAboutReassigningProps = true;\n        }\n      }\n      return nextUnitOfWork;\n    }\n    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n      markRef(current, workInProgress);\n      var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n      if (!shouldUpdate && !didCaptureError) {\n        if (hasContext) {\n          invalidateContextProvider(workInProgress, Component, false);\n        }\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      var instance = workInProgress.stateNode;\n      ReactCurrentOwner$1.current = workInProgress;\n      var nextChildren;\n      if (didCaptureError && typeof Component.getDerivedStateFromError !== \"function\") {\n        nextChildren = null;\n        {\n          stopProfilerTimerIfRunning();\n        }\n      } else {\n        {\n          setIsRendering(true);\n          nextChildren = instance.render();\n          setIsRendering(false);\n        }\n      }\n      workInProgress.flags |= PerformedWork;\n      if (current !== null && didCaptureError) {\n        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      workInProgress.memoizedState = instance.state;\n      if (hasContext) {\n        invalidateContextProvider(workInProgress, Component, true);\n      }\n      return workInProgress.child;\n    }\n    function pushHostRootContext(workInProgress) {\n      var root = workInProgress.stateNode;\n      if (root.pendingContext) {\n        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n      } else if (root.context) {\n        pushTopLevelContextObject(workInProgress, root.context, false);\n      }\n      pushHostContainer(workInProgress, root.containerInfo);\n    }\n    function updateHostRoot(current, workInProgress, renderLanes) {\n      pushHostRootContext(workInProgress);\n      if (current === null) {\n        throw new Error(\"Should have a current fiber. This is a bug in React.\");\n      }\n      var nextProps = workInProgress.pendingProps;\n      var prevState = workInProgress.memoizedState;\n      var prevChildren = prevState.element;\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n      var nextState = workInProgress.memoizedState;\n      var root = workInProgress.stateNode;\n      var nextChildren = nextState.element;\n      {\n        if (nextChildren === prevChildren) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n    function updateHostComponent(current, workInProgress, renderLanes) {\n      pushHostContext(workInProgress);\n      var type = workInProgress.type;\n      var nextProps = workInProgress.pendingProps;\n      var prevProps = current !== null ? current.memoizedProps : null;\n      var nextChildren = nextProps.children;\n      if (prevProps !== null && shouldSetTextContent()) {\n        workInProgress.flags |= ContentReset;\n      }\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateHostText(current, workInProgress) {\n      return null;\n    }\n    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var lazyComponent = elementType;\n      var payload = lazyComponent._payload;\n      var init = lazyComponent._init;\n      var Component = init(payload);\n      workInProgress.type = Component;\n      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n      var resolvedProps = resolveDefaultProps(Component, props);\n      var child;\n      switch (resolvedTag) {\n        case FunctionComponent:\n          {\n            {\n              validateFunctionComponentInDev(workInProgress, Component);\n              workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n            }\n            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case ClassComponent:\n          {\n            {\n              workInProgress.type = Component = resolveClassForHotReloading(Component);\n            }\n            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case ForwardRef:\n          {\n            {\n              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n            }\n            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case MemoComponent:\n          {\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = Component.propTypes;\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, resolvedProps, \"prop\", getComponentNameFromType(Component));\n                }\n              }\n            }\n            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);\n            return child;\n          }\n      }\n      var hint = \"\";\n      {\n        if (Component !== null && typeof Component === \"object\" && Component.$$typeof === REACT_LAZY_TYPE) {\n          hint = \" Did you wrap a component in React.lazy() more than once?\";\n        }\n      }\n      throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n    }\n    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      workInProgress.tag = ClassComponent;\n      var hasContext;\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      constructClassInstance(workInProgress, Component, nextProps);\n      mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n    }\n    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var value;\n      {\n        if (Component.prototype && typeof Component.prototype.render === \"function\") {\n          var componentName = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutBadClass[componentName]) {\n            error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + \"This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName);\n            didWarnAboutBadClass[componentName] = true;\n          }\n        }\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n        }\n        setIsRendering(true);\n        ReactCurrentOwner$1.current = workInProgress;\n        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      {\n        if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n          var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutModulePatternComponent[_componentName]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName, _componentName, _componentName);\n            didWarnAboutModulePatternComponent[_componentName] = true;\n          }\n        }\n      }\n      if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n        {\n          var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutModulePatternComponent[_componentName2]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName2, _componentName2, _componentName2);\n            didWarnAboutModulePatternComponent[_componentName2] = true;\n          }\n        }\n        workInProgress.tag = ClassComponent;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        var hasContext = false;\n        if (isContextProvider(Component)) {\n          hasContext = true;\n          pushContextProvider(workInProgress);\n        } else {\n          hasContext = false;\n        }\n        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n        initializeUpdateQueue(workInProgress);\n        adoptClassInstance(workInProgress, value);\n        mountClassInstance(workInProgress, Component, props, renderLanes);\n        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n      } else {\n        workInProgress.tag = FunctionComponent;\n        reconcileChildren(null, workInProgress, value, renderLanes);\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n        }\n        return workInProgress.child;\n      }\n    }\n    function validateFunctionComponentInDev(workInProgress, Component) {\n      {\n        if (Component) {\n          if (Component.childContextTypes) {\n            error(\"%s(...): childContextTypes cannot be defined on a function component.\", Component.displayName || Component.name || \"Component\");\n          }\n        }\n        if (workInProgress.ref !== null) {\n          var info = \"\";\n          var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n          var warningKey = ownerName || \"\";\n          var debugSource = workInProgress._debugSource;\n          if (debugSource) {\n            warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n          }\n          if (!didWarnAboutFunctionRefs[warningKey]) {\n            didWarnAboutFunctionRefs[warningKey] = true;\n            error(\"Function components cannot be given refs. \" + \"Attempts to access this ref will fail. \" + \"Did you mean to use React.forwardRef()?%s\", info);\n          }\n        }\n        if (typeof Component.getDerivedStateFromProps === \"function\") {\n          var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n            error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3);\n            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n          }\n        }\n        if (typeof Component.contextType === \"object\" && Component.contextType !== null) {\n          var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n            error(\"%s: Function components do not support contextType.\", _componentName4);\n            didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n          }\n        }\n      }\n    }\n    var SUSPENDED_MARKER = {\n      dehydrated: null,\n      treeContext: null,\n      retryLane: NoLane\n    };\n    function mountSuspenseOffscreenState(renderLanes) {\n      return {\n        baseLanes: renderLanes,\n        cachePool: getSuspendedCache(),\n        transitions: null\n      };\n    }\n    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n      var cachePool = null;\n      return {\n        baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n        cachePool: cachePool,\n        transitions: prevOffscreenState.transitions\n      };\n    }\n    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n      if (current !== null) {\n        var suspenseState = current.memoizedState;\n        if (suspenseState === null) {\n          return false;\n        }\n      }\n      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    }\n    function getRemainingWorkInPrimaryTree(current, renderLanes) {\n      return removeLanes(current.childLanes, renderLanes);\n    }\n    function updateSuspenseComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      {\n        if (shouldSuspend(workInProgress)) {\n          workInProgress.flags |= DidCapture;\n        }\n      }\n      var suspenseContext = suspenseStackCursor.current;\n      var showFallback = false;\n      var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n      if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n        showFallback = true;\n        workInProgress.flags &= ~DidCapture;\n      } else {\n        if (current === null || current.memoizedState !== null) {\n          {\n            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n          }\n        }\n      }\n      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      pushSuspenseContext(workInProgress, suspenseContext);\n      if (current === null) {\n        var suspenseState = workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          var dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(workInProgress);\n          }\n        }\n        var nextPrimaryChildren = nextProps.children;\n        var nextFallbackChildren = nextProps.fallback;\n        if (showFallback) {\n          var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var primaryChildFragment = workInProgress.child;\n          primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackFragment;\n        } else {\n          return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n        }\n      } else {\n        var prevState = current.memoizedState;\n        if (prevState !== null) {\n          var _dehydrated = prevState.dehydrated;\n          if (_dehydrated !== null) {\n            return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\n          }\n        }\n        if (showFallback) {\n          var _nextFallbackChildren = nextProps.fallback;\n          var _nextPrimaryChildren = nextProps.children;\n          var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\n          var _primaryChildFragment2 = workInProgress.child;\n          var prevOffscreenState = current.child.memoizedState;\n          _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n          _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        } else {\n          var _nextPrimaryChildren2 = nextProps.children;\n          var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\n          workInProgress.memoizedState = null;\n          return _primaryChildFragment3;\n        }\n      }\n    }\n    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n      primaryChildFragment.return = workInProgress;\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var progressedPrimaryFragment = workInProgress.child;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      var fallbackChildFragment;\n      if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = 0;\n          primaryChildFragment.treeBaseDuration = 0;\n        }\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      } else {\n        primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      }\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n      return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n    }\n    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n      return createWorkInProgress(current, offscreenProps);\n    }\n    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n        mode: \"visible\",\n        children: primaryChildren\n      });\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        primaryChildFragment.lanes = renderLanes;\n      }\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = null;\n      if (currentFallbackChildFragment !== null) {\n        var deletions = workInProgress.deletions;\n        if (deletions === null) {\n          workInProgress.deletions = [currentFallbackChildFragment];\n          workInProgress.flags |= ChildDeletion;\n        } else {\n          deletions.push(currentFallbackChildFragment);\n        }\n      }\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      if ((mode & ConcurrentMode) === NoMode && workInProgress.child !== currentPrimaryChildFragment) {\n        var progressedPrimaryFragment = workInProgress.child;\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n          primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n        }\n        workInProgress.deletions = null;\n      } else {\n        primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);\n        primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n      }\n      var fallbackChildFragment;\n      if (currentFallbackChildFragment !== null) {\n        fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n      } else {\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n        fallbackChildFragment.flags |= Placement;\n      }\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\n      if (recoverableError !== null) {\n        queueHydrationError(recoverableError);\n      }\n      reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      var nextProps = workInProgress.pendingProps;\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n      primaryChildFragment.flags |= Placement;\n      workInProgress.memoizedState = null;\n      return primaryChildFragment;\n    }\n    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var fiberMode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\n      var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null);\n      fallbackChildFragment.flags |= Placement;\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n        reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      }\n      return fallbackChildFragment;\n    }\n    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        {\n          error(\"Cannot hydrate Suspense in legacy mode. Switch from \" + \"ReactDOM.hydrate(element, container) to \" + \"ReactDOMClient.hydrateRoot(container, <App />)\" + \".render(element) or remove the Suspense components from \" + \"the server rendered components.\");\n        }\n        workInProgress.lanes = laneToLanes(SyncLane);\n      } else if (isSuspenseInstanceFallback()) {\n        workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n      } else {\n        workInProgress.lanes = laneToLanes(OffscreenLane);\n      }\n      return null;\n    }\n    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\n      if (!didSuspend) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, null);\n        }\n        if (isSuspenseInstanceFallback()) {\n          var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(),\n            errorMessage = _getSuspenseInstanceF.errorMessage;\n          var error = errorMessage ? new Error(errorMessage) : new Error(\"The server could not finish this Suspense boundary, likely \" + \"due to an error during server rendering. Switched to \" + \"client rendering.\");\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, error);\n        }\n        var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n        if (didReceiveUpdate || hasContextChanged) {\n          var root = getWorkInProgressRoot();\n          if (root !== null) {\n            var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\n            if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\n              suspenseState.retryLane = attemptHydrationAtLane;\n              var eventTime = NoTimestamp;\n              scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n            }\n          }\n          renderDidSuspendDelayIfPossible();\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, new Error(\"This Suspense boundary received an update before it finished \" + \"hydrating. This caused the boundary to switch to client rendering. \" + \"The usual way to fix this is to wrap the original update \" + \"in startTransition.\"));\n        } else if (isSuspenseInstancePending()) {\n          workInProgress.flags |= DidCapture;\n          workInProgress.child = current.child;\n          var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n          registerSuspenseInstanceRetry();\n          return null;\n        } else {\n          reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\n          var primaryChildren = nextProps.children;\n          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n          primaryChildFragment.flags |= Hydrating;\n          return primaryChildFragment;\n        }\n      } else {\n        if (workInProgress.flags & ForceClientRender) {\n          workInProgress.flags &= ~ForceClientRender;\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, new Error(\"There was an error while hydrating this Suspense boundary. \" + \"Switched to client rendering.\"));\n        } else if (workInProgress.memoizedState !== null) {\n          workInProgress.child = current.child;\n          workInProgress.flags |= DidCapture;\n          return null;\n        } else {\n          var nextPrimaryChildren = nextProps.children;\n          var nextFallbackChildren = nextProps.fallback;\n          var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var _primaryChildFragment4 = workInProgress.child;\n          _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        }\n      }\n    }\n    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n      fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n    }\n    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n      var node = firstChild;\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n          if (state !== null) {\n            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n          }\n        } else if (node.tag === SuspenseListComponent) {\n          scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === workInProgress) {\n          return;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === workInProgress) {\n            return;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n    }\n    function findLastContentRow(firstChild) {\n      var row = firstChild;\n      var lastContentRow = null;\n      while (row !== null) {\n        var currentRow = row.alternate;\n        if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n          lastContentRow = row;\n        }\n        row = row.sibling;\n      }\n      return lastContentRow;\n    }\n    function validateRevealOrder(revealOrder) {\n      {\n        if (revealOrder !== undefined && revealOrder !== \"forwards\" && revealOrder !== \"backwards\" && revealOrder !== \"together\" && !didWarnAboutRevealOrder[revealOrder]) {\n          didWarnAboutRevealOrder[revealOrder] = true;\n          if (typeof revealOrder === \"string\") {\n            switch (revealOrder.toLowerCase()) {\n              case \"together\":\n              case \"forwards\":\n              case \"backwards\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n              case \"forward\":\n              case \"backward\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n              default:\n                error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n                break;\n            }\n          } else {\n            error(\"%s is not a supported value for revealOrder on <SuspenseList />. \" + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n          }\n        }\n      }\n    }\n    function validateTailOptions(tailMode, revealOrder) {\n      {\n        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n          if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n          } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n          }\n        }\n      }\n    }\n    function validateSuspenseListNestedChild(childSlot, index) {\n      {\n        var isAnArray = isArray(childSlot);\n        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n        if (isAnArray || isIterable) {\n          var type = isAnArray ? \"array\" : \"iterable\";\n          error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" + \"an additional SuspenseList to configure its revealOrder: \" + \"<SuspenseList revealOrder=...> ... \" + \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" + \"</SuspenseList>\", type, index, type);\n          return false;\n        }\n      }\n      return true;\n    }\n    function validateSuspenseListChildren(children, revealOrder) {\n      {\n        if ((revealOrder === \"forwards\" || revealOrder === \"backwards\") && children !== undefined && children !== null && children !== false) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              if (!validateSuspenseListNestedChild(children[i], i)) {\n                return;\n              }\n            }\n          } else {\n            var iteratorFn = getIteratorFn(children);\n            if (typeof iteratorFn === \"function\") {\n              var childrenIterator = iteratorFn.call(children);\n              if (childrenIterator) {\n                var step = childrenIterator.next();\n                var _i = 0;\n                for (; !step.done; step = childrenIterator.next()) {\n                  if (!validateSuspenseListNestedChild(step.value, _i)) {\n                    return;\n                  }\n                  _i++;\n                }\n              }\n            } else {\n              error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + \"This is not useful since it needs multiple rows. \" + \"Did you mean to pass multiple children or an array?\", revealOrder);\n            }\n          }\n        }\n      }\n    }\n    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n      var renderState = workInProgress.memoizedState;\n      if (renderState === null) {\n        workInProgress.memoizedState = {\n          isBackwards: isBackwards,\n          rendering: null,\n          renderingStartTime: 0,\n          last: lastContentRow,\n          tail: tail,\n          tailMode: tailMode\n        };\n      } else {\n        renderState.isBackwards = isBackwards;\n        renderState.rendering = null;\n        renderState.renderingStartTime = 0;\n        renderState.last = lastContentRow;\n        renderState.tail = tail;\n        renderState.tailMode = tailMode;\n      }\n    }\n    function updateSuspenseListComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var revealOrder = nextProps.revealOrder;\n      var tailMode = nextProps.tail;\n      var newChildren = nextProps.children;\n      validateRevealOrder(revealOrder);\n      validateTailOptions(tailMode, revealOrder);\n      validateSuspenseListChildren(newChildren, revealOrder);\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      var suspenseContext = suspenseStackCursor.current;\n      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n      if (shouldForceFallback) {\n        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n        workInProgress.flags |= DidCapture;\n      } else {\n        var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n        if (didSuspendBefore) {\n          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n        }\n        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      }\n      pushSuspenseContext(workInProgress, suspenseContext);\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        workInProgress.memoizedState = null;\n      } else {\n        switch (revealOrder) {\n          case \"forwards\":\n            {\n              var lastContentRow = findLastContentRow(workInProgress.child);\n              var tail;\n              if (lastContentRow === null) {\n                tail = workInProgress.child;\n                workInProgress.child = null;\n              } else {\n                tail = lastContentRow.sibling;\n                lastContentRow.sibling = null;\n              }\n              initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);\n              break;\n            }\n          case \"backwards\":\n            {\n              var _tail = null;\n              var row = workInProgress.child;\n              workInProgress.child = null;\n              while (row !== null) {\n                var currentRow = row.alternate;\n                if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n                  workInProgress.child = row;\n                  break;\n                }\n                var nextRow = row.sibling;\n                row.sibling = _tail;\n                _tail = row;\n                row = nextRow;\n              }\n              initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);\n              break;\n            }\n          case \"together\":\n            {\n              initSuspenseListRenderState(workInProgress, false, null, null, undefined);\n              break;\n            }\n          default:\n            {\n              workInProgress.memoizedState = null;\n            }\n        }\n      }\n      return workInProgress.child;\n    }\n    function updatePortalComponent(current, workInProgress, renderLanes) {\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      var nextChildren = workInProgress.pendingProps;\n      if (current === null) {\n        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n    function updateContextProvider(current, workInProgress, renderLanes) {\n      var providerType = workInProgress.type;\n      var context = providerType._context;\n      var newProps = workInProgress.pendingProps;\n      var oldProps = workInProgress.memoizedProps;\n      var newValue = newProps.value;\n      {\n        if (!(\"value\" in newProps)) {\n          if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n            hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n            error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\");\n          }\n        }\n        var providerPropTypes = workInProgress.type.propTypes;\n        if (providerPropTypes) {\n          checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n        }\n      }\n      pushProvider(workInProgress, context, newValue);\n      {\n        if (oldProps !== null) {\n          var oldValue = oldProps.value;\n          if (objectIs(oldValue, newValue)) {\n            if (oldProps.children === newProps.children && !hasContextChanged()) {\n              return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n            }\n          } else {\n            propagateContextChange(workInProgress, context, renderLanes);\n          }\n        }\n      }\n      var newChildren = newProps.children;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n    var hasWarnedAboutUsingContextAsConsumer = false;\n    function updateContextConsumer(current, workInProgress, renderLanes) {\n      var context = workInProgress.type;\n      {\n        if (context._context === undefined) {\n          if (context !== context.Consumer) {\n            if (!hasWarnedAboutUsingContextAsConsumer) {\n              hasWarnedAboutUsingContextAsConsumer = true;\n              error(\"Rendering <Context> directly is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n            }\n          }\n        } else {\n          context = context._context;\n        }\n      }\n      var newProps = workInProgress.pendingProps;\n      var render = newProps.children;\n      {\n        if (typeof render !== \"function\") {\n          error(\"A context consumer was rendered with multiple children, or a child \" + \"that isn't a function. A context consumer expects a single child \" + \"that is a function. If you did pass a function, make sure there \" + \"is no trailing or leading whitespace around it.\");\n        }\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var newValue = _readContext(context);\n      var newChildren;\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        newChildren = render(newValue);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function markWorkInProgressReceivedUpdate() {\n      didReceiveUpdate = true;\n    }\n    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        if (current !== null) {\n          current.alternate = null;\n          workInProgress.alternate = null;\n          workInProgress.flags |= Placement;\n        }\n      }\n    }\n    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n      if (current !== null) {\n        workInProgress.dependencies = current.dependencies;\n      }\n      {\n        stopProfilerTimerIfRunning();\n      }\n      markSkippedUpdateLanes(workInProgress.lanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        {\n          return null;\n        }\n      }\n      cloneChildFibers(current, workInProgress);\n      return workInProgress.child;\n    }\n    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n      {\n        var returnFiber = oldWorkInProgress.return;\n        if (returnFiber === null) {\n          throw new Error(\"Cannot swap the root fiber.\");\n        }\n        current.alternate = null;\n        oldWorkInProgress.alternate = null;\n        newWorkInProgress.index = oldWorkInProgress.index;\n        newWorkInProgress.sibling = oldWorkInProgress.sibling;\n        newWorkInProgress.return = oldWorkInProgress.return;\n        newWorkInProgress.ref = oldWorkInProgress.ref;\n        if (oldWorkInProgress === returnFiber.child) {\n          returnFiber.child = newWorkInProgress;\n        } else {\n          var prevSibling = returnFiber.child;\n          if (prevSibling === null) {\n            throw new Error(\"Expected parent to have a child.\");\n          }\n          while (prevSibling.sibling !== oldWorkInProgress) {\n            prevSibling = prevSibling.sibling;\n            if (prevSibling === null) {\n              throw new Error(\"Expected to find the previous sibling.\");\n            }\n          }\n          prevSibling.sibling = newWorkInProgress;\n        }\n        var deletions = returnFiber.deletions;\n        if (deletions === null) {\n          returnFiber.deletions = [current];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(current);\n        }\n        newWorkInProgress.flags |= Placement;\n        return newWorkInProgress;\n      }\n    }\n    function checkScheduledUpdateOrContext(current, renderLanes) {\n      var updateLanes = current.lanes;\n      if (includesSomeLane(updateLanes, renderLanes)) {\n        return true;\n      }\n      return false;\n    }\n    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          var root = workInProgress.stateNode;\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              pushContextProvider(workInProgress);\n            }\n            break;\n          }\n        case HostPortal:\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          break;\n        case ContextProvider:\n          {\n            var newValue = workInProgress.memoizedProps.value;\n            var context = workInProgress.type._context;\n            pushProvider(workInProgress, context, newValue);\n            break;\n          }\n        case Profiler:\n          {\n            var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n            {\n              var stateNode = workInProgress.stateNode;\n              stateNode.effectDuration = 0;\n              stateNode.passiveEffectDuration = 0;\n            }\n          }\n          break;\n        case SuspenseComponent:\n          {\n            var state = workInProgress.memoizedState;\n            if (state !== null) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                workInProgress.flags |= DidCapture;\n                return null;\n              }\n              var primaryChildFragment = workInProgress.child;\n              var primaryChildLanes = primaryChildFragment.childLanes;\n              if (includesSomeLane(renderLanes, primaryChildLanes)) {\n                return updateSuspenseComponent(current, workInProgress, renderLanes);\n              } else {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n                if (child !== null) {\n                  return child.sibling;\n                } else {\n                  return null;\n                }\n              }\n            } else {\n              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n            }\n            break;\n          }\n        case SuspenseListComponent:\n          {\n            var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n            var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n            if (didSuspendBefore) {\n              if (_hasChildWork) {\n                return updateSuspenseListComponent(current, workInProgress, renderLanes);\n              }\n              workInProgress.flags |= DidCapture;\n            }\n            var renderState = workInProgress.memoizedState;\n            if (renderState !== null) {\n              renderState.rendering = null;\n              renderState.tail = null;\n              renderState.lastEffect = null;\n            }\n            pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n            if (_hasChildWork) {\n              break;\n            } else {\n              return null;\n            }\n          }\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            workInProgress.lanes = NoLanes;\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n    function beginWork(current, workInProgress, renderLanes) {\n      {\n        if (workInProgress._debugNeedsRemount && current !== null) {\n          return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n        }\n      }\n      if (current !== null) {\n        var oldProps = current.memoizedProps;\n        var newProps = workInProgress.pendingProps;\n        if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) {\n          didReceiveUpdate = true;\n        } else {\n          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n          if (!hasScheduledUpdateOrContext && (workInProgress.flags & DidCapture) === NoFlags) {\n            didReceiveUpdate = false;\n            return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n          }\n          if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          } else {\n            didReceiveUpdate = false;\n          }\n        }\n      } else {\n        didReceiveUpdate = false;\n      }\n      workInProgress.lanes = NoLanes;\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n          {\n            return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n          }\n        case LazyComponent:\n          {\n            var elementType = workInProgress.elementType;\n            return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n          }\n        case FunctionComponent:\n          {\n            var Component = workInProgress.type;\n            var unresolvedProps = workInProgress.pendingProps;\n            var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n            return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n          }\n        case ClassComponent:\n          {\n            var _Component = workInProgress.type;\n            var _unresolvedProps = workInProgress.pendingProps;\n            var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n            return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n          }\n        case HostRoot:\n          return updateHostRoot(current, workInProgress, renderLanes);\n        case HostComponent:\n          return updateHostComponent(current, workInProgress, renderLanes);\n        case HostText:\n          return updateHostText();\n        case SuspenseComponent:\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        case HostPortal:\n          return updatePortalComponent(current, workInProgress, renderLanes);\n        case ForwardRef:\n          {\n            var type = workInProgress.type;\n            var _unresolvedProps2 = workInProgress.pendingProps;\n            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n            return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n          }\n        case Fragment:\n          return updateFragment(current, workInProgress, renderLanes);\n        case Mode:\n          return updateMode(current, workInProgress, renderLanes);\n        case Profiler:\n          return updateProfiler(current, workInProgress, renderLanes);\n        case ContextProvider:\n          return updateContextProvider(current, workInProgress, renderLanes);\n        case ContextConsumer:\n          return updateContextConsumer(current, workInProgress, renderLanes);\n        case MemoComponent:\n          {\n            var _type2 = workInProgress.type;\n            var _unresolvedProps3 = workInProgress.pendingProps;\n            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = _type2.propTypes;\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, _resolvedProps3, \"prop\", getComponentNameFromType(_type2));\n                }\n              }\n            }\n            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n            return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n          }\n        case SimpleMemoComponent:\n          {\n            return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n          }\n        case IncompleteClassComponent:\n          {\n            var _Component2 = workInProgress.type;\n            var _unresolvedProps4 = workInProgress.pendingProps;\n            var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n            return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n          }\n        case SuspenseListComponent:\n          {\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          }\n        case ScopeComponent:\n          {\n            break;\n          }\n        case OffscreenComponent:\n          {\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n    function markUpdate(workInProgress) {\n      workInProgress.flags |= Update;\n    }\n    function markRef$1(workInProgress) {\n      workInProgress.flags |= Ref;\n    }\n    var appendAllChildren;\n    var updateHostContainer;\n    var updateHostComponent$1;\n    var updateHostText$1;\n    {\n      appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {\n        var node = workInProgress.child;\n        while (node !== null) {\n          if (node.tag === HostComponent || node.tag === HostText) {\n            appendInitialChild(parent, node.stateNode);\n          } else if (node.tag === HostPortal) ;else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === workInProgress) {\n            return;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === workInProgress) {\n              return;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      };\n      updateHostContainer = function updateHostContainer(current, workInProgress) {};\n      updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {\n        var oldProps = current.memoizedProps;\n        if (oldProps === newProps) {\n          return;\n        }\n        var instance = workInProgress.stateNode;\n        var currentHostContext = getHostContext();\n        var updatePayload = prepareUpdate();\n        workInProgress.updateQueue = updatePayload;\n        if (updatePayload) {\n          markUpdate(workInProgress);\n        }\n      };\n      updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {\n        if (oldText !== newText) {\n          markUpdate(workInProgress);\n        }\n      };\n    }\n    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n      switch (renderState.tailMode) {\n        case \"hidden\":\n          {\n            var tailNode = renderState.tail;\n            var lastTailNode = null;\n            while (tailNode !== null) {\n              if (tailNode.alternate !== null) {\n                lastTailNode = tailNode;\n              }\n              tailNode = tailNode.sibling;\n            }\n            if (lastTailNode === null) {\n              renderState.tail = null;\n            } else {\n              lastTailNode.sibling = null;\n            }\n            break;\n          }\n        case \"collapsed\":\n          {\n            var _tailNode = renderState.tail;\n            var _lastTailNode = null;\n            while (_tailNode !== null) {\n              if (_tailNode.alternate !== null) {\n                _lastTailNode = _tailNode;\n              }\n              _tailNode = _tailNode.sibling;\n            }\n            if (_lastTailNode === null) {\n              if (!hasRenderedATailFallback && renderState.tail !== null) {\n                renderState.tail.sibling = null;\n              } else {\n                renderState.tail = null;\n              }\n            } else {\n              _lastTailNode.sibling = null;\n            }\n            break;\n          }\n      }\n    }\n    function bubbleProperties(completedWork) {\n      var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n      var newChildLanes = NoLanes;\n      var subtreeFlags = NoFlags;\n      if (!didBailout) {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var actualDuration = completedWork.actualDuration;\n          var treeBaseDuration = completedWork.selfBaseDuration;\n          var child = completedWork.child;\n          while (child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n            subtreeFlags |= child.subtreeFlags;\n            subtreeFlags |= child.flags;\n            actualDuration += child.actualDuration;\n            treeBaseDuration += child.treeBaseDuration;\n            child = child.sibling;\n          }\n          completedWork.actualDuration = actualDuration;\n          completedWork.treeBaseDuration = treeBaseDuration;\n        } else {\n          var _child = completedWork.child;\n          while (_child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n            subtreeFlags |= _child.subtreeFlags;\n            subtreeFlags |= _child.flags;\n            _child.return = completedWork;\n            _child = _child.sibling;\n          }\n        }\n        completedWork.subtreeFlags |= subtreeFlags;\n      } else {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var _treeBaseDuration = completedWork.selfBaseDuration;\n          var _child2 = completedWork.child;\n          while (_child2 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));\n            subtreeFlags |= _child2.subtreeFlags & StaticMask;\n            subtreeFlags |= _child2.flags & StaticMask;\n            _treeBaseDuration += _child2.treeBaseDuration;\n            _child2 = _child2.sibling;\n          }\n          completedWork.treeBaseDuration = _treeBaseDuration;\n        } else {\n          var _child3 = completedWork.child;\n          while (_child3 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));\n            subtreeFlags |= _child3.subtreeFlags & StaticMask;\n            subtreeFlags |= _child3.flags & StaticMask;\n            _child3.return = completedWork;\n            _child3 = _child3.sibling;\n          }\n        }\n        completedWork.subtreeFlags |= subtreeFlags;\n      }\n      completedWork.childLanes = newChildLanes;\n      return didBailout;\n    }\n    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\n      var wasHydrated = popHydrationState();\n      if (nextState !== null && nextState.dehydrated !== null) {\n        if (current === null) {\n          if (!wasHydrated) {\n            throw new Error(\"A dehydrated suspense component was completed without a hydrated node. \" + \"This is probably a bug in React.\");\n          }\n          prepareToHydrateHostSuspenseInstance();\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var isTimedOutSuspense = nextState !== null;\n              if (isTimedOutSuspense) {\n                var primaryChildFragment = workInProgress.child;\n                if (primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        } else {\n          if ((workInProgress.flags & DidCapture) === NoFlags) {\n            workInProgress.memoizedState = null;\n          }\n          workInProgress.flags |= Update;\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var _isTimedOutSuspense = nextState !== null;\n              if (_isTimedOutSuspense) {\n                var _primaryChildFragment = workInProgress.child;\n                if (_primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        }\n      } else {\n        upgradeHydrationErrorsToRecoverable();\n        return true;\n      }\n    }\n    function completeWork(current, workInProgress, renderLanes) {\n      var newProps = workInProgress.pendingProps;\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case LazyComponent:\n        case SimpleMemoComponent:\n        case FunctionComponent:\n        case ForwardRef:\n        case Fragment:\n        case Mode:\n        case Profiler:\n        case ContextConsumer:\n        case MemoComponent:\n          bubbleProperties(workInProgress);\n          return null;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostRoot:\n          {\n            var fiberRoot = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            if (fiberRoot.pendingContext) {\n              fiberRoot.context = fiberRoot.pendingContext;\n              fiberRoot.pendingContext = null;\n            }\n            if (current === null || current.child === null) {\n              var wasHydrated = popHydrationState();\n              if (wasHydrated) {\n                markUpdate(workInProgress);\n              } else {\n                if (current !== null) {\n                  var prevState = current.memoizedState;\n                  if (!prevState.isDehydrated || (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                    workInProgress.flags |= Snapshot;\n                    upgradeHydrationErrorsToRecoverable();\n                  }\n                }\n              }\n            }\n            updateHostContainer(current, workInProgress);\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            var rootContainerInstance = getRootHostContainer();\n            var type = workInProgress.type;\n            if (current !== null && workInProgress.stateNode != null) {\n              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n              if (current.ref !== workInProgress.ref) {\n                markRef$1(workInProgress);\n              }\n            } else {\n              if (!newProps) {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n                bubbleProperties(workInProgress);\n                return null;\n              }\n              var currentHostContext = getHostContext();\n              var _wasHydrated = popHydrationState();\n              if (_wasHydrated) {\n                if (prepareToHydrateHostInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n                appendAllChildren(instance, workInProgress, false, false);\n                workInProgress.stateNode = instance;\n                if (finalizeInitialChildren(instance)) {\n                  markUpdate(workInProgress);\n                }\n              }\n              if (workInProgress.ref !== null) {\n                markRef$1(workInProgress);\n              }\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostText:\n          {\n            var newText = newProps;\n            if (current && workInProgress.stateNode != null) {\n              var oldText = current.memoizedProps;\n              updateHostText$1(current, workInProgress, oldText, newText);\n            } else {\n              if (typeof newText !== \"string\") {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n              }\n              var _rootContainerInstance = getRootHostContainer();\n              var _currentHostContext = getHostContext();\n              var _wasHydrated2 = popHydrationState();\n              if (_wasHydrated2) {\n                if (prepareToHydrateHostTextInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n              }\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var nextState = workInProgress.memoizedState;\n            if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\n              var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\n              if (!fallthroughToNormalSuspensePath) {\n                if (workInProgress.flags & ShouldCapture) {\n                  return workInProgress;\n                } else {\n                  return null;\n                }\n              }\n            }\n            if ((workInProgress.flags & DidCapture) !== NoFlags) {\n              workInProgress.lanes = renderLanes;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            var nextDidTimeout = nextState !== null;\n            var prevDidTimeout = current !== null && current.memoizedState !== null;\n            if (nextDidTimeout !== prevDidTimeout) {\n              if (nextDidTimeout) {\n                var _offscreenFiber2 = workInProgress.child;\n                _offscreenFiber2.flags |= Visibility;\n                if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n                  var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n                  if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n                    renderDidSuspend();\n                  } else {\n                    renderDidSuspendDelayIfPossible();\n                  }\n                }\n              }\n            }\n            var wakeables = workInProgress.updateQueue;\n            if (wakeables !== null) {\n              workInProgress.flags |= Update;\n            }\n            bubbleProperties(workInProgress);\n            {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                if (nextDidTimeout) {\n                  var primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        case HostPortal:\n          popHostContainer(workInProgress);\n          updateHostContainer(current, workInProgress);\n          if (current === null) {\n            preparePortalMount(workInProgress.stateNode.containerInfo);\n          }\n          bubbleProperties(workInProgress);\n          return null;\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          bubbleProperties(workInProgress);\n          return null;\n        case IncompleteClassComponent:\n          {\n            var _Component = workInProgress.type;\n            if (isContextProvider(_Component)) {\n              popContext(workInProgress);\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var renderState = workInProgress.memoizedState;\n            if (renderState === null) {\n              bubbleProperties(workInProgress);\n              return null;\n            }\n            var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n            var renderedTail = renderState.rendering;\n            if (renderedTail === null) {\n              if (!didSuspendAlready) {\n                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n                if (!cannotBeSuspended) {\n                  var row = workInProgress.child;\n                  while (row !== null) {\n                    var suspended = findFirstSuspended(row);\n                    if (suspended !== null) {\n                      didSuspendAlready = true;\n                      workInProgress.flags |= DidCapture;\n                      cutOffTailIfNeeded(renderState, false);\n                      var newThenables = suspended.updateQueue;\n                      if (newThenables !== null) {\n                        workInProgress.updateQueue = newThenables;\n                        workInProgress.flags |= Update;\n                      }\n                      workInProgress.subtreeFlags = NoFlags;\n                      resetChildFibers(workInProgress, renderLanes);\n                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));\n                      return workInProgress.child;\n                    }\n                    row = row.sibling;\n                  }\n                }\n                if (renderState.tail !== null && now() > getRenderTargetTime()) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              } else {\n                cutOffTailIfNeeded(renderState, false);\n              }\n            } else {\n              if (!didSuspendAlready) {\n                var _suspended = findFirstSuspended(renderedTail);\n                if (_suspended !== null) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  var _newThenables = _suspended.updateQueue;\n                  if (_newThenables !== null) {\n                    workInProgress.updateQueue = _newThenables;\n                    workInProgress.flags |= Update;\n                  }\n                  cutOffTailIfNeeded(renderState, true);\n                  if (renderState.tail === null && renderState.tailMode === \"hidden\" && !renderedTail.alternate && !getIsHydrating()) {\n                    bubbleProperties(workInProgress);\n                    return null;\n                  }\n                } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              }\n              if (renderState.isBackwards) {\n                renderedTail.sibling = workInProgress.child;\n                workInProgress.child = renderedTail;\n              } else {\n                var previousSibling = renderState.last;\n                if (previousSibling !== null) {\n                  previousSibling.sibling = renderedTail;\n                } else {\n                  workInProgress.child = renderedTail;\n                }\n                renderState.last = renderedTail;\n              }\n            }\n            if (renderState.tail !== null) {\n              var next = renderState.tail;\n              renderState.rendering = next;\n              renderState.tail = next.sibling;\n              renderState.renderingStartTime = now();\n              next.sibling = null;\n              var suspenseContext = suspenseStackCursor.current;\n              if (didSuspendAlready) {\n                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n              } else {\n                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n              }\n              pushSuspenseContext(workInProgress, suspenseContext);\n              return next;\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case ScopeComponent:\n          {\n            break;\n          }\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            popRenderLanes(workInProgress);\n            var _nextState = workInProgress.memoizedState;\n            var nextIsHidden = _nextState !== null;\n            if (current !== null) {\n              var _prevState = current.memoizedState;\n              var prevIsHidden = _prevState !== null;\n              if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n            if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n              bubbleProperties(workInProgress);\n            } else {\n              if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n                bubbleProperties(workInProgress);\n                {\n                  if (workInProgress.subtreeFlags & (Placement | Update)) {\n                    workInProgress.flags |= Visibility;\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        case CacheComponent:\n          {\n            return null;\n          }\n        case TracingMarkerComponent:\n          {\n            return null;\n          }\n      }\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n    function unwindWork(current, workInProgress, renderLanes) {\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n            var flags = workInProgress.flags;\n            if (flags & ShouldCapture) {\n              workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            return null;\n          }\n        case HostRoot:\n          {\n            var root = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            var _flags = workInProgress.flags;\n            if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n              workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n              return workInProgress;\n            }\n            return null;\n          }\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            return null;\n          }\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var suspenseState = workInProgress.memoizedState;\n            if (suspenseState !== null && suspenseState.dehydrated !== null) {\n              if (workInProgress.alternate === null) {\n                throw new Error(\"Threw in newly mounted dehydrated component. This is likely a bug in \" + \"React. Please file an issue.\");\n              }\n            }\n            var _flags2 = workInProgress.flags;\n            if (_flags2 & ShouldCapture) {\n              workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            return null;\n          }\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            return null;\n          }\n        case HostPortal:\n          popHostContainer(workInProgress);\n          return null;\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          return null;\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(workInProgress);\n          return null;\n        case CacheComponent:\n          return null;\n        default:\n          return null;\n      }\n    }\n    function unwindInterruptedWork(current, interruptedWork, renderLanes) {\n      popTreeContext(interruptedWork);\n      switch (interruptedWork.tag) {\n        case ClassComponent:\n          {\n            var childContextTypes = interruptedWork.type.childContextTypes;\n            if (childContextTypes !== null && childContextTypes !== undefined) {\n              popContext(interruptedWork);\n            }\n            break;\n          }\n        case HostRoot:\n          {\n            var root = interruptedWork.stateNode;\n            popHostContainer(interruptedWork);\n            popTopLevelContextObject(interruptedWork);\n            resetWorkInProgressVersions();\n            break;\n          }\n        case HostComponent:\n          {\n            popHostContext(interruptedWork);\n            break;\n          }\n        case HostPortal:\n          popHostContainer(interruptedWork);\n          break;\n        case SuspenseComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n        case SuspenseListComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n        case ContextProvider:\n          var context = interruptedWork.type._context;\n          popProvider(context, interruptedWork);\n          break;\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(interruptedWork);\n          break;\n      }\n    }\n    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n    {\n      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n    }\n    var PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\n    var nextEffect = null;\n    var inProgressLanes = null;\n    var inProgressRoot = null;\n    function reportUncaughtErrorInDEV(error) {\n      {\n        invokeGuardedCallback(null, function () {\n          throw error;\n        });\n        clearCaughtError();\n      }\n    }\n    var callComponentWillUnmountWithTimer = function callComponentWillUnmountWithTimer(current, instance) {\n      instance.props = current.memoizedProps;\n      instance.state = current.memoizedState;\n      if (current.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          instance.componentWillUnmount();\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        instance.componentWillUnmount();\n      }\n    };\n    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n      try {\n        callComponentWillUnmountWithTimer(current, instance);\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    function safelyDetachRef(current, nearestMountedAncestor) {\n      var ref = current.ref;\n      if (ref !== null) {\n        if (typeof ref === \"function\") {\n          var retVal;\n          try {\n            if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                retVal = ref(null);\n              } finally {\n                recordLayoutEffectDuration(current);\n              }\n            } else {\n              retVal = ref(null);\n            }\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          }\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(current));\n            }\n          }\n        } else {\n          ref.current = null;\n        }\n      }\n    }\n    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n      try {\n        destroy();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    var focusedInstanceHandle = null;\n    var shouldFireAfterActiveInstanceBlur = false;\n    function commitBeforeMutationEffects(root, firstChild) {\n      focusedInstanceHandle = prepareForCommit(root.containerInfo);\n      nextEffect = firstChild;\n      commitBeforeMutationEffects_begin();\n      var shouldFire = shouldFireAfterActiveInstanceBlur;\n      shouldFireAfterActiveInstanceBlur = false;\n      focusedInstanceHandle = null;\n      return shouldFire;\n    }\n    function commitBeforeMutationEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n        if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitBeforeMutationEffects_complete();\n        }\n      }\n    }\n    function commitBeforeMutationEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        try {\n          commitBeforeMutationEffectsOnFiber(fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        resetCurrentFiber();\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitBeforeMutationEffectsOnFiber(finishedWork) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n      if ((flags & Snapshot) !== NoFlags) {\n        setCurrentFiber(finishedWork);\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              break;\n            }\n          case ClassComponent:\n            {\n              if (current !== null) {\n                var prevProps = current.memoizedProps;\n                var prevState = current.memoizedState;\n                var instance = finishedWork.stateNode;\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n                {\n                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                    didWarnSet.add(finishedWork.type);\n                    error(\"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" + \"must be returned. You have returned undefined.\", getComponentNameFromFiber(finishedWork));\n                  }\n                }\n                instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n              }\n              break;\n            }\n          case HostRoot:\n            {\n              {\n                var root = finishedWork.stateNode;\n                clearContainer(root.containerInfo);\n              }\n              break;\n            }\n          case HostComponent:\n          case HostText:\n          case HostPortal:\n          case IncompleteClassComponent:\n            break;\n          default:\n            {\n              throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n            }\n        }\n        resetCurrentFiber();\n      }\n    }\n    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n        do {\n          if ((effect.tag & flags) === flags) {\n            var destroy = effect.destroy;\n            effect.destroy = undefined;\n            if (destroy !== undefined) {\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(true);\n                }\n              }\n              safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(false);\n                }\n              }\n            }\n          }\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n    function commitHookEffectListMount(flags, finishedWork) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n        do {\n          if ((effect.tag & flags) === flags) {\n            var create = effect.create;\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(true);\n              }\n            }\n            effect.destroy = create();\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(false);\n              }\n            }\n            {\n              var destroy = effect.destroy;\n              if (destroy !== undefined && typeof destroy !== \"function\") {\n                var hookName = void 0;\n                if ((effect.tag & Layout) !== NoFlags) {\n                  hookName = \"useLayoutEffect\";\n                } else if ((effect.tag & Insertion) !== NoFlags) {\n                  hookName = \"useInsertionEffect\";\n                } else {\n                  hookName = \"useEffect\";\n                }\n                var addendum = void 0;\n                if (destroy === null) {\n                  addendum = \" You returned null. If your effect does not require clean \" + \"up, return undefined (or nothing).\";\n                } else if (typeof destroy.then === \"function\") {\n                  addendum = \"\\n\\nIt looks like you wrote \" + hookName + \"(async () => ...) or returned a Promise. \" + \"Instead, write the async function inside your effect \" + \"and call it immediately:\\n\\n\" + hookName + \"(() => {\\n\" + \"  async function fetchData() {\\n\" + \"    // You can await here\\n\" + \"    const response = await MyAPI.getData(someId);\\n\" + \"    // ...\\n\" + \"  }\\n\" + \"  fetchData();\\n\" + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n                } else {\n                  addendum = \" You returned: \" + destroy;\n                }\n                error(\"%s must not return anything besides a function, \" + \"which is used for clean-up.%s\", hookName, addendum);\n              }\n            }\n          }\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n    function commitPassiveEffectDurations(finishedRoot, finishedWork) {\n      {\n        if ((finishedWork.flags & Update) !== NoFlags) {\n          switch (finishedWork.tag) {\n            case Profiler:\n              {\n                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n                var _finishedWork$memoize = finishedWork.memoizedProps,\n                  id = _finishedWork$memoize.id,\n                  onPostCommit = _finishedWork$memoize.onPostCommit;\n                var commitTime = getCommitTime();\n                var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n                if (typeof onPostCommit === \"function\") {\n                  onPostCommit(id, phase, passiveEffectDuration, commitTime);\n                }\n                var parentFiber = finishedWork.return;\n                outer: while (parentFiber !== null) {\n                  switch (parentFiber.tag) {\n                    case HostRoot:\n                      var root = parentFiber.stateNode;\n                      root.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                    case Profiler:\n                      var parentStateNode = parentFiber.stateNode;\n                      parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                  }\n                  parentFiber = parentFiber.return;\n                }\n                break;\n              }\n          }\n        }\n      }\n    }\n    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n      if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              {\n                if (finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                }\n              }\n              break;\n            }\n          case ClassComponent:\n            {\n              var instance = finishedWork.stateNode;\n              if (finishedWork.flags & Update) {\n                {\n                  if (current === null) {\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidMount();\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidMount();\n                    }\n                  } else {\n                    var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                    var prevState = current.memoizedState;\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                    }\n                  }\n                }\n              }\n              var updateQueue = finishedWork.updateQueue;\n              if (updateQueue !== null) {\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                commitUpdateQueue(finishedWork, updateQueue, instance);\n              }\n              break;\n            }\n          case HostRoot:\n            {\n              var _updateQueue = finishedWork.updateQueue;\n              if (_updateQueue !== null) {\n                var _instance = null;\n                if (finishedWork.child !== null) {\n                  switch (finishedWork.child.tag) {\n                    case HostComponent:\n                      _instance = getPublicInstance(finishedWork.child.stateNode);\n                      break;\n                    case ClassComponent:\n                      _instance = finishedWork.child.stateNode;\n                      break;\n                  }\n                }\n                commitUpdateQueue(finishedWork, _updateQueue, _instance);\n              }\n              break;\n            }\n          case HostComponent:\n            {\n              var _instance2 = finishedWork.stateNode;\n              if (current === null && finishedWork.flags & Update) {\n                var type = finishedWork.type;\n                var props = finishedWork.memoizedProps;\n              }\n              break;\n            }\n          case HostText:\n            {\n              break;\n            }\n          case HostPortal:\n            {\n              break;\n            }\n          case Profiler:\n            {\n              {\n                var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                  onCommit = _finishedWork$memoize2.onCommit,\n                  onRender = _finishedWork$memoize2.onRender;\n                var effectDuration = finishedWork.stateNode.effectDuration;\n                var commitTime = getCommitTime();\n                var phase = current === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n                if (typeof onRender === \"function\") {\n                  onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n                }\n                {\n                  if (typeof onCommit === \"function\") {\n                    onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n                  }\n                  enqueuePendingPassiveProfilerEffect(finishedWork);\n                  var parentFiber = finishedWork.return;\n                  outer: while (parentFiber !== null) {\n                    switch (parentFiber.tag) {\n                      case HostRoot:\n                        var root = parentFiber.stateNode;\n                        root.effectDuration += effectDuration;\n                        break outer;\n                      case Profiler:\n                        var parentStateNode = parentFiber.stateNode;\n                        parentStateNode.effectDuration += effectDuration;\n                        break outer;\n                    }\n                    parentFiber = parentFiber.return;\n                  }\n                }\n              }\n              break;\n            }\n          case SuspenseComponent:\n            {\n              break;\n            }\n          case SuspenseListComponent:\n          case IncompleteClassComponent:\n          case ScopeComponent:\n          case OffscreenComponent:\n          case LegacyHiddenComponent:\n          case TracingMarkerComponent:\n            {\n              break;\n            }\n          default:\n            throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n      {\n        {\n          if (finishedWork.flags & Ref) {\n            commitAttachRef(finishedWork);\n          }\n        }\n      }\n    }\n    function hideOrUnhideAllChildren(finishedWork, isHidden) {\n      var hostSubtreeRoot = null;\n      {\n        var node = finishedWork;\n        while (true) {\n          if (node.tag === HostComponent) {\n            if (hostSubtreeRoot === null) {\n              hostSubtreeRoot = node;\n              try {\n                var instance = node.stateNode;\n                if (isHidden) {\n                  hideInstance(instance);\n                } else {\n                  unhideInstance(node.stateNode, node.memoizedProps);\n                }\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n            }\n          } else if (node.tag === HostText) {\n            if (hostSubtreeRoot === null) {\n              try {\n                var _instance3 = node.stateNode;\n                if (isHidden) {\n                  hideTextInstance(_instance3);\n                } else {\n                  unhideTextInstance(_instance3, node.memoizedProps);\n                }\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n            }\n          } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === finishedWork) {\n            return;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === finishedWork) {\n              return;\n            }\n            if (hostSubtreeRoot === node) {\n              hostSubtreeRoot = null;\n            }\n            node = node.return;\n          }\n          if (hostSubtreeRoot === node) {\n            hostSubtreeRoot = null;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n    }\n    function commitAttachRef(finishedWork) {\n      var ref = finishedWork.ref;\n      if (ref !== null) {\n        var instance = finishedWork.stateNode;\n        var instanceToUse;\n        switch (finishedWork.tag) {\n          case HostComponent:\n            instanceToUse = getPublicInstance(instance);\n            break;\n          default:\n            instanceToUse = instance;\n        }\n        if (typeof ref === \"function\") {\n          var retVal;\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              retVal = ref(instanceToUse);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            retVal = ref(instanceToUse);\n          }\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n        } else {\n          {\n            if (!ref.hasOwnProperty(\"current\")) {\n              error(\"Unexpected ref object provided for %s. \" + \"Use either a ref-setter function or React.createRef().\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n          ref.current = instanceToUse;\n        }\n      }\n    }\n    function detachFiberMutation(fiber) {\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.return = null;\n      }\n      fiber.return = null;\n    }\n    function detachFiberAfterEffects(fiber) {\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        fiber.alternate = null;\n        detachFiberAfterEffects(alternate);\n      }\n      {\n        fiber.child = null;\n        fiber.deletions = null;\n        fiber.sibling = null;\n        if (fiber.tag === HostComponent) {\n          var hostInstance = fiber.stateNode;\n        }\n        fiber.stateNode = null;\n        {\n          fiber._debugOwner = null;\n        }\n        {\n          fiber.return = null;\n          fiber.dependencies = null;\n          fiber.memoizedProps = null;\n          fiber.memoizedState = null;\n          fiber.pendingProps = null;\n          fiber.stateNode = null;\n          fiber.updateQueue = null;\n        }\n      }\n    }\n    function getHostParentFiber(fiber) {\n      var parent = fiber.return;\n      while (parent !== null) {\n        if (isHostParent(parent)) {\n          return parent;\n        }\n        parent = parent.return;\n      }\n      throw new Error(\"Expected to find a host parent. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n    }\n    function isHostParent(fiber) {\n      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n    }\n    function getHostSibling(fiber) {\n      var node = fiber;\n      siblings: while (true) {\n        while (node.sibling === null) {\n          if (node.return === null || isHostParent(node.return)) {\n            return null;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n          if (node.flags & Placement) {\n            continue siblings;\n          }\n          if (node.child === null || node.tag === HostPortal) {\n            continue siblings;\n          } else {\n            node.child.return = node;\n            node = node.child;\n          }\n        }\n        if (!(node.flags & Placement)) {\n          return node.stateNode;\n        }\n      }\n    }\n    function commitPlacement(finishedWork) {\n      var parentFiber = getHostParentFiber(finishedWork);\n      switch (parentFiber.tag) {\n        case HostComponent:\n          {\n            var parent = parentFiber.stateNode;\n            if (parentFiber.flags & ContentReset) {\n              parentFiber.flags &= ~ContentReset;\n            }\n            var before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before, parent);\n            break;\n          }\n        case HostRoot:\n        case HostPortal:\n          {\n            var _parent = parentFiber.stateNode.containerInfo;\n            var _before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n            break;\n          }\n        default:\n          throw new Error(\"Invalid host parent fiber. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n    }\n    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n      var tag = node.tag;\n      var isHost = tag === HostComponent || tag === HostText;\n      if (isHost) {\n        var stateNode = node.stateNode;\n        if (before) {\n          insertInContainerBefore(parent);\n        } else {\n          appendChildToContainer(parent, stateNode);\n        }\n      } else if (tag === HostPortal) ;else {\n        var child = node.child;\n        if (child !== null) {\n          insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n          var sibling = child.sibling;\n          while (sibling !== null) {\n            insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n            sibling = sibling.sibling;\n          }\n        }\n      }\n    }\n    function insertOrAppendPlacementNode(node, before, parent) {\n      var tag = node.tag;\n      var isHost = tag === HostComponent || tag === HostText;\n      if (isHost) {\n        var stateNode = node.stateNode;\n        if (before) {\n          insertBefore(parent, stateNode, before);\n        } else {\n          appendChild(parent, stateNode);\n        }\n      } else if (tag === HostPortal) ;else {\n        var child = node.child;\n        if (child !== null) {\n          insertOrAppendPlacementNode(child, before, parent);\n          var sibling = child.sibling;\n          while (sibling !== null) {\n            insertOrAppendPlacementNode(sibling, before, parent);\n            sibling = sibling.sibling;\n          }\n        }\n      }\n    }\n    var hostParent = null;\n    var hostParentIsContainer = false;\n    function commitDeletionEffects(root, returnFiber, deletedFiber) {\n      {\n        var parent = returnFiber;\n        findParent: while (parent !== null) {\n          switch (parent.tag) {\n            case HostComponent:\n              {\n                hostParent = parent.stateNode;\n                hostParentIsContainer = false;\n                break findParent;\n              }\n            case HostRoot:\n              {\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = true;\n                break findParent;\n              }\n            case HostPortal:\n              {\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = true;\n                break findParent;\n              }\n          }\n          parent = parent.return;\n        }\n        if (hostParent === null) {\n          throw new Error(\"Expected to find a host parent. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n        }\n        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n        hostParent = null;\n        hostParentIsContainer = false;\n      }\n      detachFiberMutation(deletedFiber);\n    }\n    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\n      var child = parent.child;\n      while (child !== null) {\n        commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n        child = child.sibling;\n      }\n    }\n    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\n      onCommitUnmount(deletedFiber);\n      switch (deletedFiber.tag) {\n        case HostComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n            }\n          }\n        case HostText:\n          {\n            {\n              var prevHostParent = hostParent;\n              var prevHostParentIsContainer = hostParentIsContainer;\n              hostParent = null;\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n              hostParent = prevHostParent;\n              hostParentIsContainer = prevHostParentIsContainer;\n              if (hostParent !== null) {\n                if (hostParentIsContainer) {\n                  removeChildFromContainer(hostParent, deletedFiber.stateNode);\n                } else {\n                  removeChild(hostParent, deletedFiber.stateNode);\n                }\n              }\n            }\n            return;\n          }\n        case DehydratedFragment:\n          {\n            {\n              if (hostParent !== null) {\n                if (hostParentIsContainer) {\n                  clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);\n                } else {\n                  clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n                }\n              }\n            }\n            return;\n          }\n        case HostPortal:\n          {\n            {\n              var _prevHostParent = hostParent;\n              var _prevHostParentIsContainer = hostParentIsContainer;\n              hostParent = deletedFiber.stateNode.containerInfo;\n              hostParentIsContainer = true;\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n              hostParent = _prevHostParent;\n              hostParentIsContainer = _prevHostParentIsContainer;\n            }\n            return;\n          }\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            {\n              var updateQueue = deletedFiber.updateQueue;\n              if (updateQueue !== null) {\n                var lastEffect = updateQueue.lastEffect;\n                if (lastEffect !== null) {\n                  var firstEffect = lastEffect.next;\n                  var effect = firstEffect;\n                  do {\n                    var _effect = effect,\n                      destroy = _effect.destroy,\n                      tag = _effect.tag;\n                    if (destroy !== undefined) {\n                      if ((tag & Insertion) !== NoFlags$1) {\n                        safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                      } else if ((tag & Layout) !== NoFlags$1) {\n                        if (deletedFiber.mode & ProfileMode) {\n                          startLayoutEffectTimer();\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                          recordLayoutEffectDuration(deletedFiber);\n                        } else {\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                        }\n                      }\n                    }\n                    effect = effect.next;\n                  } while (effect !== firstEffect);\n                }\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case ClassComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n              var instance = deletedFiber.stateNode;\n              if (typeof instance.componentWillUnmount === \"function\") {\n                safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case ScopeComponent:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case OffscreenComponent:\n          {\n            {\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            }\n            break;\n          }\n        default:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n      }\n    }\n    function commitSuspenseCallback(finishedWork) {\n      var newState = finishedWork.memoizedState;\n    }\n    function attachSuspenseRetryListeners(finishedWork) {\n      var wakeables = finishedWork.updateQueue;\n      if (wakeables !== null) {\n        finishedWork.updateQueue = null;\n        var retryCache = finishedWork.stateNode;\n        if (retryCache === null) {\n          retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n        }\n        wakeables.forEach(function (wakeable) {\n          var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n          if (!retryCache.has(wakeable)) {\n            retryCache.add(wakeable);\n            {\n              if (isDevToolsPresent) {\n                if (inProgressLanes !== null && inProgressRoot !== null) {\n                  restorePendingUpdaters(inProgressRoot, inProgressLanes);\n                } else {\n                  throw Error(\"Expected finished root and lanes to be set. This is a bug in React.\");\n                }\n              }\n            }\n            wakeable.then(retry, retry);\n          }\n        });\n      }\n    }\n    function commitMutationEffects(root, finishedWork, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      setCurrentFiber(finishedWork);\n      commitMutationEffectsOnFiber(finishedWork, root);\n      setCurrentFiber(finishedWork);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n      var deletions = parentFiber.deletions;\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var childToDelete = deletions[i];\n          try {\n            commitDeletionEffects(root, parentFiber, childToDelete);\n          } catch (error) {\n            captureCommitPhaseError(childToDelete, parentFiber, error);\n          }\n        }\n      }\n      var prevDebugFiber = getCurrentFiber();\n      if (parentFiber.subtreeFlags & MutationMask) {\n        var child = parentFiber.child;\n        while (child !== null) {\n          setCurrentFiber(child);\n          commitMutationEffectsOnFiber(child, root);\n          child = child.sibling;\n        }\n      }\n      setCurrentFiber(prevDebugFiber);\n    }\n    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              try {\n                commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n                commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n                recordLayoutEffectDuration(finishedWork);\n              } else {\n                try {\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case ClassComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n            return;\n          }\n        case HostComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n            {\n              if (finishedWork.flags & ContentReset) {\n                var instance = finishedWork.stateNode;\n                try {\n                  resetTextContent(instance);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n              if (flags & Update) {\n                var _instance4 = finishedWork.stateNode;\n                if (_instance4 != null) {\n                  var newProps = finishedWork.memoizedProps;\n                  var oldProps = current !== null ? current.memoizedProps : newProps;\n                  var type = finishedWork.type;\n                  var updatePayload = finishedWork.updateQueue;\n                  finishedWork.updateQueue = null;\n                  if (updatePayload !== null) {\n                    try {\n                      commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);\n                    } catch (error) {\n                      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                    }\n                  }\n                }\n              }\n            }\n            return;\n          }\n        case HostText:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              {\n                if (finishedWork.stateNode === null) {\n                  throw new Error(\"This should have a text node initialized. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n                var textInstance = finishedWork.stateNode;\n                var newText = finishedWork.memoizedProps;\n                var oldText = current !== null ? current.memoizedProps : newText;\n                try {\n                  commitTextUpdate(textInstance, oldText, newText);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case HostRoot:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n        case HostPortal:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n        case SuspenseComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            var offscreenFiber = finishedWork.child;\n            if (offscreenFiber.flags & Visibility) {\n              var newState = offscreenFiber.memoizedState;\n              var isHidden = newState !== null;\n              if (isHidden) {\n                var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\n                if (!wasHidden) {\n                  markCommitTimeOfFallback();\n                }\n              }\n            }\n            if (flags & Update) {\n              try {\n                commitSuspenseCallback(finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n              attachSuspenseRetryListeners(finishedWork);\n            }\n            return;\n          }\n        case OffscreenComponent:\n          {\n            var _wasHidden = current !== null && current.memoizedState !== null;\n            {\n              recursivelyTraverseMutationEffects(root, finishedWork);\n            }\n            commitReconciliationEffects(finishedWork);\n            if (flags & Visibility) {\n              var _newState = finishedWork.memoizedState;\n              var _isHidden = _newState !== null;\n              var offscreenBoundary = finishedWork;\n              {\n                hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n              }\n            }\n            return;\n          }\n        case SuspenseListComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              attachSuspenseRetryListeners(finishedWork);\n            }\n            return;\n          }\n        case ScopeComponent:\n          {\n            return;\n          }\n        default:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n      }\n    }\n    function commitReconciliationEffects(finishedWork) {\n      var flags = finishedWork.flags;\n      if (flags & Placement) {\n        try {\n          commitPlacement(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        finishedWork.flags &= ~Placement;\n      }\n      if (flags & Hydrating) {\n        finishedWork.flags &= ~Hydrating;\n      }\n    }\n    function commitLayoutEffects(finishedWork, root, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      nextEffect = finishedWork;\n      commitLayoutEffects_begin(finishedWork, root, committedLanes);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n      var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n        if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        }\n      }\n    }\n    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & LayoutMask) !== NoFlags) {\n          var current = fiber.alternate;\n          setCurrentFiber(fiber);\n          try {\n            commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n          resetCurrentFiber();\n        }\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\n      nextEffect = finishedWork;\n      commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\n    }\n    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\n        }\n      }\n    }\n    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          try {\n            commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n          resetCurrentFiber();\n        }\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              try {\n                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n              } finally {\n                recordPassiveEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n            }\n            break;\n          }\n      }\n    }\n    function commitPassiveUnmountEffects(firstChild) {\n      nextEffect = firstChild;\n      commitPassiveUnmountEffects_begin();\n    }\n    function commitPassiveUnmountEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n        if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n          var deletions = fiber.deletions;\n          if (deletions !== null) {\n            for (var i = 0; i < deletions.length; i++) {\n              var fiberToDelete = deletions[i];\n              nextEffect = fiberToDelete;\n              commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n            }\n            {\n              var previousFiber = fiber.alternate;\n              if (previousFiber !== null) {\n                var detachedChild = previousFiber.child;\n                if (detachedChild !== null) {\n                  previousFiber.child = null;\n                  do {\n                    var detachedSibling = detachedChild.sibling;\n                    detachedChild.sibling = null;\n                    detachedChild = detachedSibling;\n                  } while (detachedChild !== null);\n                }\n              }\n            }\n            nextEffect = fiber;\n          }\n        }\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffects_complete();\n        }\n      }\n    }\n    function commitPassiveUnmountEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          commitPassiveUnmountOnFiber(fiber);\n          resetCurrentFiber();\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveUnmountOnFiber(finishedWork) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n              recordPassiveEffectDuration(finishedWork);\n            } else {\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n            }\n            break;\n          }\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n        resetCurrentFiber();\n        var child = fiber.child;\n        if (child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n        }\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var sibling = fiber.sibling;\n        var returnFiber = fiber.return;\n        {\n          detachFiberAfterEffects(fiber);\n          if (fiber === deletedSubtreeRoot) {\n            nextEffect = null;\n            return;\n          }\n        }\n        if (sibling !== null) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = returnFiber;\n      }\n    }\n    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n      switch (current.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (current.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n              recordPassiveEffectDuration(current);\n            } else {\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n            }\n            break;\n          }\n      }\n    }\n    var COMPONENT_TYPE = 0;\n    var HAS_PSEUDO_CLASS_TYPE = 1;\n    var ROLE_TYPE = 2;\n    var TEST_NAME_TYPE = 3;\n    var TEXT_TYPE = 4;\n    if (typeof Symbol === \"function\" && Symbol.for) {\n      var symbolFor = Symbol.for;\n      COMPONENT_TYPE = symbolFor(\"selector.component\");\n      HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n      ROLE_TYPE = symbolFor(\"selector.role\");\n      TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n      TEXT_TYPE = symbolFor(\"selector.text\");\n    }\n    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\n    function isLegacyActEnvironment(fiber) {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        var jestIsDefined = typeof jest !== \"undefined\";\n        return jestIsDefined && isReactActEnvironmentGlobal !== false;\n      }\n    }\n    function isConcurrentActEnvironment() {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n          error(\"The current testing environment is not configured to support \" + \"act(...)\");\n        }\n        return isReactActEnvironmentGlobal;\n      }\n    }\n    var ceil = Math.ceil;\n    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n      ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n      ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\n    var NoContext = 0;\n    var BatchedContext = 1;\n    var RenderContext = 2;\n    var CommitContext = 4;\n    var RootInProgress = 0;\n    var RootFatalErrored = 1;\n    var RootErrored = 2;\n    var RootSuspended = 3;\n    var RootSuspendedWithDelay = 4;\n    var RootCompleted = 5;\n    var RootDidNotComplete = 6;\n    var executionContext = NoContext;\n    var workInProgressRoot = null;\n    var workInProgress = null;\n    var workInProgressRootRenderLanes = NoLanes;\n    var subtreeRenderLanes = NoLanes;\n    var subtreeRenderLanesCursor = createCursor(NoLanes);\n    var workInProgressRootExitStatus = RootInProgress;\n    var workInProgressRootFatalError = null;\n    var workInProgressRootIncludedLanes = NoLanes;\n    var workInProgressRootSkippedLanes = NoLanes;\n    var workInProgressRootInterleavedUpdatedLanes = NoLanes;\n    var workInProgressRootPingedLanes = NoLanes;\n    var workInProgressRootConcurrentErrors = null;\n    var workInProgressRootRecoverableErrors = null;\n    var globalMostRecentFallbackTime = 0;\n    var FALLBACK_THROTTLE_MS = 500;\n    var workInProgressRootRenderTargetTime = Infinity;\n    var RENDER_TIMEOUT_MS = 500;\n    var workInProgressTransitions = null;\n    function resetRenderTimer() {\n      workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n    }\n    function getRenderTargetTime() {\n      return workInProgressRootRenderTargetTime;\n    }\n    var hasUncaughtError = false;\n    var firstUncaughtError = null;\n    var legacyErrorBoundariesThatAlreadyFailed = null;\n    var rootDoesHavePassiveEffects = false;\n    var rootWithPendingPassiveEffects = null;\n    var pendingPassiveEffectsLanes = NoLanes;\n    var pendingPassiveProfilerEffects = [];\n    var pendingPassiveTransitions = null;\n    var NESTED_UPDATE_LIMIT = 50;\n    var nestedUpdateCount = 0;\n    var rootWithNestedUpdates = null;\n    var isFlushingPassiveEffects = false;\n    var didScheduleUpdateDuringPassiveEffects = false;\n    var NESTED_PASSIVE_UPDATE_LIMIT = 50;\n    var nestedPassiveUpdateCount = 0;\n    var rootWithPassiveNestedUpdates = null;\n    var currentEventTime = NoTimestamp;\n    var currentEventTransitionLane = NoLanes;\n    var isRunningInsertionEffect = false;\n    function getWorkInProgressRoot() {\n      return workInProgressRoot;\n    }\n    function requestEventTime() {\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        return now();\n      }\n      if (currentEventTime !== NoTimestamp) {\n        return currentEventTime;\n      }\n      currentEventTime = now();\n      return currentEventTime;\n    }\n    function requestUpdateLane(fiber) {\n      var mode = fiber.mode;\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n        return pickArbitraryLane(workInProgressRootRenderLanes);\n      }\n      var isTransition = requestCurrentTransition() !== NoTransition;\n      if (isTransition) {\n        if (ReactCurrentBatchConfig$2.transition !== null) {\n          var transition = ReactCurrentBatchConfig$2.transition;\n          if (!transition._updatedFibers) {\n            transition._updatedFibers = new Set();\n          }\n          transition._updatedFibers.add(fiber);\n        }\n        if (currentEventTransitionLane === NoLane) {\n          currentEventTransitionLane = claimNextTransitionLane();\n        }\n        return currentEventTransitionLane;\n      }\n      var updateLane = getCurrentUpdatePriority();\n      if (updateLane !== NoLane) {\n        return updateLane;\n      }\n      var eventLane = getCurrentEventPriority();\n      return eventLane;\n    }\n    function requestRetryLane(fiber) {\n      var mode = fiber.mode;\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      }\n      return claimNextRetryLane();\n    }\n    function scheduleUpdateOnFiber(fiber, lane, eventTime) {\n      checkForNestedUpdates();\n      {\n        if (isRunningInsertionEffect) {\n          error(\"useInsertionEffect must not schedule updates.\");\n        }\n      }\n      var root = markUpdateLaneFromFiberToRoot(fiber, lane);\n      if (root === null) {\n        return null;\n      }\n      {\n        if (isFlushingPassiveEffects) {\n          didScheduleUpdateDuringPassiveEffects = true;\n        }\n      }\n      markRootUpdated(root, lane, eventTime);\n      if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n        warnAboutRenderPhaseUpdatesInDEV(fiber);\n      } else {\n        {\n          if (isDevToolsPresent) {\n            addFiberToLanesMap(root, fiber, lane);\n          }\n        }\n        warnIfUpdatesNotWrappedWithActDEV(fiber);\n        if (root === workInProgressRoot) {\n          if ((executionContext & RenderContext) === NoContext) {\n            workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n          }\n          if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n            markRootSuspended$1(root, workInProgressRootRenderLanes);\n          }\n        }\n        ensureRootIsScheduled(root, eventTime);\n        if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n      return root;\n    }\n    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n      var alternate = sourceFiber.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, lane);\n      }\n      {\n        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n      var node = sourceFiber;\n      var parent = sourceFiber.return;\n      while (parent !== null) {\n        parent.childLanes = mergeLanes(parent.childLanes, lane);\n        alternate = parent.alternate;\n        if (alternate !== null) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n        } else {\n          {\n            if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n            }\n          }\n        }\n        node = parent;\n        parent = parent.return;\n      }\n      if (node.tag === HostRoot) {\n        var root = node.stateNode;\n        return root;\n      } else {\n        return null;\n      }\n    }\n    function isInterleavedUpdate(fiber, lane) {\n      return (workInProgressRoot !== null || hasInterleavedUpdates()) && (fiber.mode & ConcurrentMode) !== NoMode && (executionContext & RenderContext) === NoContext;\n    }\n    function ensureRootIsScheduled(root, currentTime) {\n      var existingCallbackNode = root.callbackNode;\n      markStarvedLanesAsExpired(root, currentTime);\n      var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n      if (nextLanes === NoLanes) {\n        if (existingCallbackNode !== null) {\n          cancelCallback$1(existingCallbackNode);\n        }\n        root.callbackNode = null;\n        root.callbackPriority = NoLane;\n        return;\n      }\n      var newCallbackPriority = getHighestPriorityLane(nextLanes);\n      var existingCallbackPriority = root.callbackPriority;\n      if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n        {\n          if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n            error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\");\n          }\n        }\n        return;\n      }\n      if (existingCallbackNode != null) {\n        cancelCallback$1(existingCallbackNode);\n      }\n      var newCallbackNode;\n      if (newCallbackPriority === SyncLane) {\n        if (root.tag === LegacyRoot) {\n          if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n            ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n          }\n          scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n        } else {\n          scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n        }\n        {\n          scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n        }\n        newCallbackNode = null;\n      } else {\n        var schedulerPriorityLevel;\n        switch (lanesToEventPriority(nextLanes)) {\n          case DiscreteEventPriority:\n            schedulerPriorityLevel = ImmediatePriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriorityLevel = UserBlockingPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriorityLevel = IdlePriority;\n            break;\n          default:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n        }\n        newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n      }\n      root.callbackPriority = newCallbackPriority;\n      root.callbackNode = newCallbackNode;\n    }\n    function performConcurrentWorkOnRoot(root, didTimeout) {\n      {\n        resetNestedUpdateFlag();\n      }\n      currentEventTime = NoTimestamp;\n      currentEventTransitionLane = NoLanes;\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      var originalCallbackNode = root.callbackNode;\n      var didFlushPassiveEffects = flushPassiveEffects();\n      if (didFlushPassiveEffects) {\n        if (root.callbackNode !== originalCallbackNode) {\n          return null;\n        }\n      }\n      var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n      if (lanes === NoLanes) {\n        return null;\n      }\n      var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;\n      var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n      if (exitStatus !== RootInProgress) {\n        if (exitStatus === RootErrored) {\n          var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n          if (errorRetryLanes !== NoLanes) {\n            lanes = errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n          }\n        }\n        if (exitStatus === RootFatalErrored) {\n          var fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw fatalError;\n        }\n        if (exitStatus === RootDidNotComplete) {\n          markRootSuspended$1(root, lanes);\n        } else {\n          var renderWasConcurrent = !includesBlockingLane(root, lanes);\n          var finishedWork = root.current.alternate;\n          if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n            exitStatus = renderRootSync(root, lanes);\n            if (exitStatus === RootErrored) {\n              var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n              if (_errorRetryLanes !== NoLanes) {\n                lanes = _errorRetryLanes;\n                exitStatus = recoverFromConcurrentError(root, _errorRetryLanes);\n              }\n            }\n            if (exitStatus === RootFatalErrored) {\n              var _fatalError = workInProgressRootFatalError;\n              prepareFreshStack(root, NoLanes);\n              markRootSuspended$1(root, lanes);\n              ensureRootIsScheduled(root, now());\n              throw _fatalError;\n            }\n          }\n          root.finishedWork = finishedWork;\n          root.finishedLanes = lanes;\n          finishConcurrentRender(root, exitStatus, lanes);\n        }\n      }\n      ensureRootIsScheduled(root, now());\n      if (root.callbackNode === originalCallbackNode) {\n        return performConcurrentWorkOnRoot.bind(null, root);\n      }\n      return null;\n    }\n    function recoverFromConcurrentError(root, errorRetryLanes) {\n      var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n      if (isRootDehydrated(root)) {\n        var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n        rootWorkInProgress.flags |= ForceClientRender;\n        {\n          errorHydratingContainer(root.containerInfo);\n        }\n      }\n      var exitStatus = renderRootSync(root, errorRetryLanes);\n      if (exitStatus !== RootErrored) {\n        var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n        workInProgressRootRecoverableErrors = errorsFromFirstAttempt;\n        if (errorsFromSecondAttempt !== null) {\n          queueRecoverableErrors(errorsFromSecondAttempt);\n        }\n      }\n      return exitStatus;\n    }\n    function queueRecoverableErrors(errors) {\n      if (workInProgressRootRecoverableErrors === null) {\n        workInProgressRootRecoverableErrors = errors;\n      } else {\n        workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n      }\n    }\n    function finishConcurrentRender(root, exitStatus, lanes) {\n      switch (exitStatus) {\n        case RootInProgress:\n        case RootFatalErrored:\n          {\n            throw new Error(\"Root did not complete. This is a bug in React.\");\n          }\n        case RootErrored:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootSuspended:\n          {\n            markRootSuspended$1(root, lanes);\n            if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {\n              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n              if (msUntilTimeout > 10) {\n                var nextLanes = getNextLanes(root, NoLanes);\n                if (nextLanes !== NoLanes) {\n                  break;\n                }\n                var suspendedLanes = root.suspendedLanes;\n                if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n                  var eventTime = requestEventTime();\n                  markRootPinged(root, suspendedLanes);\n                  break;\n                }\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\n                break;\n              }\n            }\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootSuspendedWithDelay:\n          {\n            markRootSuspended$1(root, lanes);\n            if (includesOnlyTransitions(lanes)) {\n              break;\n            }\n            if (!shouldForceFlushFallbacksInDEV()) {\n              var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n              var eventTimeMs = mostRecentEventTime;\n              var timeElapsedMs = now() - eventTimeMs;\n              var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n              if (_msUntilTimeout > 10) {\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\n                break;\n              }\n            }\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootCompleted:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        default:\n          {\n            throw new Error(\"Unknown root exit status.\");\n          }\n      }\n    }\n    function isRenderConsistentWithExternalStores(finishedWork) {\n      var node = finishedWork;\n      while (true) {\n        if (node.flags & StoreConsistency) {\n          var updateQueue = node.updateQueue;\n          if (updateQueue !== null) {\n            var checks = updateQueue.stores;\n            if (checks !== null) {\n              for (var i = 0; i < checks.length; i++) {\n                var check = checks[i];\n                var getSnapshot = check.getSnapshot;\n                var renderedValue = check.value;\n                try {\n                  if (!objectIs(getSnapshot(), renderedValue)) {\n                    return false;\n                  }\n                } catch (error) {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n        var child = node.child;\n        if (node.subtreeFlags & StoreConsistency && child !== null) {\n          child.return = node;\n          node = child;\n          continue;\n        }\n        if (node === finishedWork) {\n          return true;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === finishedWork) {\n            return true;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return true;\n    }\n    function markRootSuspended$1(root, suspendedLanes) {\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n      markRootSuspended(root, suspendedLanes);\n    }\n    function performSyncWorkOnRoot(root) {\n      {\n        syncNestedUpdateFlag();\n      }\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      flushPassiveEffects();\n      var lanes = getNextLanes(root, NoLanes);\n      if (!includesSomeLane(lanes, SyncLane)) {\n        ensureRootIsScheduled(root, now());\n        return null;\n      }\n      var exitStatus = renderRootSync(root, lanes);\n      if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n        var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n        if (errorRetryLanes !== NoLanes) {\n          lanes = errorRetryLanes;\n          exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n        }\n      }\n      if (exitStatus === RootFatalErrored) {\n        var fatalError = workInProgressRootFatalError;\n        prepareFreshStack(root, NoLanes);\n        markRootSuspended$1(root, lanes);\n        ensureRootIsScheduled(root, now());\n        throw fatalError;\n      }\n      if (exitStatus === RootDidNotComplete) {\n        throw new Error(\"Root did not complete. This is a bug in React.\");\n      }\n      var finishedWork = root.current.alternate;\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n      ensureRootIsScheduled(root, now());\n      return null;\n    }\n    function batchedUpdates$1(fn, a) {\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      try {\n        return fn(a);\n      } finally {\n        executionContext = prevExecutionContext;\n        if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n    function flushSync(fn) {\n      if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n        flushPassiveEffects();\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      var previousPriority = getCurrentUpdatePriority();\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        if (fn) {\n          return fn();\n        } else {\n          return undefined;\n        }\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        executionContext = prevExecutionContext;\n        if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n          flushSyncCallbacks();\n        }\n      }\n    }\n    function pushRenderLanes(fiber, lanes) {\n      push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n      subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n      workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n    }\n    function popRenderLanes(fiber) {\n      subtreeRenderLanes = subtreeRenderLanesCursor.current;\n      pop(subtreeRenderLanesCursor, fiber);\n    }\n    function prepareFreshStack(root, lanes) {\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      var timeoutHandle = root.timeoutHandle;\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        cancelTimeout(timeoutHandle);\n      }\n      if (workInProgress !== null) {\n        var interruptedWork = workInProgress.return;\n        while (interruptedWork !== null) {\n          var current = interruptedWork.alternate;\n          unwindInterruptedWork(current, interruptedWork);\n          interruptedWork = interruptedWork.return;\n        }\n      }\n      workInProgressRoot = root;\n      var rootWorkInProgress = createWorkInProgress(root.current, null);\n      workInProgress = rootWorkInProgress;\n      workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n      workInProgressRootExitStatus = RootInProgress;\n      workInProgressRootFatalError = null;\n      workInProgressRootSkippedLanes = NoLanes;\n      workInProgressRootInterleavedUpdatedLanes = NoLanes;\n      workInProgressRootPingedLanes = NoLanes;\n      workInProgressRootConcurrentErrors = null;\n      workInProgressRootRecoverableErrors = null;\n      enqueueInterleavedUpdates();\n      {\n        ReactStrictModeWarnings.discardPendingWarnings();\n      }\n      return rootWorkInProgress;\n    }\n    function handleError(root, thrownValue) {\n      do {\n        var erroredWork = workInProgress;\n        try {\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          resetCurrentFiber();\n          ReactCurrentOwner$2.current = null;\n          if (erroredWork === null || erroredWork.return === null) {\n            workInProgressRootExitStatus = RootFatalErrored;\n            workInProgressRootFatalError = thrownValue;\n            workInProgress = null;\n            return;\n          }\n          if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n          }\n          if (enableSchedulingProfiler) {\n            markComponentRenderStopped();\n            if (thrownValue !== null && typeof thrownValue === \"object\" && typeof thrownValue.then === \"function\") {\n              var wakeable = thrownValue;\n              markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n            } else {\n              markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n            }\n          }\n          throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n          completeUnitOfWork(erroredWork);\n        } catch (yetAnotherThrownValue) {\n          thrownValue = yetAnotherThrownValue;\n          if (workInProgress === erroredWork && erroredWork !== null) {\n            erroredWork = erroredWork.return;\n            workInProgress = erroredWork;\n          } else {\n            erroredWork = workInProgress;\n          }\n          continue;\n        }\n        return;\n      } while (true);\n    }\n    function pushDispatcher() {\n      var prevDispatcher = ReactCurrentDispatcher$2.current;\n      ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n      if (prevDispatcher === null) {\n        return ContextOnlyDispatcher;\n      } else {\n        return prevDispatcher;\n      }\n    }\n    function popDispatcher(prevDispatcher) {\n      ReactCurrentDispatcher$2.current = prevDispatcher;\n    }\n    function markCommitTimeOfFallback() {\n      globalMostRecentFallbackTime = now();\n    }\n    function markSkippedUpdateLanes(lane) {\n      workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n    }\n    function renderDidSuspend() {\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootSuspended;\n      }\n    }\n    function renderDidSuspendDelayIfPossible() {\n      if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n        workInProgressRootExitStatus = RootSuspendedWithDelay;\n      }\n      if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n      }\n    }\n    function renderDidError(error) {\n      if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n        workInProgressRootExitStatus = RootErrored;\n      }\n      if (workInProgressRootConcurrentErrors === null) {\n        workInProgressRootConcurrentErrors = [error];\n      } else {\n        workInProgressRootConcurrentErrors.push(error);\n      }\n    }\n    function renderHasNotSuspendedYet() {\n      return workInProgressRootExitStatus === RootInProgress;\n    }\n    function renderRootSync(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        prepareFreshStack(root, lanes);\n      }\n      do {\n        try {\n          workLoopSync();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      executionContext = prevExecutionContext;\n      popDispatcher(prevDispatcher);\n      if (workInProgress !== null) {\n        throw new Error(\"Cannot commit an incomplete root. This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n      }\n      workInProgressRoot = null;\n      workInProgressRootRenderLanes = NoLanes;\n      return workInProgressRootExitStatus;\n    }\n    function workLoopSync() {\n      while (workInProgress !== null) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n    function renderRootConcurrent(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        resetRenderTimer();\n        prepareFreshStack(root, lanes);\n      }\n      do {\n        try {\n          workLoopConcurrent();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      popDispatcher(prevDispatcher);\n      executionContext = prevExecutionContext;\n      if (workInProgress !== null) {\n        return RootInProgress;\n      } else {\n        workInProgressRoot = null;\n        workInProgressRootRenderLanes = NoLanes;\n        return workInProgressRootExitStatus;\n      }\n    }\n    function workLoopConcurrent() {\n      while (workInProgress !== null && !shouldYield()) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n    function performUnitOfWork(unitOfWork) {\n      var current = unitOfWork.alternate;\n      setCurrentFiber(unitOfWork);\n      var next;\n      if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n        startProfilerTimer(unitOfWork);\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n      } else {\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n      }\n      resetCurrentFiber();\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\n      if (next === null) {\n        completeUnitOfWork(unitOfWork);\n      } else {\n        workInProgress = next;\n      }\n      ReactCurrentOwner$2.current = null;\n    }\n    function completeUnitOfWork(unitOfWork) {\n      var completedWork = unitOfWork;\n      do {\n        var current = completedWork.alternate;\n        var returnFiber = completedWork.return;\n        if ((completedWork.flags & Incomplete) === NoFlags) {\n          setCurrentFiber(completedWork);\n          var next = void 0;\n          if ((completedWork.mode & ProfileMode) === NoMode) {\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n          } else {\n            startProfilerTimer(completedWork);\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n          }\n          resetCurrentFiber();\n          if (next !== null) {\n            workInProgress = next;\n            return;\n          }\n        } else {\n          var _next = unwindWork(current, completedWork);\n          if (_next !== null) {\n            _next.flags &= HostEffectMask;\n            workInProgress = _next;\n            return;\n          }\n          if ((completedWork.mode & ProfileMode) !== NoMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n            var actualDuration = completedWork.actualDuration;\n            var child = completedWork.child;\n            while (child !== null) {\n              actualDuration += child.actualDuration;\n              child = child.sibling;\n            }\n            completedWork.actualDuration = actualDuration;\n          }\n          if (returnFiber !== null) {\n            returnFiber.flags |= Incomplete;\n            returnFiber.subtreeFlags = NoFlags;\n            returnFiber.deletions = null;\n          } else {\n            workInProgressRootExitStatus = RootDidNotComplete;\n            workInProgress = null;\n            return;\n          }\n        }\n        var siblingFiber = completedWork.sibling;\n        if (siblingFiber !== null) {\n          workInProgress = siblingFiber;\n          return;\n        }\n        completedWork = returnFiber;\n        workInProgress = completedWork;\n      } while (completedWork !== null);\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootCompleted;\n      }\n    }\n    function commitRoot(root, recoverableErrors, transitions) {\n      var previousUpdateLanePriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\n      } finally {\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        setCurrentUpdatePriority(previousUpdateLanePriority);\n      }\n      return null;\n    }\n    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\n      do {\n        flushPassiveEffects();\n      } while (rootWithPendingPassiveEffects !== null);\n      flushRenderPhaseStrictModeWarningsInDEV();\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      var finishedWork = root.finishedWork;\n      var lanes = root.finishedLanes;\n      if (finishedWork === null) {\n        return null;\n      } else {\n        {\n          if (lanes === NoLanes) {\n            error(\"root.finishedLanes should not be empty during a commit. This is a \" + \"bug in React.\");\n          }\n        }\n      }\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      if (finishedWork === root.current) {\n        throw new Error(\"Cannot commit the same tree as before. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n      }\n      root.callbackNode = null;\n      root.callbackPriority = NoLane;\n      var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n      markRootFinished(root, remainingLanes);\n      if (root === workInProgressRoot) {\n        workInProgressRoot = null;\n        workInProgress = null;\n        workInProgressRootRenderLanes = NoLanes;\n      }\n      if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          pendingPassiveTransitions = transitions;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n      var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      if (subtreeHasEffects || rootHasEffect) {\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        ReactCurrentBatchConfig$2.transition = null;\n        var previousPriority = getCurrentUpdatePriority();\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        var prevExecutionContext = executionContext;\n        executionContext |= CommitContext;\n        ReactCurrentOwner$2.current = null;\n        var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n        {\n          recordCommitTime();\n        }\n        commitMutationEffects(root, finishedWork, lanes);\n        resetAfterCommit(root.containerInfo);\n        root.current = finishedWork;\n        commitLayoutEffects(finishedWork, root, lanes);\n        requestPaint();\n        executionContext = prevExecutionContext;\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n      } else {\n        root.current = finishedWork;\n        {\n          recordCommitTime();\n        }\n      }\n      if (rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = false;\n        rootWithPendingPassiveEffects = root;\n        pendingPassiveEffectsLanes = lanes;\n      } else {\n        {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n        }\n      }\n      remainingLanes = root.pendingLanes;\n      if (remainingLanes === NoLanes) {\n        legacyErrorBoundariesThatAlreadyFailed = null;\n      }\n      onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n      {\n        if (isDevToolsPresent) {\n          root.memoizedUpdaters.clear();\n        }\n      }\n      ensureRootIsScheduled(root, now());\n      if (recoverableErrors !== null) {\n        var onRecoverableError = root.onRecoverableError;\n        for (var i = 0; i < recoverableErrors.length; i++) {\n          var recoverableError = recoverableErrors[i];\n          onRecoverableError(recoverableError);\n        }\n      }\n      if (hasUncaughtError) {\n        hasUncaughtError = false;\n        var error$1 = firstUncaughtError;\n        firstUncaughtError = null;\n        throw error$1;\n      }\n      if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n        flushPassiveEffects();\n      }\n      remainingLanes = root.pendingLanes;\n      if (includesSomeLane(remainingLanes, SyncLane)) {\n        {\n          markNestedUpdateScheduled();\n        }\n        if (root === rootWithNestedUpdates) {\n          nestedUpdateCount++;\n        } else {\n          nestedUpdateCount = 0;\n          rootWithNestedUpdates = root;\n        }\n      } else {\n        nestedUpdateCount = 0;\n      }\n      flushSyncCallbacks();\n      return null;\n    }\n    function flushPassiveEffects() {\n      if (rootWithPendingPassiveEffects !== null) {\n        var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n        var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        var previousPriority = getCurrentUpdatePriority();\n        try {\n          ReactCurrentBatchConfig$2.transition = null;\n          setCurrentUpdatePriority(priority);\n          return flushPassiveEffectsImpl();\n        } finally {\n          setCurrentUpdatePriority(previousPriority);\n          ReactCurrentBatchConfig$2.transition = prevTransition;\n        }\n      }\n      return false;\n    }\n    function enqueuePendingPassiveProfilerEffect(fiber) {\n      {\n        pendingPassiveProfilerEffects.push(fiber);\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n    }\n    function flushPassiveEffectsImpl() {\n      if (rootWithPendingPassiveEffects === null) {\n        return false;\n      }\n      var transitions = pendingPassiveTransitions;\n      pendingPassiveTransitions = null;\n      var root = rootWithPendingPassiveEffects;\n      var lanes = pendingPassiveEffectsLanes;\n      rootWithPendingPassiveEffects = null;\n      pendingPassiveEffectsLanes = NoLanes;\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Cannot flush passive effects while already rendering.\");\n      }\n      {\n        isFlushingPassiveEffects = true;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= CommitContext;\n      commitPassiveUnmountEffects(root.current);\n      commitPassiveMountEffects(root, root.current, lanes, transitions);\n      {\n        var profilerEffects = pendingPassiveProfilerEffects;\n        pendingPassiveProfilerEffects = [];\n        for (var i = 0; i < profilerEffects.length; i++) {\n          var _fiber = profilerEffects[i];\n          commitPassiveEffectDurations(root, _fiber);\n        }\n      }\n      executionContext = prevExecutionContext;\n      flushSyncCallbacks();\n      {\n        if (didScheduleUpdateDuringPassiveEffects) {\n          if (root === rootWithPassiveNestedUpdates) {\n            nestedPassiveUpdateCount++;\n          } else {\n            nestedPassiveUpdateCount = 0;\n            rootWithPassiveNestedUpdates = root;\n          }\n        } else {\n          nestedPassiveUpdateCount = 0;\n        }\n        isFlushingPassiveEffects = false;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      onPostCommitRoot(root);\n      {\n        var stateNode = root.current.stateNode;\n        stateNode.effectDuration = 0;\n        stateNode.passiveEffectDuration = 0;\n      }\n      return true;\n    }\n    function isAlreadyFailedLegacyErrorBoundary(instance) {\n      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n    }\n    function markLegacyErrorBoundaryAsFailed(instance) {\n      if (legacyErrorBoundariesThatAlreadyFailed === null) {\n        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n      } else {\n        legacyErrorBoundariesThatAlreadyFailed.add(instance);\n      }\n    }\n    function prepareToThrowUncaughtError(error) {\n      if (!hasUncaughtError) {\n        hasUncaughtError = true;\n        firstUncaughtError = error;\n      }\n    }\n    var onUncaughtError = prepareToThrowUncaughtError;\n    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n      var errorInfo = createCapturedValue(error, sourceFiber);\n      var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n      enqueueUpdate(rootFiber, update);\n      var eventTime = requestEventTime();\n      var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);\n      if (root !== null) {\n        markRootUpdated(root, SyncLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n      {\n        reportUncaughtErrorInDEV(error$1);\n        setIsRunningInsertionEffect(false);\n      }\n      if (sourceFiber.tag === HostRoot) {\n        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n        return;\n      }\n      var fiber = null;\n      {\n        fiber = sourceFiber.return;\n      }\n      while (fiber !== null) {\n        if (fiber.tag === HostRoot) {\n          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n          return;\n        } else if (fiber.tag === ClassComponent) {\n          var ctor = fiber.type;\n          var instance = fiber.stateNode;\n          if (typeof ctor.getDerivedStateFromError === \"function\" || typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n            var errorInfo = createCapturedValue(error$1, sourceFiber);\n            var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n            enqueueUpdate(fiber, update);\n            var eventTime = requestEventTime();\n            var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);\n            if (root !== null) {\n              markRootUpdated(root, SyncLane, eventTime);\n              ensureRootIsScheduled(root, eventTime);\n            }\n            return;\n          }\n        }\n        fiber = fiber.return;\n      }\n      {\n        error(\"Internal React error: Attempted to capture a commit phase error \" + \"inside a detached tree. This indicates a bug in React. Likely \" + \"causes include deleting the same fiber more than once, committing an \" + \"already-finished tree, or an inconsistent return pointer.\\n\\n\" + \"Error message:\\n\\n%s\", error$1);\n      }\n    }\n    function pingSuspendedRoot(root, wakeable, pingedLanes) {\n      var pingCache = root.pingCache;\n      if (pingCache !== null) {\n        pingCache.delete(wakeable);\n      }\n      var eventTime = requestEventTime();\n      markRootPinged(root, pingedLanes);\n      warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n      if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n          prepareFreshStack(root, NoLanes);\n        } else {\n          workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n        }\n      }\n      ensureRootIsScheduled(root, eventTime);\n    }\n    function retryTimedOutBoundary(boundaryFiber, retryLane) {\n      if (retryLane === NoLane) {\n        retryLane = requestRetryLane(boundaryFiber);\n      }\n      var eventTime = requestEventTime();\n      var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n      if (root !== null) {\n        markRootUpdated(root, retryLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n    function retryDehydratedSuspenseBoundary(boundaryFiber) {\n      var suspenseState = boundaryFiber.memoizedState;\n      var retryLane = NoLane;\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function resolveRetryWakeable(boundaryFiber, wakeable) {\n      var retryLane = NoLane;\n      var retryCache;\n      switch (boundaryFiber.tag) {\n        case SuspenseComponent:\n          retryCache = boundaryFiber.stateNode;\n          var suspenseState = boundaryFiber.memoizedState;\n          if (suspenseState !== null) {\n            retryLane = suspenseState.retryLane;\n          }\n          break;\n        case SuspenseListComponent:\n          retryCache = boundaryFiber.stateNode;\n          break;\n        default:\n          throw new Error(\"Pinged unknown suspense boundary type. \" + \"This is probably a bug in React.\");\n      }\n      if (retryCache !== null) {\n        retryCache.delete(wakeable);\n      }\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function jnd(timeElapsed) {\n      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n    }\n    function checkForNestedUpdates() {\n      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n        nestedUpdateCount = 0;\n        rootWithNestedUpdates = null;\n        throw new Error(\"Maximum update depth exceeded. This can happen when a component \" + \"repeatedly calls setState inside componentWillUpdate or \" + \"componentDidUpdate. React limits the number of nested updates to \" + \"prevent infinite loops.\");\n      }\n      {\n        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n          error(\"Maximum update depth exceeded. This can happen when a component \" + \"calls setState inside useEffect, but useEffect either doesn't \" + \"have a dependency array, or one of the dependencies changes on \" + \"every render.\");\n        }\n      }\n    }\n    function flushRenderPhaseStrictModeWarningsInDEV() {\n      {\n        ReactStrictModeWarnings.flushLegacyContextWarning();\n        {\n          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n        }\n      }\n    }\n    var didWarnStateUpdateForNotYetMountedComponent = null;\n    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n      {\n        if ((executionContext & RenderContext) !== NoContext) {\n          return;\n        }\n        if (!(fiber.mode & ConcurrentMode)) {\n          return;\n        }\n        var tag = fiber.tag;\n        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n          return;\n        }\n        var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n        if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n          if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n            return;\n          }\n          didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n        } else {\n          didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n        }\n        var previousFiber = current;\n        try {\n          setCurrentFiber(fiber);\n          error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + \"This indicates that you have a side-effect in your render function that \" + \"asynchronously later calls tries to update the component. Move this work to \" + \"useEffect instead.\");\n        } finally {\n          if (previousFiber) {\n            setCurrentFiber(fiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n    var beginWork$1;\n    {\n      var dummyFiber = null;\n      beginWork$1 = function beginWork$1(current, unitOfWork, lanes) {\n        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);\n        try {\n          return beginWork(current, unitOfWork, lanes);\n        } catch (originalError) {\n          if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === \"object\" && typeof originalError.then === \"function\") {\n            throw originalError;\n          }\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          unwindInterruptedWork(current, unitOfWork);\n          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n          if (unitOfWork.mode & ProfileMode) {\n            startProfilerTimer(unitOfWork);\n          }\n          invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n          if (hasCaughtError()) {\n            var replayError = clearCaughtError();\n            if (typeof replayError === \"object\" && replayError !== null && replayError._suppressLogging && typeof originalError === \"object\" && originalError !== null && !originalError._suppressLogging) {\n              originalError._suppressLogging = true;\n            }\n          }\n          throw originalError;\n        }\n      };\n    }\n    var didWarnAboutUpdateInRender = false;\n    var didWarnAboutUpdateInRenderForAnotherComponent;\n    {\n      didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n    }\n    function warnAboutRenderPhaseUpdatesInDEV(fiber) {\n      {\n        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n          switch (fiber.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case SimpleMemoComponent:\n              {\n                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || \"Unknown\";\n                var dedupeKey = renderingComponentName;\n                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n                  didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n                  var setStateComponentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n                  error(\"Cannot update a component (`%s`) while rendering a \" + \"different component (`%s`). To locate the bad setState() call inside `%s`, \" + \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\", setStateComponentName, renderingComponentName, renderingComponentName);\n                }\n                break;\n              }\n            case ClassComponent:\n              {\n                if (!didWarnAboutUpdateInRender) {\n                  error(\"Cannot update during an existing state transition (such as \" + \"within `render`). Render methods should be a pure \" + \"function of props and state.\");\n                  didWarnAboutUpdateInRender = true;\n                }\n                break;\n              }\n          }\n        }\n      }\n    }\n    function restorePendingUpdaters(root, lanes) {\n      {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n          memoizedUpdaters.forEach(function (schedulingFiber) {\n            addFiberToLanesMap(root, schedulingFiber, lanes);\n          });\n        }\n      }\n    }\n    var fakeActCallbackNode = {};\n    function scheduleCallback$1(priorityLevel, callback) {\n      {\n        var actQueue = ReactCurrentActQueue$1.current;\n        if (actQueue !== null) {\n          actQueue.push(callback);\n          return fakeActCallbackNode;\n        } else {\n          return scheduleCallback(priorityLevel, callback);\n        }\n      }\n    }\n    function cancelCallback$1(callbackNode) {\n      if (callbackNode === fakeActCallbackNode) {\n        return;\n      }\n      return cancelCallback(callbackNode);\n    }\n    function shouldForceFlushFallbacksInDEV() {\n      return ReactCurrentActQueue$1.current !== null;\n    }\n    function warnIfUpdatesNotWrappedWithActDEV(fiber) {\n      {\n        if (fiber.mode & ConcurrentMode) {\n          if (!isConcurrentActEnvironment()) {\n            return;\n          }\n        } else {\n          if (!isLegacyActEnvironment()) {\n            return;\n          }\n          if (executionContext !== NoContext) {\n            return;\n          }\n          if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n            return;\n          }\n        }\n        if (ReactCurrentActQueue$1.current === null) {\n          var previousFiber = current;\n          try {\n            setCurrentFiber(fiber);\n            error(\"An update to %s inside a test was not wrapped in act(...).\\n\\n\" + \"When testing, code that causes React state updates should be \" + \"wrapped into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* fire events that update state */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\", getComponentNameFromFiber(fiber));\n          } finally {\n            if (previousFiber) {\n              setCurrentFiber(fiber);\n            } else {\n              resetCurrentFiber();\n            }\n          }\n        }\n      }\n    }\n    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n      {\n        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n          error(\"A suspended resource finished loading inside a test, but the event \" + \"was not wrapped in act(...).\\n\\n\" + \"When testing, code that resolves suspended data should be wrapped \" + \"into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* finish loading suspended data */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\");\n        }\n      }\n    }\n    function setIsRunningInsertionEffect(isRunning) {\n      {\n        isRunningInsertionEffect = isRunning;\n      }\n    }\n    var resolveFamily = null;\n    var failedBoundaries = null;\n    var setRefreshHandler = function setRefreshHandler(handler) {\n      {\n        resolveFamily = handler;\n      }\n    };\n    function resolveFunctionForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n        var family = resolveFamily(type);\n        if (family === undefined) {\n          return type;\n        }\n        return family.current;\n      }\n    }\n    function resolveClassForHotReloading(type) {\n      return resolveFunctionForHotReloading(type);\n    }\n    function resolveForwardRefForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n        var family = resolveFamily(type);\n        if (family === undefined) {\n          if (type !== null && type !== undefined && typeof type.render === \"function\") {\n            var currentRender = resolveFunctionForHotReloading(type.render);\n            if (type.render !== currentRender) {\n              var syntheticType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: currentRender\n              };\n              if (type.displayName !== undefined) {\n                syntheticType.displayName = type.displayName;\n              }\n              return syntheticType;\n            }\n          }\n          return type;\n        }\n        return family.current;\n      }\n    }\n    function isCompatibleFamilyForHotReloading(fiber, element) {\n      {\n        if (resolveFamily === null) {\n          return false;\n        }\n        var prevType = fiber.elementType;\n        var nextType = element.type;\n        var needsCompareFamilies = false;\n        var $$typeofNextType = typeof nextType === \"object\" && nextType !== null ? nextType.$$typeof : null;\n        switch (fiber.tag) {\n          case ClassComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case FunctionComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case ForwardRef:\n            {\n              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case MemoComponent:\n          case SimpleMemoComponent:\n            {\n              if ($$typeofNextType === REACT_MEMO_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          default:\n            return false;\n        }\n        if (needsCompareFamilies) {\n          var prevFamily = resolveFamily(prevType);\n          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n    function markFailedErrorBoundaryForHotReloading(fiber) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n        if (typeof WeakSet !== \"function\") {\n          return;\n        }\n        if (failedBoundaries === null) {\n          failedBoundaries = new WeakSet();\n        }\n        failedBoundaries.add(fiber);\n      }\n    }\n    var scheduleRefresh = function scheduleRefresh(root, update) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n        var staleFamilies = update.staleFamilies,\n          updatedFamilies = update.updatedFamilies;\n        flushPassiveEffects();\n        flushSync(function () {\n          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n        });\n      }\n    };\n    var scheduleRoot = function scheduleRoot(root, element) {\n      {\n        if (root.context !== emptyContextObject) {\n          return;\n        }\n        flushPassiveEffects();\n        flushSync(function () {\n          updateContainer(element, root, null, null);\n        });\n      }\n    };\n    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n      {\n        var alternate = fiber.alternate,\n          child = fiber.child,\n          sibling = fiber.sibling,\n          tag = fiber.tag,\n          type = fiber.type;\n        var candidateType = null;\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n        if (resolveFamily === null) {\n          throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n        }\n        var needsRender = false;\n        var needsRemount = false;\n        if (candidateType !== null) {\n          var family = resolveFamily(candidateType);\n          if (family !== undefined) {\n            if (staleFamilies.has(family)) {\n              needsRemount = true;\n            } else if (updatedFamilies.has(family)) {\n              if (tag === ClassComponent) {\n                needsRemount = true;\n              } else {\n                needsRender = true;\n              }\n            }\n          }\n        }\n        if (failedBoundaries !== null) {\n          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n            needsRemount = true;\n          }\n        }\n        if (needsRemount) {\n          fiber._debugNeedsRemount = true;\n        }\n        if (needsRemount || needsRender) {\n          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n        }\n        if (child !== null && !needsRemount) {\n          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n        }\n        if (sibling !== null) {\n          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n        }\n      }\n    }\n    var findHostInstancesForRefresh = function findHostInstancesForRefresh(root, families) {\n      {\n        var hostInstances = new Set();\n        var types = new Set(families.map(function (family) {\n          return family.current;\n        }));\n        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n        return hostInstances;\n      }\n    };\n    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n      {\n        var child = fiber.child,\n          sibling = fiber.sibling,\n          tag = fiber.tag,\n          type = fiber.type;\n        var candidateType = null;\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n        var didMatch = false;\n        if (candidateType !== null) {\n          if (types.has(candidateType)) {\n            didMatch = true;\n          }\n        }\n        if (didMatch) {\n          findHostInstancesForFiberShallowly(fiber, hostInstances);\n        } else {\n          if (child !== null) {\n            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n          }\n        }\n        if (sibling !== null) {\n          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n        }\n      }\n    }\n    function findHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n        if (foundHostInstances) {\n          return;\n        }\n        var node = fiber;\n        while (true) {\n          switch (node.tag) {\n            case HostComponent:\n              hostInstances.add(node.stateNode);\n              return;\n            case HostPortal:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n            case HostRoot:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n          }\n          if (node.return === null) {\n            throw new Error(\"Expected to reach root first.\");\n          }\n          node = node.return;\n        }\n      }\n    }\n    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var node = fiber;\n        var foundHostInstances = false;\n        while (true) {\n          if (node.tag === HostComponent) {\n            foundHostInstances = true;\n            hostInstances.add(node.stateNode);\n          } else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === fiber) {\n            return foundHostInstances;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === fiber) {\n              return foundHostInstances;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n      return false;\n    }\n    var hasBadMapPolyfill;\n    {\n      hasBadMapPolyfill = false;\n      try {\n        var nonExtensibleObject = Object.preventExtensions({});\n        new Map([[nonExtensibleObject, null]]);\n        new Set([nonExtensibleObject]);\n      } catch (e) {\n        hasBadMapPolyfill = true;\n      }\n    }\n    function FiberNode(tag, pendingProps, key, mode) {\n      this.tag = tag;\n      this.key = key;\n      this.elementType = null;\n      this.type = null;\n      this.stateNode = null;\n      this.return = null;\n      this.child = null;\n      this.sibling = null;\n      this.index = 0;\n      this.ref = null;\n      this.pendingProps = pendingProps;\n      this.memoizedProps = null;\n      this.updateQueue = null;\n      this.memoizedState = null;\n      this.dependencies = null;\n      this.mode = mode;\n      this.flags = NoFlags;\n      this.subtreeFlags = NoFlags;\n      this.deletions = null;\n      this.lanes = NoLanes;\n      this.childLanes = NoLanes;\n      this.alternate = null;\n      {\n        this.actualDuration = Number.NaN;\n        this.actualStartTime = Number.NaN;\n        this.selfBaseDuration = Number.NaN;\n        this.treeBaseDuration = Number.NaN;\n        this.actualDuration = 0;\n        this.actualStartTime = -1;\n        this.selfBaseDuration = 0;\n        this.treeBaseDuration = 0;\n      }\n      {\n        this._debugSource = null;\n        this._debugOwner = null;\n        this._debugNeedsRemount = false;\n        this._debugHookTypes = null;\n        if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n          Object.preventExtensions(this);\n        }\n      }\n    }\n    var createFiber = function createFiber(tag, pendingProps, key, mode) {\n      return new FiberNode(tag, pendingProps, key, mode);\n    };\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function isSimpleFunctionComponent(type) {\n      return typeof type === \"function\" && !shouldConstruct(type) && type.defaultProps === undefined;\n    }\n    function resolveLazyComponentTag(Component) {\n      if (typeof Component === \"function\") {\n        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n      } else if (Component !== undefined && Component !== null) {\n        var $$typeof = Component.$$typeof;\n        if ($$typeof === REACT_FORWARD_REF_TYPE) {\n          return ForwardRef;\n        }\n        if ($$typeof === REACT_MEMO_TYPE) {\n          return MemoComponent;\n        }\n      }\n      return IndeterminateComponent;\n    }\n    function createWorkInProgress(current, pendingProps) {\n      var workInProgress = current.alternate;\n      if (workInProgress === null) {\n        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n        workInProgress.elementType = current.elementType;\n        workInProgress.type = current.type;\n        workInProgress.stateNode = current.stateNode;\n        {\n          workInProgress._debugSource = current._debugSource;\n          workInProgress._debugOwner = current._debugOwner;\n          workInProgress._debugHookTypes = current._debugHookTypes;\n        }\n        workInProgress.alternate = current;\n        current.alternate = workInProgress;\n      } else {\n        workInProgress.pendingProps = pendingProps;\n        workInProgress.type = current.type;\n        workInProgress.flags = NoFlags;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        {\n          workInProgress.actualDuration = 0;\n          workInProgress.actualStartTime = -1;\n        }\n      }\n      workInProgress.flags = current.flags & StaticMask;\n      workInProgress.childLanes = current.childLanes;\n      workInProgress.lanes = current.lanes;\n      workInProgress.child = current.child;\n      workInProgress.memoizedProps = current.memoizedProps;\n      workInProgress.memoizedState = current.memoizedState;\n      workInProgress.updateQueue = current.updateQueue;\n      var currentDependencies = current.dependencies;\n      workInProgress.dependencies = currentDependencies === null ? null : {\n        lanes: currentDependencies.lanes,\n        firstContext: currentDependencies.firstContext\n      };\n      workInProgress.sibling = current.sibling;\n      workInProgress.index = current.index;\n      workInProgress.ref = current.ref;\n      {\n        workInProgress.selfBaseDuration = current.selfBaseDuration;\n        workInProgress.treeBaseDuration = current.treeBaseDuration;\n      }\n      {\n        workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n        switch (workInProgress.tag) {\n          case IndeterminateComponent:\n          case FunctionComponent:\n          case SimpleMemoComponent:\n            workInProgress.type = resolveFunctionForHotReloading(current.type);\n            break;\n          case ClassComponent:\n            workInProgress.type = resolveClassForHotReloading(current.type);\n            break;\n          case ForwardRef:\n            workInProgress.type = resolveForwardRefForHotReloading(current.type);\n            break;\n        }\n      }\n      return workInProgress;\n    }\n    function resetWorkInProgress(workInProgress, renderLanes) {\n      workInProgress.flags &= StaticMask | Placement;\n      var current = workInProgress.alternate;\n      if (current === null) {\n        workInProgress.childLanes = NoLanes;\n        workInProgress.lanes = renderLanes;\n        workInProgress.child = null;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.memoizedProps = null;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        workInProgress.dependencies = null;\n        workInProgress.stateNode = null;\n        {\n          workInProgress.selfBaseDuration = 0;\n          workInProgress.treeBaseDuration = 0;\n        }\n      } else {\n        workInProgress.childLanes = current.childLanes;\n        workInProgress.lanes = current.lanes;\n        workInProgress.child = current.child;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        workInProgress.memoizedProps = current.memoizedProps;\n        workInProgress.memoizedState = current.memoizedState;\n        workInProgress.updateQueue = current.updateQueue;\n        workInProgress.type = current.type;\n        var currentDependencies = current.dependencies;\n        workInProgress.dependencies = currentDependencies === null ? null : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        };\n        {\n          workInProgress.selfBaseDuration = current.selfBaseDuration;\n          workInProgress.treeBaseDuration = current.treeBaseDuration;\n        }\n      }\n      return workInProgress;\n    }\n    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n      var mode;\n      if (tag === ConcurrentRoot) {\n        mode = ConcurrentMode;\n        if (isStrictMode === true) {\n          mode |= StrictLegacyMode;\n        }\n      } else {\n        mode = NoMode;\n      }\n      if (isDevToolsPresent) {\n        mode |= ProfileMode;\n      }\n      return createFiber(HostRoot, null, null, mode);\n    }\n    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {\n      var fiberTag = IndeterminateComponent;\n      var resolvedType = type;\n      if (typeof type === \"function\") {\n        if (shouldConstruct(type)) {\n          fiberTag = ClassComponent;\n          {\n            resolvedType = resolveClassForHotReloading(resolvedType);\n          }\n        } else {\n          {\n            resolvedType = resolveFunctionForHotReloading(resolvedType);\n          }\n        }\n      } else if (typeof type === \"string\") {\n        fiberTag = HostComponent;\n      } else {\n        getTag: switch (type) {\n          case REACT_FRAGMENT_TYPE:\n            return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n          case REACT_STRICT_MODE_TYPE:\n            fiberTag = Mode;\n            mode |= StrictLegacyMode;\n            break;\n          case REACT_PROFILER_TYPE:\n            return createFiberFromProfiler(pendingProps, mode, lanes, key);\n          case REACT_SUSPENSE_TYPE:\n            return createFiberFromSuspense(pendingProps, mode, lanes, key);\n          case REACT_SUSPENSE_LIST_TYPE:\n            return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n          case REACT_OFFSCREEN_TYPE:\n            return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n          case REACT_LEGACY_HIDDEN_TYPE:\n          case REACT_SCOPE_TYPE:\n          case REACT_CACHE_TYPE:\n          case REACT_TRACING_MARKER_TYPE:\n          case REACT_DEBUG_TRACING_MODE_TYPE:\n          default:\n            {\n              if (typeof type === \"object\" && type !== null) {\n                switch (type.$$typeof) {\n                  case REACT_PROVIDER_TYPE:\n                    fiberTag = ContextProvider;\n                    break getTag;\n                  case REACT_CONTEXT_TYPE:\n                    fiberTag = ContextConsumer;\n                    break getTag;\n                  case REACT_FORWARD_REF_TYPE:\n                    fiberTag = ForwardRef;\n                    {\n                      resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                    }\n                    break getTag;\n                  case REACT_MEMO_TYPE:\n                    fiberTag = MemoComponent;\n                    break getTag;\n                  case REACT_LAZY_TYPE:\n                    fiberTag = LazyComponent;\n                    resolvedType = null;\n                    break getTag;\n                }\n              }\n              var info = \"\";\n              {\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                  info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and \" + \"named imports.\";\n                }\n                var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n                if (ownerName) {\n                  info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n                }\n              }\n              throw new Error(\"Element type is invalid: expected a string (for built-in \" + \"components) or a class/function (for composite components) \" + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n            }\n        }\n      }\n      var fiber = createFiber(fiberTag, pendingProps, key, mode);\n      fiber.elementType = type;\n      fiber.type = resolvedType;\n      fiber.lanes = lanes;\n      {\n        fiber._debugOwner = owner;\n      }\n      return fiber;\n    }\n    function createFiberFromElement(element, mode, lanes) {\n      var owner = null;\n      {\n        owner = element._owner;\n      }\n      var type = element.type;\n      var key = element.key;\n      var pendingProps = element.props;\n      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n      {\n        fiber._debugSource = element._source;\n        fiber._debugOwner = element._owner;\n      }\n      return fiber;\n    }\n    function createFiberFromFragment(elements, mode, lanes, key) {\n      var fiber = createFiber(Fragment, elements, key, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromProfiler(pendingProps, mode, lanes, key) {\n      {\n        if (typeof pendingProps.id !== \"string\") {\n          error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n        }\n      }\n      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n      fiber.elementType = REACT_PROFILER_TYPE;\n      fiber.lanes = lanes;\n      {\n        fiber.stateNode = {\n          effectDuration: 0,\n          passiveEffectDuration: 0\n        };\n      }\n      return fiber;\n    }\n    function createFiberFromSuspense(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_OFFSCREEN_TYPE;\n      fiber.lanes = lanes;\n      var primaryChildInstance = {};\n      fiber.stateNode = primaryChildInstance;\n      return fiber;\n    }\n    function createFiberFromText(content, mode, lanes) {\n      var fiber = createFiber(HostText, content, null, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromPortal(portal, mode, lanes) {\n      var pendingProps = portal.children !== null ? portal.children : [];\n      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n      fiber.lanes = lanes;\n      fiber.stateNode = {\n        containerInfo: portal.containerInfo,\n        pendingChildren: null,\n        implementation: portal.implementation\n      };\n      return fiber;\n    }\n    function assignFiberPropertiesInDEV(target, source) {\n      if (target === null) {\n        target = createFiber(IndeterminateComponent, null, null, NoMode);\n      }\n      target.tag = source.tag;\n      target.key = source.key;\n      target.elementType = source.elementType;\n      target.type = source.type;\n      target.stateNode = source.stateNode;\n      target.return = source.return;\n      target.child = source.child;\n      target.sibling = source.sibling;\n      target.index = source.index;\n      target.ref = source.ref;\n      target.pendingProps = source.pendingProps;\n      target.memoizedProps = source.memoizedProps;\n      target.updateQueue = source.updateQueue;\n      target.memoizedState = source.memoizedState;\n      target.dependencies = source.dependencies;\n      target.mode = source.mode;\n      target.flags = source.flags;\n      target.subtreeFlags = source.subtreeFlags;\n      target.deletions = source.deletions;\n      target.lanes = source.lanes;\n      target.childLanes = source.childLanes;\n      target.alternate = source.alternate;\n      {\n        target.actualDuration = source.actualDuration;\n        target.actualStartTime = source.actualStartTime;\n        target.selfBaseDuration = source.selfBaseDuration;\n        target.treeBaseDuration = source.treeBaseDuration;\n      }\n      target._debugSource = source._debugSource;\n      target._debugOwner = source._debugOwner;\n      target._debugNeedsRemount = source._debugNeedsRemount;\n      target._debugHookTypes = source._debugHookTypes;\n      return target;\n    }\n    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n      this.tag = tag;\n      this.containerInfo = containerInfo;\n      this.pendingChildren = null;\n      this.current = null;\n      this.pingCache = null;\n      this.finishedWork = null;\n      this.timeoutHandle = noTimeout;\n      this.context = null;\n      this.pendingContext = null;\n      this.callbackNode = null;\n      this.callbackPriority = NoLane;\n      this.eventTimes = createLaneMap(NoLanes);\n      this.expirationTimes = createLaneMap(NoTimestamp);\n      this.pendingLanes = NoLanes;\n      this.suspendedLanes = NoLanes;\n      this.pingedLanes = NoLanes;\n      this.expiredLanes = NoLanes;\n      this.mutableReadLanes = NoLanes;\n      this.finishedLanes = NoLanes;\n      this.entangledLanes = NoLanes;\n      this.entanglements = createLaneMap(NoLanes);\n      this.identifierPrefix = identifierPrefix;\n      this.onRecoverableError = onRecoverableError;\n      {\n        this.effectDuration = 0;\n        this.passiveEffectDuration = 0;\n      }\n      {\n        this.memoizedUpdaters = new Set();\n        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n        for (var _i = 0; _i < TotalLanes; _i++) {\n          pendingUpdatersLaneMap.push(new Set());\n        }\n      }\n      {\n        switch (tag) {\n          case ConcurrentRoot:\n            this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n            break;\n          case LegacyRoot:\n            this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n            break;\n        }\n      }\n    }\n    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n      var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n      root.current = uninitializedFiber;\n      uninitializedFiber.stateNode = root;\n      {\n        var _initialState = {\n          element: initialChildren,\n          isDehydrated: hydrate,\n          cache: null,\n          transitions: null,\n          pendingSuspenseBoundaries: null\n        };\n        uninitializedFiber.memoizedState = _initialState;\n      }\n      initializeUpdateQueue(uninitializedFiber);\n      return root;\n    }\n    var ReactVersion = \"18.2.0-next-d300cebde-20220601\";\n    function createPortal(children, containerInfo, implementation) {\n      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      {\n        checkKeyStringCoercion(key);\n      }\n      return {\n        $$typeof: REACT_PORTAL_TYPE,\n        key: key == null ? null : \"\" + key,\n        children: children,\n        containerInfo: containerInfo,\n        implementation: implementation\n      };\n    }\n    var didWarnAboutNestedUpdates;\n    var didWarnAboutFindNodeInStrictMode;\n    {\n      didWarnAboutNestedUpdates = false;\n      didWarnAboutFindNodeInStrictMode = {};\n    }\n    function getContextForSubtree(parentComponent) {\n      if (!parentComponent) {\n        return emptyContextObject;\n      }\n      var fiber = get(parentComponent);\n      var parentContext = findCurrentUnmaskedContext(fiber);\n      if (fiber.tag === ClassComponent) {\n        var Component = fiber.type;\n        if (isContextProvider(Component)) {\n          return processChildContext(fiber, Component, parentContext);\n        }\n      }\n      return parentContext;\n    }\n    function findHostInstanceWithWarning(component, methodName) {\n      {\n        var fiber = get(component);\n        if (fiber === undefined) {\n          if (typeof component.render === \"function\") {\n            throw new Error(\"Unable to find node on an unmounted component.\");\n          } else {\n            var keys = Object.keys(component).join(\",\");\n            throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\n          }\n        }\n        var hostFiber = findCurrentHostFiber(fiber);\n        if (hostFiber === null) {\n          return null;\n        }\n        if (hostFiber.mode & StrictLegacyMode) {\n          var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n          if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n            didWarnAboutFindNodeInStrictMode[componentName] = true;\n            var previousFiber = current;\n            try {\n              setCurrentFiber(hostFiber);\n              if (fiber.mode & StrictLegacyMode) {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which is inside StrictMode. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              } else {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which renders StrictMode children. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              }\n            } finally {\n              if (previousFiber) {\n                setCurrentFiber(previousFiber);\n              } else {\n                resetCurrentFiber();\n              }\n            }\n          }\n        }\n        return hostFiber.stateNode;\n      }\n    }\n    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var hydrate = false;\n      var initialChildren = null;\n      return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n    }\n    function updateContainer(element, container, parentComponent, callback) {\n      {\n        onScheduleRoot(container, element);\n      }\n      var current$1 = container.current;\n      var eventTime = requestEventTime();\n      var lane = requestUpdateLane(current$1);\n      var context = getContextForSubtree(parentComponent);\n      if (container.context === null) {\n        container.context = context;\n      } else {\n        container.pendingContext = context;\n      }\n      {\n        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n          didWarnAboutNestedUpdates = true;\n          error(\"Render methods should be a pure function of props and state; \" + \"triggering nested component updates from render is not allowed. \" + \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" + \"Check the render method of %s.\", getComponentNameFromFiber(current) || \"Unknown\");\n        }\n      }\n      var update = createUpdate(eventTime, lane);\n      update.payload = {\n        element: element\n      };\n      callback = callback === undefined ? null : callback;\n      if (callback !== null) {\n        {\n          if (typeof callback !== \"function\") {\n            error(\"render(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callback);\n          }\n        }\n        update.callback = callback;\n      }\n      enqueueUpdate(current$1, update);\n      var root = scheduleUpdateOnFiber(current$1, lane, eventTime);\n      if (root !== null) {\n        entangleTransitions(root, current$1, lane);\n      }\n      return lane;\n    }\n    function getPublicRootInstance(container) {\n      var containerFiber = container.current;\n      if (!containerFiber.child) {\n        return null;\n      }\n      switch (containerFiber.child.tag) {\n        case HostComponent:\n          return getPublicInstance(containerFiber.child.stateNode);\n        default:\n          return containerFiber.child.stateNode;\n      }\n    }\n    var shouldErrorImpl = function shouldErrorImpl(fiber) {\n      return null;\n    };\n    function shouldError(fiber) {\n      return shouldErrorImpl(fiber);\n    }\n    var shouldSuspendImpl = function shouldSuspendImpl(fiber) {\n      return false;\n    };\n    function shouldSuspend(fiber) {\n      return shouldSuspendImpl(fiber);\n    }\n    var overrideHookState = null;\n    var overrideHookStateDeletePath = null;\n    var overrideHookStateRenamePath = null;\n    var overrideProps = null;\n    var overridePropsDeletePath = null;\n    var overridePropsRenamePath = null;\n    var scheduleUpdate = null;\n    var setErrorHandler = null;\n    var setSuspenseHandler = null;\n    {\n      var copyWithDeleteImpl = function copyWithDeleteImpl(obj, path, index) {\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        if (index + 1 === path.length) {\n          if (isArray(updated)) {\n            updated.splice(key, 1);\n          } else {\n            delete updated[key];\n          }\n          return updated;\n        }\n        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n        return updated;\n      };\n      var copyWithDelete = function copyWithDelete(obj, path) {\n        return copyWithDeleteImpl(obj, path, 0);\n      };\n      var copyWithRenameImpl = function copyWithRenameImpl(obj, oldPath, newPath, index) {\n        var oldKey = oldPath[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        if (index + 1 === oldPath.length) {\n          var newKey = newPath[index];\n          updated[newKey] = updated[oldKey];\n          if (isArray(updated)) {\n            updated.splice(oldKey, 1);\n          } else {\n            delete updated[oldKey];\n          }\n        } else {\n          updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);\n        }\n        return updated;\n      };\n      var copyWithRename = function copyWithRename(obj, oldPath, newPath) {\n        if (oldPath.length !== newPath.length) {\n          warn(\"copyWithRename() expects paths of the same length\");\n          return;\n        } else {\n          for (var i = 0; i < newPath.length - 1; i++) {\n            if (oldPath[i] !== newPath[i]) {\n              warn(\"copyWithRename() expects paths to be the same except for the deepest key\");\n              return;\n            }\n          }\n        }\n        return copyWithRenameImpl(obj, oldPath, newPath, 0);\n      };\n      var copyWithSetImpl = function copyWithSetImpl(obj, path, index, value) {\n        if (index >= path.length) {\n          return value;\n        }\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n        return updated;\n      };\n      var copyWithSet = function copyWithSet(obj, path, value) {\n        return copyWithSetImpl(obj, path, 0, value);\n      };\n      var findHook = function findHook(fiber, id) {\n        var currentHook = fiber.memoizedState;\n        while (currentHook !== null && id > 0) {\n          currentHook = currentHook.next;\n          id--;\n        }\n        return currentHook;\n      };\n      overrideHookState = function overrideHookState(fiber, id, path, value) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithSet(hook.memoizedState, path, value);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overrideHookStateDeletePath = function overrideHookStateDeletePath(fiber, id, path) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithDelete(hook.memoizedState, path);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overrideHookStateRenamePath = function overrideHookStateRenamePath(fiber, id, oldPath, newPath) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overrideProps = function overrideProps(fiber, path, value) {\n        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n      };\n      overridePropsDeletePath = function overridePropsDeletePath(fiber, path) {\n        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n      };\n      overridePropsRenamePath = function overridePropsRenamePath(fiber, oldPath, newPath) {\n        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n      };\n      scheduleUpdate = function scheduleUpdate(fiber) {\n        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n      };\n      setErrorHandler = function setErrorHandler(newShouldErrorImpl) {\n        shouldErrorImpl = newShouldErrorImpl;\n      };\n      setSuspenseHandler = function setSuspenseHandler(newShouldSuspendImpl) {\n        shouldSuspendImpl = newShouldSuspendImpl;\n      };\n    }\n    function findHostInstanceByFiber(fiber) {\n      var hostFiber = findCurrentHostFiber(fiber);\n      if (hostFiber === null) {\n        return null;\n      }\n      return hostFiber.stateNode;\n    }\n    function emptyFindFiberByHostInstance(instance) {\n      return null;\n    }\n    function getCurrentFiberForDevTools() {\n      return current;\n    }\n    function injectIntoDevTools(devToolsConfig) {\n      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n      return injectInternals({\n        bundleType: devToolsConfig.bundleType,\n        version: devToolsConfig.version,\n        rendererPackageName: devToolsConfig.rendererPackageName,\n        rendererConfig: devToolsConfig.rendererConfig,\n        overrideHookState: overrideHookState,\n        overrideHookStateDeletePath: overrideHookStateDeletePath,\n        overrideHookStateRenamePath: overrideHookStateRenamePath,\n        overrideProps: overrideProps,\n        overridePropsDeletePath: overridePropsDeletePath,\n        overridePropsRenamePath: overridePropsRenamePath,\n        setErrorHandler: setErrorHandler,\n        setSuspenseHandler: setSuspenseHandler,\n        scheduleUpdate: scheduleUpdate,\n        currentDispatcherRef: ReactCurrentDispatcher,\n        findHostInstanceByFiber: findHostInstanceByFiber,\n        findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n        findHostInstancesForRefresh: findHostInstancesForRefresh,\n        scheduleRefresh: scheduleRefresh,\n        scheduleRoot: scheduleRoot,\n        setRefreshHandler: setRefreshHandler,\n        getCurrentFiber: getCurrentFiberForDevTools,\n        reconcilerVersion: ReactVersion\n      });\n    }\n    var emptyObject$1 = {};\n    {\n      Object.freeze(emptyObject$1);\n    }\n    var createHierarchy;\n    var getHostNode;\n    var getHostProps;\n    var lastNonHostInstance;\n    var getOwnerHierarchy;\n    var _traverseOwnerTreeUp;\n    {\n      createHierarchy = function createHierarchy(fiberHierarchy) {\n        return fiberHierarchy.map(function (fiber) {\n          return {\n            name: getComponentNameFromType(fiber.type),\n            getInspectorData: function getInspectorData(findNodeHandle) {\n              return {\n                props: getHostProps(fiber),\n                source: fiber._debugSource,\n                measure: function measure(callback) {\n                  var hostFiber = findCurrentHostFiber(fiber);\n                  var shadowNode = hostFiber != null && hostFiber.stateNode !== null && hostFiber.stateNode.node;\n                  if (shadowNode) {\n                    nativeFabricUIManager.measure(shadowNode, callback);\n                  } else {\n                    return ReactNativePrivateInterface.UIManager.measure(getHostNode(fiber, findNodeHandle), callback);\n                  }\n                }\n              };\n            }\n          };\n        });\n      };\n      getHostNode = function getHostNode(fiber, findNodeHandle) {\n        var hostNode;\n        while (fiber) {\n          if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n            hostNode = findNodeHandle(fiber.stateNode);\n          }\n          if (hostNode) {\n            return hostNode;\n          }\n          fiber = fiber.child;\n        }\n        return null;\n      };\n      getHostProps = function getHostProps(fiber) {\n        var host = findCurrentHostFiber(fiber);\n        if (host) {\n          return host.memoizedProps || emptyObject$1;\n        }\n        return emptyObject$1;\n      };\n      exports.getInspectorDataForInstance = function (closestInstance) {\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n      getOwnerHierarchy = function getOwnerHierarchy(instance) {\n        var hierarchy = [];\n        _traverseOwnerTreeUp(hierarchy, instance);\n        return hierarchy;\n      };\n      lastNonHostInstance = function lastNonHostInstance(hierarchy) {\n        for (var i = hierarchy.length - 1; i > 1; i--) {\n          var instance = hierarchy[i];\n          if (instance.tag !== HostComponent) {\n            return instance;\n          }\n        }\n        return hierarchy[0];\n      };\n      _traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {\n        if (instance) {\n          hierarchy.unshift(instance);\n          _traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n        }\n      };\n    }\n    var getInspectorDataForViewTag;\n    var getInspectorDataForViewAtPoint;\n    {\n      getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {\n        var closestInstance = getInstanceFromTag(viewTag);\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n      getInspectorDataForViewAtPoint = function getInspectorDataForViewAtPoint(findNodeHandle, inspectedView, locationX, locationY, callback) {\n        var closestInstance = null;\n        if (inspectedView._internalInstanceHandle != null) {\n          nativeFabricUIManager.findNodeAtPoint(inspectedView._internalInstanceHandle.stateNode.node, locationX, locationY, function (internalInstanceHandle) {\n            if (internalInstanceHandle == null) {\n              callback(assign({\n                pointerY: locationY,\n                frame: {\n                  left: 0,\n                  top: 0,\n                  width: 0,\n                  height: 0\n                }\n              }, exports.getInspectorDataForInstance(closestInstance)));\n            }\n            closestInstance = internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n            var nativeViewTag = internalInstanceHandle.stateNode.canonical._nativeTag;\n            nativeFabricUIManager.measure(internalInstanceHandle.stateNode.node, function (x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(closestInstance);\n              callback(assign({}, inspectorData, {\n                pointerY: locationY,\n                frame: {\n                  left: pageX,\n                  top: pageY,\n                  width: width,\n                  height: height\n                },\n                touchedViewTag: nativeViewTag\n              }));\n            });\n          });\n        } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n          ReactNativePrivateInterface.UIManager.findSubviewIn(findNodeHandle(inspectedView), [locationX, locationY], function (nativeViewTag, left, top, width, height) {\n            var inspectorData = exports.getInspectorDataForInstance(getInstanceFromTag(nativeViewTag));\n            callback(assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            }));\n          });\n        } else {\n          error(\"getInspectorDataForViewAtPoint expects to receive a host component\");\n          return;\n        }\n      };\n    }\n    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n    function findHostInstance_DEPRECATED(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n      if (componentOrHandle == null) {\n        return null;\n      }\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle;\n      }\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical;\n      }\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findHostInstance_DEPRECATED\");\n      }\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n      if (hostInstance.canonical) {\n        return hostInstance.canonical;\n      }\n      return hostInstance;\n    }\n    function findNodeHandle(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n      if (componentOrHandle == null) {\n        return null;\n      }\n      if (typeof componentOrHandle === \"number\") {\n        return componentOrHandle;\n      }\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle._nativeTag;\n      }\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical._nativeTag;\n      }\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findNodeHandle\");\n      }\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n      if (hostInstance.canonical) {\n        return hostInstance.canonical._nativeTag;\n      }\n      return hostInstance._nativeTag;\n    }\n    function dispatchCommand(handle, command, args) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"dispatchCommand was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n        }\n      } else {\n        ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);\n      }\n    }\n    function sendAccessibilityEvent(handle, eventType) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"sendAccessibilityEvent was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n        }\n      } else {\n        ReactNativePrivateInterface.legacySendAccessibilityEvent(handle._nativeTag, eventType);\n      }\n    }\n    function onRecoverableError(error$1) {\n      error(error$1);\n    }\n    function render(element, containerTag, callback) {\n      var root = roots.get(containerTag);\n      if (!root) {\n        root = createContainer(containerTag, LegacyRoot, null, false, null, \"\", onRecoverableError);\n        roots.set(containerTag, root);\n      }\n      updateContainer(element, root, null, callback);\n      return getPublicRootInstance(root);\n    }\n    function unmountComponentAtNode(containerTag) {\n      var root = roots.get(containerTag);\n      if (root) {\n        updateContainer(null, root, null, function () {\n          roots.delete(containerTag);\n        });\n      }\n    }\n    function unmountComponentAtNodeAndRemoveContainer(containerTag) {\n      unmountComponentAtNode(containerTag);\n      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);\n    }\n    function createPortal$1(children, containerTag) {\n      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return createPortal(children, containerTag, null, key);\n    }\n    setBatchingImplementation(batchedUpdates$1);\n    function computeComponentStackForErrorReporting(reactTag) {\n      var fiber = getInstanceFromTag(reactTag);\n      if (!fiber) {\n        return \"\";\n      }\n      return getStackByFiberInDevAndProd(fiber);\n    }\n    var roots = new Map();\n    var Internals = {\n      computeComponentStackForErrorReporting: computeComponentStackForErrorReporting\n    };\n    injectIntoDevTools({\n      findFiberByHostInstance: getInstanceFromTag,\n      bundleType: 1,\n      version: ReactVersion,\n      rendererPackageName: \"react-native-renderer\",\n      rendererConfig: {\n        getInspectorDataForViewTag: getInspectorDataForViewTag,\n        getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(null, findNodeHandle)\n      }\n    });\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\n    exports.createPortal = createPortal$1;\n    exports.dispatchCommand = dispatchCommand;\n    exports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\n    exports.findNodeHandle = findNodeHandle;\n    exports.render = render;\n    exports.sendAccessibilityEvent = sendAccessibilityEvent;\n    exports.unmountComponentAtNode = unmountComponentAtNode;\n    exports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;\n    exports.unstable_batchedUpdates = batchedUpdates;\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"names":["__DEV__","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","require","ReactNativePrivateInterface","Scheduler","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","invokeGuardedCallbackProd","name","func","context","a","b","c","d","e","f","funcArgs","slice","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","didError","windowEvent","event","windowEventDescriptor","Object","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","callCallback","hasOwnProperty","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","defineProperty","invokeGuardedCallbackImpl$1","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","hasCaughtError","isArrayImpl","isArray","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","setComponentTree","getFiberCurrentPropsFromNodeImpl","getInstanceFromNodeImpl","getNodeFromInstanceImpl","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","listenersLen","instancesIsArr","instancesLen","executeDispatch","listener","inst","type","currentTarget","undefined","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","assign","EVENT_POOL_SIZE","EventInterface","target","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","isDefaultPrevented","_targetInst","Interface","constructor","propName","normalize","returnValue","cancelBubble","persist","isPersistent","destructor","getPooledWarningPropertyDefinition","extend","Super","E","Class","addEventPoolingTo","getVal","set","val","action","isFunction","get","result","configurable","createOrGetPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","releasePooledEvent","push","getPooled","release","ResponderSyntheticEvent","touchHistory","TOP_TOUCH_START","TOP_TOUCH_MOVE","TOP_TOUCH_END","TOP_TOUCH_CANCEL","TOP_SCROLL","TOP_SELECTION_CHANGE","isStartish","topLevelType","isMoveish","isEndish","startDependencies","moveDependencies","endDependencies","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","recordTouchStart","recordTouchMove","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","instrumentationCallback","ResponderTouchHistoryStore","instrument","callback","recordTouchTrack","changedTouches","forEach","touches","touchTrackToCheck","activeRecord","accumulate","current","next","accumulateInto","forEachAccumulated","arr","cb","scope","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","responderInst","trackedTouchCount","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","phasedRegistrationNames","bubbled","captured","dependencies","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","registrationName","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","getParent","return","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","isAncestor","traverseTwoPhase","fn","arg","path","getListener","stateNode","props","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","phase","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateDirectDispatches","events","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateTwoPhaseDispatchesSkipTarget","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatches","setResponderAndExtractTransfer","shouldSetEventType","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","_getResponder","extractEvents","eventSystemFlags","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","gesture","isResponderTerminate","isResponderRelease","finalTouch","finalEvent","injection","injectGlobalResponderHandler","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","publishedEvents","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","registrationNameModules","registrationNameDependencies","lowerCasedName","toLowerCase","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","getListeners","dispatchToImperativeListeners","canonical","_eventListeners","listeners","requestedPhaseIsCapture","mangledImperativeRegistrationName","replace","eventListeners","listenerObj","isCaptureEvent","options","capture","listenerFnWrapper","syntheticEvent","eventInst","CustomEvent","detail","setSyntheticEvent","once","removeEventListener_unstable","invalidated","customBubblingEventTypes","ReactNativeViewConfigRegistry","customDirectEventTypes","listenersAtPhase","accumulateListenersAndInstances","listenersLength","accumulateDirectionalDispatches$1","getParent$1","traverseTwoPhase$1","skipBubbling","accumulateTwoPhaseDispatchesSingle$1","accumulateTwoPhaseDispatches$1","accumulateCapturePhaseDispatches","accumulateDispatches$1","accumulateDirectDispatchesSingle$1","accumulateDirectDispatches$1","ReactNativeBridgeEventPlugin","bubbleDispatchConfig","directDispatchConfig","ReactNativeEventPluginOrder","instanceCache","Map","instanceProps","precacheFiberNode","hostInst","uncacheFiberNode","delete","getInstanceFromTag","getTagFromInstance","nativeInstance","_nativeTag","getFiberCurrentPropsFromNode$1","updateFiberProps","batchedUpdatesImpl","bookkeeping","isInsideEventHandler","batchedUpdates","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","eventQueue","executeDispatchesAndRelease","executeDispatchesAndReleaseTopLevel","runEventsInBatch","processingEventQueue","EMPTY_NATIVE_EVENT","touchSubsequence","indices","removeTouchesAtIndices","rippedOut","temp","index","fillAt","j","cur","_receiveRootNodeIDEvent","rootNodeID","nativeEventParam","runExtractedPluginEventsInBatch","extractPluginEvents","legacyPlugins","possiblePlugin","extractedEvents","receiveEvent","receiveTouches","eventTopLevelType","changedIndices","jj","ReactNativeGlobalResponderHandler","from","to","blockNativeResponder","UIManager","setJSResponder","clearJSResponder","RCTEventEmitter","register","key","_reactInternals","value","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","warnAboutStringRefs","enableSuspenseAvoidThisFallback","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getWrappedName$1","getContextName$1","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","nextNode","flags","isFiberMounted","isMounted","component","owner","ownerFiber","_warnedAboutRefsInRender","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","_child","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","updatePayload","validAttributes","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedArrayProperty","prevArray","nextArray","minLength","diffNestedProperty","clearNestedProperty","addNestedProperty","diffProperties","flattenStyle","addProperties","clearProperties","prevProps","nextProps","shouldUpdate","_nextValue","_propKey","create","mountSafeCallback_NOT_REALLY_SAFE","__isMounted","warnForStyleProps","style","ReactNativeFiberHostComponent","viewConfig","internalInstanceHandleDEV","_children","_internalFiberInstanceHandleDEV","_proto","blur","TextInputState","blurTextInput","focus","focusTextInput","measure","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","relativeNode","nativeNode","setNativeProps","nativeProps","updateView","uiViewClassName","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","unstable_now","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","IdlePriority","unstable_IdlePriority","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","schedulerPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","log","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","has","clear","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","errorHydratingContainer","getViewConfigForType","UPDATE_SIGNAL","freeze","nextReactTag","allocateTag","recursivelyUncacheFiberNode","appendInitialChild","parentInstance","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","deepFreezeAndThrowOnMutationInDev","createView","createTextInstance","text","isInAParentText","finalizeInitialChildren","nativeTags","setChildren","getRootHostContext","getChildHostContext","parentHostContext","prevIsInAParentText","getPublicInstance","prepareForCommit","containerInfo","prepareUpdate","oldProps","newProps","resetAfterCommit","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","getCurrentEventPriority","appendChild","childTag","splice","manageChildren","appendChildToContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayloadTODO","insertBefore","beforeChild","beforeChildIndex","_beforeChildIndex","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","hideInstance","display","hideTextInstance","unhideInstance","clearContainer","container","unhideTextInstance","preparePortalMount","portalInstance","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","ownerName","describeComponentFrame","componentFrameCache","PossiblyWeakMap","WeakMap","BEFORE_SLASH_RE","sourceInfo","fileName","test","pathBeforeSlash","folderName","lineNumber","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","bind","typeSpecName","error$1","ex","message","valueStack","fiberStack","createCursor","defaultValue","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","is","y","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","isRootDehydrated","currentState","memoizedState","isDehydrated","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","didSuspendOrErrorDEV","hydrationErrors","didSuspendOrErrorWhileHydratingDEV","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","treeContext","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","popHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","info","ReactDebugCurrentFrame$1","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","_sortedNames","_sortedNames2","_sortedNames3","_sortedNames4","_sortedNames5","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","typeName","hasToStringTag","toStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","checkPropStringCoercion","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","_currentValue","_currentRenderer","popProvider","currentValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","parentSuspense","_alternate","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","interleavedQueues","pushInterleavedQueue","hasInterleavedUpdates","enqueueInterleavedUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isInterleavedUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","enumerable","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","_state","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","_matchedFiber","_matchedFiber2","_matchedFiber3","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","_newChildren","_step","done","step","_newFiber3","_newFiber4","reconcileSingleTextNode","reconcileSingleElement","_existing","_created4","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionPrimary","ReactCurrentDispatcher$1","ReactCurrentBatchConfig$1","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","destroy","firstEffect","mountRef","initialValue","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","refObject","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","previousPriority","prevTransition","currentTransition","_updatedFibers","updatedFibersCount","mountTransition","_mountState","isPending","start","updateTransition","_updateState","rerenderTransition","_rerenderState","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","enqueueUpdate$1","entangleTransitionUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValue","ReactFiberErrorDialog","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","sourceFiber","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","_update","getSuspendedCache","ReactCurrentOwner$1","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_type","_innerPropTypes","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","_nextState","_nextState2","subtreeRenderLanes","_subtreeRenderLanes","updateMode","updateProfiler","markRef","updateClassComponent","shouldError","_instance","tempInstance","hasContext","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","updateHostComponent","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","_componentName2","warningKey","debugSource","_componentName3","_componentName4","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","mountSuspensePrimaryChildren","_dehydrated","updateDehydratedSuspenseComponent","_nextFallbackChildren","_nextPrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","_primaryChildFragment2","_nextPrimaryChildren2","_primaryChildFragment3","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","recoverableError","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","_getSuspenseInstanceF","errorMessage","attemptHydrationAtLane","retry","retryDehydratedSuspenseBoundary","_primaryChildFragment4","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","_i","initSuspenseListRenderState","isBackwards","tail","renderState","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","_tail","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","_hasChildWork","beginWork","_debugNeedsRemount","unresolvedProps","_Component","_unresolvedProps","_resolvedProps","_unresolvedProps2","_resolvedProps2","_type2","_unresolvedProps3","_resolvedProps3","_Component2","_unresolvedProps4","_resolvedProps4","markUpdate","markRef$1","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","_treeBaseDuration","_child2","_child3","completeDehydratedSuspenseBoundary","wasHydrated","isTimedOutSuspense","_isTimedOutSuspense","_primaryChildFragment","completeWork","fiberRoot","_wasHydrated","_rootContainerInstance","_currentHostContext","_wasHydrated2","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","_offscreenFiber2","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","previousSibling","popRenderLanes","nextIsHidden","_prevState","prevIsHidden","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","setIsRunningInsertionEffect","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","outer","commitLayoutEffectOnFiber","committedLanes","_updateQueue","_instance2","_finishedWork$memoize2","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitAttachRef","hideOrUnhideAllChildren","hostSubtreeRoot","_instance3","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","before","insertOrAppendPlacementNode","_parent","_before","insertOrAppendPlacementNodeIntoContainer","isHost","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","prevHostParent","prevHostParentIsContainer","_prevHostParent","_prevHostParentIsContainer","_effect","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","prevDebugFiber","commitReconciliationEffects","_instance4","offscreenFiber","wasHidden","markCommitTimeOfFallback","_wasHidden","_newState","_isHidden","offscreenBoundary","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","jestIsDefined","jest","isConcurrentActEnvironment","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$2","ReactCurrentActQueue$1","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","markUpdateLaneFromFiberToRoot","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","isBatchingLegacy","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","callbackNode","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","scheduleCallback$1","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","_msUntilTimeout","jnd","checks","renderedValue","batchedUpdates$1","prevExecutionContext","flushSync","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onRecoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","_fiber","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","primaryChildInstance","content","pendingChildren","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","_initialState","cache","pendingSuspenseBoundaries","ReactVersion","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstanceWithWarning","methodName","hostFiber","createContainer","current$1","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","reconcilerVersion","emptyObject$1","createHierarchy","getHostNode","getHostProps","lastNonHostInstance","getOwnerHierarchy","traverseOwnerTreeUp","fiberHierarchy","getInspectorData","findNodeHandle","shadowNode","nativeFabricUIManager","hostNode","host","exports","getInspectorDataForInstance","closestInstance","hierarchy","selectedIndex","getInspectorDataForViewTag","getInspectorDataForViewAtPoint","viewTag","inspectedView","locationX","locationY","_internalInstanceHandle","findNodeAtPoint","pointerY","frame","left","top","width","height","nativeViewTag","inspectorData","touchedViewTag","findSubviewIn","ReactCurrentOwner$3","findHostInstance_DEPRECATED","componentOrHandle","dispatchCommand","handle","command","dispatchViewManagerCommand","sendAccessibilityEvent","eventType","legacySendAccessibilityEvent","containerTag","roots","unmountComponentAtNode","unmountComponentAtNodeAndRemoveContainer","removeRootView","createPortal$1","computeComponentStackForErrorReporting","reactTag","Internals","unstable_batchedUpdates","registerInternalModuleStop"],"sources":["C:/Users/salah/Documents/Exchange of holiday apartments/Coding/Final_Project/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n * @nolint\n * @providesModule ReactNativeRenderer-dev\n * @preventMunge\n * @generated SignedSource<<8a3af3b821da6ecad0d3cd1faee60e8f>>\n */\n\n'use strict';\n\nif (__DEV__) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          \"use strict\";\n\nvar React = require(\"react\");\nrequire(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\nvar ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\nvar Scheduler = require(\"scheduler\");\n\nvar ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (\n        var _len = arguments.length,\n          args = new Array(_len > 1 ? _len - 1 : 0),\n          _key = 1;\n        _key < _len;\n        _key++\n      ) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning(\"warn\", format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (\n        var _len2 = arguments.length,\n          args = new Array(_len2 > 1 ? _len2 - 1 : 0),\n          _key2 = 1;\n        _key2 < _len2;\n        _key2++\n      ) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning(\"error\", format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== \"\") {\n      format += \"%s\";\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n    var argsWithFormat = args.map(function(item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== \"undefined\" &&\n    typeof window.dispatchEvent === \"function\" &&\n    typeof document !== \"undefined\" &&\n    typeof document.createEvent === \"function\"\n  ) {\n    var fakeNode = document.createElement(\"react\");\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(\n      name,\n      func,\n      context,\n      a,\n      b,\n      c,\n      d,\n      e,\n      f\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === \"undefined\" || document === null) {\n        throw new Error(\n          \"The `document` global was defined when React was initialized, but is not \" +\n            \"defined anymore. This can happen in a test environment if a component \" +\n            \"schedules an update from an asynchronous callback, but the test has already \" +\n            \"finished running. To solve this, you can either unmount the component at \" +\n            \"the end of your test (and ensure that any asynchronous operations get \" +\n            \"canceled in `componentWillUnmount`), or you can change the test itself \" +\n            \"to be asynchronous.\"\n        );\n      }\n\n      var evt = document.createEvent(\"Event\");\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        \"event\"\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (\n          typeof window.event !== \"undefined\" &&\n          window.hasOwnProperty(\"event\")\n        ) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === \"object\") {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n      var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\"); // Attach our event handlers\n\n      window.addEventListener(\"error\", handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, \"event\", windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"An error was thrown inside one of your components, but React \" +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              \"your browser. Try triggering the error in production mode, \" +\n              \"or switching to a modern browser. If you suspect that this is \" +\n              \"actually an issue with React, please file an issue.\"\n          );\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              \"the actual error object in development. \" +\n              \"See https://reactjs.org/link/crossorigin-error for more information.\"\n          );\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n      window.removeEventListener(\"error\", handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\n\nvar hasRethrowError = false;\nvar rethrowError = null;\nvar reporter = {\n  onError: function(error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallbackAndCatchFirstError(\n  name,\n  func,\n  context,\n  a,\n  b,\n  c,\n  d,\n  e,\n  f\n) {\n  invokeGuardedCallback.apply(this, arguments);\n\n  if (hasError) {\n    var error = clearCaughtError();\n\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\n\nfunction rethrowCaughtError() {\n  if (hasRethrowError) {\n    var error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\nfunction hasCaughtError() {\n  return hasError;\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error(\n      \"clearCaughtError was called but no error was captured. This error \" +\n        \"is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\nvar getFiberCurrentPropsFromNode = null;\nvar getInstanceFromNode = null;\nvar getNodeFromInstance = null;\nfunction setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n\n  {\n    if (!getNodeFromInstance || !getInstanceFromNode) {\n      error(\n        \"EventPluginUtils.setComponentTree(...): Injected \" +\n          \"module is missing getNodeFromInstance or getInstanceFromNode.\"\n      );\n    }\n  }\n}\nvar validateEventDispatches;\n\n{\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n    var listenersIsArr = isArray(dispatchListeners);\n    var listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n      ? 1\n      : 0;\n    var instancesIsArr = isArray(dispatchInstances);\n    var instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n      ? 1\n      : 0;\n\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n      error(\"EventPluginUtils: Invalid `event`.\");\n    }\n  };\n}\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\n\nfunction executeDispatch(event, listener, inst) {\n  var type = event.type || \"unknown-event\";\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\nfunction executeDispatchesInOrder(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  {\n    validateEventDispatches(event);\n  }\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\n\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n\n  {\n    validateEventDispatches(event);\n  }\n\n  if (isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and Instances are two parallel arrays that are always in sync.\n\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n\n  return null;\n}\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\n\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\n\nfunction executeDirectDispatch(event) {\n  {\n    validateEventDispatches(event);\n  }\n\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n\n  if (isArray(dispatchListener)) {\n    throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n  }\n\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\n\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\nvar assign = Object.assign;\n\nvar EVENT_POOL_SIZE = 10;\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\n\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  this._dispatchListeners = null;\n  this._dispatchInstances = null;\n  var Interface = this.constructor.Interface;\n\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n\n    {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n\n    var normalize = Interface[propName];\n\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === \"target\") {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nassign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== \"unknown\") {\n      event.returnValue = false;\n    }\n\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== \"unknown\") {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n\n    for (var propName in Interface) {\n      {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName])\n        );\n      }\n    }\n\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n\n    {\n      Object.defineProperty(\n        this,\n        \"nativeEvent\",\n        getPooledWarningPropertyDefinition(\"nativeEvent\", null)\n      );\n      Object.defineProperty(\n        this,\n        \"isDefaultPrevented\",\n        getPooledWarningPropertyDefinition(\n          \"isDefaultPrevented\",\n          functionThatReturnsFalse\n        )\n      );\n      Object.defineProperty(\n        this,\n        \"isPropagationStopped\",\n        getPooledWarningPropertyDefinition(\n          \"isPropagationStopped\",\n          functionThatReturnsFalse\n        )\n      );\n      Object.defineProperty(\n        this,\n        \"preventDefault\",\n        getPooledWarningPropertyDefinition(\"preventDefault\", function() {})\n      );\n      Object.defineProperty(\n        this,\n        \"stopPropagation\",\n        getPooledWarningPropertyDefinition(\"stopPropagation\", function() {})\n      );\n    }\n  }\n});\nSyntheticEvent.Interface = EventInterface;\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\n\nSyntheticEvent.extend = function(Interface) {\n  var Super = this;\n\n  var E = function() {};\n\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\n\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  function set(val) {\n    var action = isFunction ? \"setting the method\" : \"setting the property\";\n    warn(action, \"This is effectively a no-op\");\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n    var result = isFunction\n      ? \"This is a no-op function\"\n      : \"This is set to null\";\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    {\n      error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          \"If you must keep the original synthetic event around, use event.persist(). \" +\n          \"See https://reactjs.org/link/event-pooling for more information.\",\n        action,\n        propName,\n        result\n      );\n    }\n  }\n\n  var isFunction = typeof getVal === \"function\";\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n}\n\nfunction createOrGetPooledEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeInst\n) {\n  var EventConstructor = this;\n\n  if (EventConstructor.eventPool.length) {\n    var instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst\n    );\n    return instance;\n  }\n\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst\n  );\n}\n\nfunction releasePooledEvent(event) {\n  var EventConstructor = this;\n\n  if (!(event instanceof EventConstructor)) {\n    throw new Error(\n      \"Trying to release an event instance into a pool of a different type.\"\n    );\n  }\n\n  event.destructor();\n\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.getPooled = createOrGetPooledEvent;\n  EventConstructor.eventPool = [];\n  EventConstructor.release = releasePooledEvent;\n}\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\n\nvar ResponderSyntheticEvent = SyntheticEvent.extend({\n  touchHistory: function(nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  }\n});\n\nvar TOP_TOUCH_START = \"topTouchStart\";\nvar TOP_TOUCH_MOVE = \"topTouchMove\";\nvar TOP_TOUCH_END = \"topTouchEnd\";\nvar TOP_TOUCH_CANCEL = \"topTouchCancel\";\nvar TOP_SCROLL = \"topScroll\";\nvar TOP_SELECTION_CHANGE = \"topSelectionChange\";\nfunction isStartish(topLevelType) {\n  return topLevelType === TOP_TOUCH_START;\n}\nfunction isMoveish(topLevelType) {\n  return topLevelType === TOP_TOUCH_MOVE;\n}\nfunction isEndish(topLevelType) {\n  return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n}\nvar startDependencies = [TOP_TOUCH_START];\nvar moveDependencies = [TOP_TOUCH_MOVE];\nvar endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\n\nvar MAX_TOUCH_BANK = 20;\nvar touchBank = [];\nvar touchHistory = {\n  touchBank: touchBank,\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0\n};\n\nfunction timestampForTouch(touch) {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return touch.timeStamp || touch.timestamp;\n}\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\n\nfunction createTouchRecord(touch) {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch)\n  };\n}\n\nfunction resetTouchRecord(touchRecord, touch) {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier(_ref) {\n  var identifier = _ref.identifier;\n\n  if (identifier == null) {\n    throw new Error(\"Touch object is missing identifier.\");\n  }\n\n  {\n    if (identifier > MAX_TOUCH_BANK) {\n      error(\n        \"Touch identifier %s is greater than maximum supported %s which causes \" +\n          \"performance issues backfilling array locations for all of the indices.\",\n        identifier,\n        MAX_TOUCH_BANK\n      );\n    }\n  }\n\n  return identifier;\n}\n\nfunction recordTouchStart(touch) {\n  var identifier = getTouchIdentifier(touch);\n  var touchRecord = touchBank[identifier];\n\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchBank[identifier] = createTouchRecord(touch);\n  }\n\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    {\n      warn(\n        \"Cannot record touch move without a touch start.\\n\" +\n          \"Touch Move: %s\\n\" +\n          \"Touch Bank: %s\",\n        printTouch(touch),\n        printTouchBank()\n      );\n    }\n  }\n}\n\nfunction recordTouchEnd(touch) {\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    {\n      warn(\n        \"Cannot record touch end without a touch start.\\n\" +\n          \"Touch End: %s\\n\" +\n          \"Touch Bank: %s\",\n        printTouch(touch),\n        printTouchBank()\n      );\n    }\n  }\n}\n\nfunction printTouch(touch) {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch)\n  });\n}\n\nfunction printTouchBank() {\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += \" (original size: \" + touchBank.length + \")\";\n  }\n\n  return printed;\n}\n\nvar instrumentationCallback;\nvar ResponderTouchHistoryStore = {\n  /**\n   * Registers a listener which can be used to instrument every touch event.\n   */\n  instrument: function(callback) {\n    instrumentationCallback = callback;\n  },\n  recordTouchTrack: function(topLevelType, nativeEvent) {\n    if (instrumentationCallback != null) {\n      instrumentationCallback(topLevelType, nativeEvent);\n    }\n\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchMove);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchStart);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch =\n          nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        for (var i = 0; i < touchBank.length; i++) {\n          var touchTrackToCheck = touchBank[i];\n\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n\n        {\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n\n          if (activeRecord == null || !activeRecord.touchActive) {\n            error(\"Cannot find single active touch.\");\n          }\n        }\n      }\n    }\n  },\n  touchHistory: touchHistory\n};\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulate(current, next) {\n  if (next == null) {\n    throw new Error(\n      \"accumulate(...): Accumulated items must not be null or undefined.\"\n    );\n  }\n\n  if (current == null) {\n    return next;\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n\n  if (isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  if (next == null) {\n    throw new Error(\n      \"accumulateInto(...): Accumulated items must not be null or undefined.\"\n    );\n  }\n\n  if (current == null) {\n    return next;\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n\n  if (isArray(current)) {\n    if (isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n\n    current.push(next);\n    return current;\n  }\n\n  if (isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedFragment = 18;\nvar SuspenseListComponent = 19;\nvar ScopeComponent = 21;\nvar OffscreenComponent = 22;\nvar LegacyHiddenComponent = 23;\nvar CacheComponent = 24;\nvar TracingMarkerComponent = 25;\n\n/**\n * Instance of element that should respond to touch/move types of interactions,\n * as indicated explicitly by relevant callbacks.\n */\n\nvar responderInst = null;\n/**\n * Count of current touches. A textInput should become responder iff the\n * selection changes while there is a touch on the screen.\n */\n\nvar trackedTouchCount = 0;\n\nvar changeResponder = function(nextResponderInst, blockHostResponder) {\n  var oldResponderInst = responderInst;\n  responderInst = nextResponderInst;\n\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(\n      oldResponderInst,\n      nextResponderInst,\n      blockHostResponder\n    );\n  }\n};\n\nvar eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onStartShouldSetResponder\",\n      captured: \"onStartShouldSetResponderCapture\"\n    },\n    dependencies: startDependencies\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onScrollShouldSetResponder\",\n      captured: \"onScrollShouldSetResponderCapture\"\n    },\n    dependencies: [TOP_SCROLL]\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelectionChangeShouldSetResponder\",\n      captured: \"onSelectionChangeShouldSetResponderCapture\"\n    },\n    dependencies: [TOP_SELECTION_CHANGE]\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: \"onMoveShouldSetResponder\",\n      captured: \"onMoveShouldSetResponderCapture\"\n    },\n    dependencies: moveDependencies\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: {\n    registrationName: \"onResponderStart\",\n    dependencies: startDependencies\n  },\n  responderMove: {\n    registrationName: \"onResponderMove\",\n    dependencies: moveDependencies\n  },\n  responderEnd: {\n    registrationName: \"onResponderEnd\",\n    dependencies: endDependencies\n  },\n  responderRelease: {\n    registrationName: \"onResponderRelease\",\n    dependencies: endDependencies\n  },\n  responderTerminationRequest: {\n    registrationName: \"onResponderTerminationRequest\",\n    dependencies: []\n  },\n  responderGrant: {\n    registrationName: \"onResponderGrant\",\n    dependencies: []\n  },\n  responderReject: {\n    registrationName: \"onResponderReject\",\n    dependencies: []\n  },\n  responderTerminate: {\n    registrationName: \"onResponderTerminate\",\n    dependencies: []\n  }\n}; // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\n\nfunction getLowestCommonAncestor(instA, instB) {\n  var depthA = 0;\n\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n\n  var depthB = 0;\n\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  } // If A is deeper, crawl up.\n\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  } // If B is deeper, crawl up.\n\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  } // Walk in lockstep until we find a match.\n\n  var depth = depthA;\n\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n\n  return null;\n}\n/**\n * Return if A is an ancestor of B.\n */\n\nfunction isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n\n    instB = getParent(instB);\n  }\n\n  return false;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], \"captured\", arg);\n  }\n\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], \"bubbled\", arg);\n  }\n}\n\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (listener && typeof listener !== \"function\") {\n    throw new Error(\n      \"Expected `\" +\n        registrationName +\n        \"` listener to be a function, instead got a value of `\" +\n        typeof listener +\n        \"` type.\"\n    );\n  }\n\n  return listener;\n}\n\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  {\n    if (!inst) {\n      error(\"Dispatching inst must not be null\");\n    }\n  }\n\n  var listener = listenerAtPhase(inst, event, phase);\n\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\n\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\n\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? getParent(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n} // End of inline\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occurring, the responder lock can be transferred to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderInst`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendants of the\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginRegistry`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginRegistry` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginRegistry` dispatches as usual)\n * - `touchStart`              (`EventPluginRegistry` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginRegistry` dispatches as usual)\n */\n\nfunction setResponderAndExtractTransfer(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var shouldSetEventType = isStartish(topLevelType)\n    ? eventTypes.startShouldSetResponder\n    : isMoveish(topLevelType)\n    ? eventTypes.moveShouldSetResponder\n    : topLevelType === TOP_SELECTION_CHANGE\n    ? eventTypes.selectionChangeShouldSetResponder\n    : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.\n\n  var bubbleShouldSetFrom = !responderInst\n    ? targetInst\n    : getLowestCommonAncestor(responderInst, targetInst); // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(\n    shouldSetEventType,\n    bubbleShouldSetFrom,\n    nativeEvent,\n    nativeEventTarget\n  );\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  if (skipOverBubbleShouldSetFrom) {\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n\n  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\n    return null;\n  }\n\n  var extracted;\n  var grantEvent = ResponderSyntheticEvent.getPooled(\n    eventTypes.responderGrant,\n    wantsResponderInst,\n    nativeEvent,\n    nativeEventTarget\n  );\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  accumulateDirectDispatches(grantEvent);\n  var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n\n  if (responderInst) {\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(\n      eventTypes.responderTerminationRequest,\n      responderInst,\n      nativeEvent,\n      nativeEventTarget\n    );\n    terminationRequestEvent.touchHistory =\n      ResponderTouchHistoryStore.touchHistory;\n    accumulateDirectDispatches(terminationRequestEvent);\n    var shouldSwitch =\n      !hasDispatches(terminationRequestEvent) ||\n      executeDirectDispatch(terminationRequestEvent);\n\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      var terminateEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderTerminate,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderInst, blockHostResponder);\n    } else {\n      var rejectEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderReject,\n        wantsResponderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderInst, blockHostResponder);\n  }\n\n  return extracted;\n}\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderInst. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `BrowserEventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\n\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n  return (\n    topLevelInst && // responderIgnoreScroll: We are trying to migrate away from specifically\n    // tracking native scroll events here and responderIgnoreScroll indicates we\n    // will send topTouchCancel to handle canceling touch events instead\n    ((topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll) ||\n      (trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE) ||\n      isStartish(topLevelType) ||\n      isMoveish(topLevelType))\n  );\n}\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderInst`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\n\nfunction noResponderTouches(nativeEvent) {\n  var touches = nativeEvent.touches;\n\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n\n  for (var i = 0; i < touches.length; i++) {\n    var activeTouch = touches[i];\n    var target = activeTouch.target;\n\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      var targetInst = getInstanceFromNode(target);\n\n      if (isAncestor(responderInst, targetInst)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar ResponderEventPlugin = {\n  /* For unit testing only */\n  _getResponder: function() {\n    return responderInst;\n  },\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\n   * `touchEnd`. On certain platforms, this means that a native scroll has\n   * assumed control and the original touch targets are destroyed.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags\n  ) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      if (trackedTouchCount >= 0) {\n        trackedTouchCount -= 1;\n      } else {\n        {\n          warn(\n            \"Ended a touch event which was not counted in `trackedTouchCount`.\"\n          );\n        }\n\n        return null;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)\n      ? setResponderAndExtractTransfer(\n          topLevelType,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget\n        )\n      : null; // Responder may or may not have transferred on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n\n    var isResponderTouchStart = responderInst && isStartish(topLevelType);\n    var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n    var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n    var incrementalTouch = isResponderTouchStart\n      ? eventTypes.responderStart\n      : isResponderTouchMove\n      ? eventTypes.responderMove\n      : isResponderTouchEnd\n      ? eventTypes.responderEnd\n      : null;\n\n    if (incrementalTouch) {\n      var gesture = ResponderSyntheticEvent.getPooled(\n        incrementalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    var isResponderTerminate =\n      responderInst && topLevelType === TOP_TOUCH_CANCEL;\n    var isResponderRelease =\n      responderInst &&\n      !isResponderTerminate &&\n      isEndish(topLevelType) &&\n      noResponderTouches(nativeEvent);\n    var finalTouch = isResponderTerminate\n      ? eventTypes.responderTerminate\n      : isResponderRelease\n      ? eventTypes.responderRelease\n      : null;\n\n    if (finalTouch) {\n      var finalEvent = ResponderSyntheticEvent.getPooled(\n        finalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    return extracted;\n  },\n  GlobalResponderHandler: null,\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler: function(GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    }\n  }\n};\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n/**\n * Injectable mapping from names to event plugin modules.\n */\n\nvar namesToPlugins = {};\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\n\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n\n    if (pluginIndex <= -1) {\n      throw new Error(\n        \"EventPluginRegistry: Cannot inject event plugins that do not exist in \" +\n          (\"the plugin ordering, `\" + pluginName + \"`.\")\n      );\n    }\n\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n\n    if (!pluginModule.extractEvents) {\n      throw new Error(\n        \"EventPluginRegistry: Event plugins must implement an `extractEvents` \" +\n          (\"method, but `\" + pluginName + \"` does not.\")\n      );\n    }\n\n    plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n\n    for (var eventName in publishedEvents) {\n      if (\n        !publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName\n        )\n      ) {\n        throw new Error(\n          \"EventPluginRegistry: Failed to publish event `\" +\n            eventName +\n            \"` for plugin `\" +\n            pluginName +\n            \"`.\"\n        );\n      }\n    }\n  }\n}\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\n\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n    throw new Error(\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\n        (\"event name, `\" + eventName + \"`.\")\n    );\n  }\n\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName\n        );\n      }\n    }\n\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName\n    );\n    return true;\n  }\n\n  return false;\n}\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\n\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  if (registrationNameModules[registrationName]) {\n    throw new Error(\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\n        (\"registration name, `\" + registrationName + \"`.\")\n    );\n  }\n\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  {\n    var lowerCasedName = registrationName.toLowerCase();\n  }\n}\n/**\n * Registers plugins so that they can extract and dispatch events.\n */\n\n/**\n * Ordered list of injected plugins.\n */\n\nvar plugins = [];\n/**\n * Mapping from event name to dispatch config\n */\n\nvar eventNameDispatchConfigs = {};\n/**\n * Mapping from registration name to plugin module\n */\n\nvar registrationNameModules = {};\n/**\n * Mapping from registration name to event name\n */\n\nvar registrationNameDependencies = {};\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n */\n\nfunction injectEventPluginOrder(injectedEventPluginOrder) {\n  if (eventPluginOrder) {\n    throw new Error(\n      \"EventPluginRegistry: Cannot inject event plugin ordering more than \" +\n        \"once. You are likely trying to load more than one copy of React.\"\n    );\n  } // Clone the ordering so it cannot be dynamically mutated.\n\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n/**\n * Injects plugins to be used by plugin event system. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n */\n\nfunction injectEventPluginsByName(injectedNamesToPlugins) {\n  var isOrderingDirty = false;\n\n  for (var pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n\n    var pluginModule = injectedNamesToPlugins[pluginName];\n\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      if (namesToPlugins[pluginName]) {\n        throw new Error(\n          \"EventPluginRegistry: Cannot inject two different event plugins \" +\n            (\"using the same name, `\" + pluginName + \"`.\")\n        );\n      }\n\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n\n/**\n * Get a list of listeners for a specific event, in-order.\n * For React Native we treat the props-based function handlers\n * as the first-class citizens, and they are always executed first\n * for both capture and bubbling phase.\n *\n * We need \"phase\" propagated to this point to support the HostComponent\n * EventEmitter API, which does not mutate the name of the handler based\n * on phase (whereas prop handlers are registered as `onMyEvent` and `onMyEvent_Capture`).\n *\n * Native system events emitted into React Native\n * will be emitted both to the prop handler function and to imperative event\n * listeners.\n *\n * This will either return null, a single Function without an array, or\n * an array of 2+ items.\n */\n\nfunction getListeners(\n  inst,\n  registrationName,\n  phase,\n  dispatchToImperativeListeners\n) {\n  var stateNode = inst.stateNode;\n\n  if (stateNode === null) {\n    return null;\n  } // If null: Work in progress (ex: onload events in incremental mode).\n\n  var props = getFiberCurrentPropsFromNode(stateNode);\n\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n\n  var listener = props[registrationName];\n\n  if (listener && typeof listener !== \"function\") {\n    throw new Error(\n      \"Expected `\" +\n        registrationName +\n        \"` listener to be a function, instead got a value of `\" +\n        typeof listener +\n        \"` type.\"\n    );\n  } // If there are no imperative listeners, early exit.\n\n  if (\n    !(\n      dispatchToImperativeListeners &&\n      stateNode.canonical &&\n      stateNode.canonical._eventListeners\n    )\n  ) {\n    return listener;\n  } // Below this is the de-optimized path.\n  // If you are using _eventListeners, we do not (yet)\n  // expect this to be as performant as the props-only path.\n  // If/when this becomes a bottleneck, it can be refactored\n  // to avoid unnecessary closures and array allocations.\n  //\n  // Previously, there was only one possible listener for an event:\n  // the onEventName property in props.\n  // Now, it is also possible to have N listeners\n  // for a specific event on a node. Thus, we accumulate all of the listeners,\n  // including the props listener, and return a function that calls them all in\n  // order, starting with the handler prop and then the listeners in order.\n  // We return either a non-empty array or null.\n\n  var listeners = [];\n\n  if (listener) {\n    listeners.push(listener);\n  } // TODO: for now, all of these events get an `rn:` prefix to enforce\n  // that the user knows they're only getting non-W3C-compliant events\n  // through this imperative event API.\n  // Events might not necessarily be noncompliant, but we currently have\n  // no verification that /any/ events are compliant.\n  // Thus, we prefix to ensure no collision with W3C event names.\n\n  var requestedPhaseIsCapture = phase === \"captured\";\n  var mangledImperativeRegistrationName = requestedPhaseIsCapture\n    ? \"rn:\" + registrationName.replace(/Capture$/, \"\")\n    : \"rn:\" + registrationName; // Get imperative event listeners for this event\n\n  if (\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName] &&\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName]\n      .length > 0\n  ) {\n    var eventListeners =\n      stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n    eventListeners.forEach(function(listenerObj) {\n      // Make sure phase of listener matches requested phase\n      var isCaptureEvent =\n        listenerObj.options.capture != null && listenerObj.options.capture;\n\n      if (isCaptureEvent !== requestedPhaseIsCapture) {\n        return;\n      } // For now (this is an area of future optimization) we must wrap\n      // all imperative event listeners in a function to unwrap the SyntheticEvent\n      // and pass them an Event.\n      // When this API is more stable and used more frequently, we can revisit.\n\n      var listenerFnWrapper = function(syntheticEvent) {\n        var eventInst = new ReactNativePrivateInterface.CustomEvent(\n          mangledImperativeRegistrationName,\n          {\n            detail: syntheticEvent.nativeEvent\n          }\n        );\n        eventInst.isTrusted = true; // setSyntheticEvent is present on the React Native Event shim.\n        // It is used to forward method calls on Event to the underlying SyntheticEvent.\n        // $FlowFixMe\n\n        eventInst.setSyntheticEvent(syntheticEvent);\n\n        for (\n          var _len = arguments.length,\n            args = new Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n      }; // Only call once?\n      // If so, we ensure that it's only called once by setting a flag\n      // and by removing it from eventListeners once it is called (but only\n      // when it's actually been executed).\n\n      if (listenerObj.options.once) {\n        listeners.push(function() {\n          // Remove from the event listener once it's been called\n          stateNode.canonical.removeEventListener_unstable(\n            mangledImperativeRegistrationName,\n            listenerObj.listener,\n            listenerObj.capture\n          ); // Guard against function being called more than once in\n          // case there are somehow multiple in-flight references to\n          // it being processed\n\n          if (!listenerObj.invalidated) {\n            listenerObj.invalidated = true;\n            listenerObj.listener.apply(listenerObj, arguments);\n          }\n        });\n      } else {\n        listeners.push(listenerFnWrapper);\n      }\n    });\n  }\n\n  if (listeners.length === 0) {\n    return null;\n  }\n\n  if (listeners.length === 1) {\n    return listeners[0];\n  }\n\n  return listeners;\n}\n\nvar customBubblingEventTypes =\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\n      .customBubblingEventTypes,\n  customDirectEventTypes =\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\n      .customDirectEventTypes; // Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction listenersAtPhase(inst, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListeners(inst, registrationName, propagationPhase, true);\n}\n\nfunction accumulateListenersAndInstances(inst, event, listeners) {\n  var listenersLength = listeners\n    ? isArray(listeners)\n      ? listeners.length\n      : 1\n    : 0;\n\n  if (listenersLength > 0) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listeners\n    ); // Avoid allocating additional arrays here\n\n    if (event._dispatchInstances == null && listenersLength === 1) {\n      event._dispatchInstances = inst;\n    } else {\n      event._dispatchInstances = event._dispatchInstances || [];\n\n      if (!isArray(event._dispatchInstances)) {\n        event._dispatchInstances = [event._dispatchInstances];\n      }\n\n      for (var i = 0; i < listenersLength; i++) {\n        event._dispatchInstances.push(inst);\n      }\n    }\n  }\n}\n\nfunction accumulateDirectionalDispatches$1(inst, phase, event) {\n  {\n    if (!inst) {\n      error(\"Dispatching inst must not be null\");\n    }\n  }\n\n  var listeners = listenersAtPhase(inst, event, phase);\n  accumulateListenersAndInstances(inst, event, listeners);\n}\n\nfunction getParent$1(inst) {\n  do {\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n\n  if (inst) {\n    return inst;\n  }\n\n  return null;\n}\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\n\nfunction traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n  var path = [];\n\n  while (inst) {\n    path.push(inst);\n    inst = getParent$1(inst);\n  }\n\n  var i;\n\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], \"captured\", arg);\n  }\n\n  if (skipBubbling) {\n    // Dispatch on target only\n    fn(path[0], \"bubbled\", arg);\n  } else {\n    for (i = 0; i < path.length; i++) {\n      fn(path[i], \"bubbled\", arg);\n    }\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSingle$1(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase$1(\n      event._targetInst,\n      accumulateDirectionalDispatches$1,\n      event,\n      false\n    );\n  }\n}\n\nfunction accumulateTwoPhaseDispatches$1(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n}\n\nfunction accumulateCapturePhaseDispatches(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase$1(\n      event._targetInst,\n      accumulateDirectionalDispatches$1,\n      event,\n      true\n    );\n  }\n}\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\n\nfunction accumulateDispatches$1(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n    accumulateListenersAndInstances(inst, event, listeners);\n  }\n}\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\n\nfunction accumulateDirectDispatchesSingle$1(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches$1(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches$1(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n} // End of inline\n\nvar ReactNativeBridgeEventPlugin = {\n  eventTypes: {},\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    if (targetInst == null) {\n      // Probably a node belonging to another renderer's tree.\n      return null;\n    }\n\n    var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n    var directDispatchConfig = customDirectEventTypes[topLevelType];\n\n    if (!bubbleDispatchConfig && !directDispatchConfig) {\n      throw new Error( // $FlowFixMe - Flow doesn't like this string coercion because DOMTopLevelEventType is opaque\n        'Unsupported top level event type \"' + topLevelType + '\" dispatched'\n      );\n    }\n\n    var event = SyntheticEvent.getPooled(\n      bubbleDispatchConfig || directDispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget\n    );\n\n    if (bubbleDispatchConfig) {\n      var skipBubbling =\n        event != null &&\n        event.dispatchConfig.phasedRegistrationNames != null &&\n        event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n\n      if (skipBubbling) {\n        accumulateCapturePhaseDispatches(event);\n      } else {\n        accumulateTwoPhaseDispatches$1(event);\n      }\n    } else if (directDispatchConfig) {\n      accumulateDirectDispatches$1(event);\n    } else {\n      return null;\n    }\n\n    return event;\n  }\n};\n\nvar ReactNativeEventPluginOrder = [\n  \"ResponderEventPlugin\",\n  \"ReactNativeBridgeEventPlugin\"\n];\n\n/**\n * Make sure essential globals are available and are patched correctly. Please don't remove this\n * line. Bundles created by react-packager `require` it before executing any application code. This\n * ensures it exists in the dependency graph and can be `require`d.\n * TODO: require this in packager, not in React #10932517\n */\n/**\n * Inject module for resolving DOM hierarchy and plugin ordering.\n */\n\ninjectEventPluginOrder(ReactNativeEventPluginOrder);\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\n\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin,\n  ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n});\n\nvar instanceCache = new Map();\nvar instanceProps = new Map();\nfunction precacheFiberNode(hostInst, tag) {\n  instanceCache.set(tag, hostInst);\n}\nfunction uncacheFiberNode(tag) {\n  instanceCache.delete(tag);\n  instanceProps.delete(tag);\n}\n\nfunction getInstanceFromTag(tag) {\n  return instanceCache.get(tag) || null;\n}\n\nfunction getTagFromInstance(inst) {\n  var nativeInstance = inst.stateNode;\n  var tag = nativeInstance._nativeTag;\n\n  if (tag === undefined) {\n    nativeInstance = nativeInstance.canonical;\n    tag = nativeInstance._nativeTag;\n  }\n\n  if (!tag) {\n    throw new Error(\"All native instances should have a tag.\");\n  }\n\n  return nativeInstance;\n}\nfunction getFiberCurrentPropsFromNode$1(stateNode) {\n  return instanceProps.get(stateNode._nativeTag) || null;\n}\nfunction updateFiberProps(tag, props) {\n  instanceProps.set(tag, props);\n}\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n// Defaults\nvar batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\n\nvar isInsideEventHandler = false;\nfunction batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n\n  isInsideEventHandler = true;\n\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n  }\n}\nfunction setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n}\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\n\nvar eventQueue = null;\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\n\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\nvar executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nfunction runEventsInBatch(events) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  } // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n\n  var processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\n  if (eventQueue) {\n    throw new Error(\n      \"processEventQueue(): Additional events were enqueued while processing \" +\n        \"an event queue. Support for this has not yet been implemented.\"\n    );\n  } // This would be a good time to rethrow if any of the event handlers threw.\n\n  rethrowCaughtError();\n}\n\n/**\n * Version of `ReactBrowserEventEmitter` that works on the receiving side of a\n * serialized worker boundary.\n */\n// Shared default empty native event - conserve memory.\n\nvar EMPTY_NATIVE_EVENT = {};\n/**\n * Selects a subsequence of `Touch`es, without destroying `touches`.\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices by which to pull subsequence.\n * @return {Array<Touch>} Subsequence of touch objects.\n */\n\nvar touchSubsequence = function(touches, indices) {\n  var ret = [];\n\n  for (var i = 0; i < indices.length; i++) {\n    ret.push(touches[indices[i]]);\n  }\n\n  return ret;\n};\n/**\n * TODO: Pool all of this.\n *\n * Destroys `touches` by removing touch objects at indices `indices`. This is\n * to maintain compatibility with W3C touch \"end\" events, where the active\n * touches don't include the set that has just been \"ended\".\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices to remove from `touches`.\n * @return {Array<Touch>} Subsequence of removed touch objects.\n */\n\nvar removeTouchesAtIndices = function(touches, indices) {\n  var rippedOut = []; // use an unsafe downcast to alias to nullable elements,\n  // so we can delete and then compact.\n\n  var temp = touches;\n\n  for (var i = 0; i < indices.length; i++) {\n    var index = indices[i];\n    rippedOut.push(touches[index]);\n    temp[index] = null;\n  }\n\n  var fillAt = 0;\n\n  for (var j = 0; j < temp.length; j++) {\n    var cur = temp[j];\n\n    if (cur !== null) {\n      temp[fillAt++] = cur;\n    }\n  }\n\n  temp.length = fillAt;\n  return rippedOut;\n};\n/**\n * Internal version of `receiveEvent` in terms of normalized (non-tag)\n * `rootNodeID`.\n *\n * @see receiveEvent.\n *\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {?object} nativeEventParam Object passed from native.\n */\n\nfunction _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {\n  var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n  var inst = getInstanceFromTag(rootNodeID);\n  var target = null;\n\n  if (inst != null) {\n    target = inst.stateNode;\n  }\n\n  batchedUpdates(function() {\n    runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n  }); // React Native doesn't use ReactControlledComponent but if it did, here's\n  // where it would do it.\n}\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\n\nfunction extractPluginEvents(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var events = null;\n  var legacyPlugins = plugins;\n\n  for (var i = 0; i < legacyPlugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    var possiblePlugin = legacyPlugins[i];\n\n    if (possiblePlugin) {\n      var extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n\n  return events;\n}\n\nfunction runExtractedPluginEventsInBatch(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  var events = extractPluginEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  );\n  runEventsInBatch(events);\n}\n/**\n * Publicly exposed method on module for native objc to invoke when a top\n * level event is extracted.\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {object} nativeEventParam Object passed from native.\n */\n\nfunction receiveEvent(rootNodeID, topLevelType, nativeEventParam) {\n  _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n}\n/**\n * Simple multi-wrapper around `receiveEvent` that is intended to receive an\n * efficient representation of `Touch` objects, and other information that\n * can be used to construct W3C compliant `Event` and `Touch` lists.\n *\n * This may create dispatch behavior that differs than web touch handling. We\n * loop through each of the changed touches and receive it as a single event.\n * So two `touchStart`/`touchMove`s that occur simultaneously are received as\n * two separate touch event dispatches - when they arguably should be one.\n *\n * This implementation reuses the `Touch` objects themselves as the `Event`s\n * since we dispatch an event for each touch (though that might not be spec\n * compliant). The main purpose of reusing them is to save allocations.\n *\n * TODO: Dispatch multiple changed touches in one event. The bubble path\n * could be the first common ancestor of all the `changedTouches`.\n *\n * One difference between this behavior and W3C spec: cancelled touches will\n * not appear in `.touches`, or in any future `.touches`, though they may\n * still be \"actively touching the surface\".\n *\n * Web desktop polyfills only need to construct a fake touch event with\n * identifier 0, also abandoning traditional click handlers.\n */\n\nfunction receiveTouches(eventTopLevelType, touches, changedIndices) {\n  var changedTouches =\n    eventTopLevelType === \"topTouchEnd\" ||\n    eventTopLevelType === \"topTouchCancel\"\n      ? removeTouchesAtIndices(touches, changedIndices)\n      : touchSubsequence(touches, changedIndices);\n\n  for (var jj = 0; jj < changedTouches.length; jj++) {\n    var touch = changedTouches[jj]; // Touch objects can fulfill the role of `DOM` `Event` objects if we set\n    // the `changedTouches`/`touches`. This saves allocations.\n\n    touch.changedTouches = changedTouches;\n    touch.touches = touches;\n    var nativeEvent = touch;\n    var rootNodeID = null;\n    var target = nativeEvent.target;\n\n    if (target !== null && target !== undefined) {\n      if (target < 1) {\n        {\n          error(\"A view is reporting that a touch occurred on tag zero.\");\n        }\n      } else {\n        rootNodeID = target;\n      }\n    } // $FlowFixMe Shouldn't we *not* call it if rootNodeID is null?\n\n    _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n  }\n}\n\n// Module provided by RN:\nvar ReactNativeGlobalResponderHandler = {\n  onChange: function(from, to, blockNativeResponder) {\n    if (to !== null) {\n      var tag = to.stateNode._nativeTag;\n      ReactNativePrivateInterface.UIManager.setJSResponder(\n        tag,\n        blockNativeResponder\n      );\n    } else {\n      ReactNativePrivateInterface.UIManager.clearJSResponder();\n    }\n  }\n};\n\n/**\n * Register the event emitter with the native bridge\n */\n\nReactNativePrivateInterface.RCTEventEmitter.register({\n  receiveEvent: receiveEvent,\n  receiveTouches: receiveTouches\n});\nsetComponentTree(\n  getFiberCurrentPropsFromNode$1,\n  getInstanceFromTag,\n  getTagFromInstance\n);\nResponderEventPlugin.injection.injectGlobalResponderHandler(\n  ReactNativeGlobalResponderHandler\n);\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar enableSchedulingProfiler = false;\nvar enableProfilerTimer = true;\nvar enableProfilerCommitHooks = true;\nvar warnAboutStringRefs = false;\nvar enableSuspenseAvoidThisFallback = false;\nvar enableNewReconciler = false;\nvar enableLazyContextPropagation = false;\nvar enableLegacyHidden = false;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\nvar REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nvar REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nvar REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\nvar REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\nvar REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\nvar REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\nvar REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\nvar REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\nvar REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\nvar REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nvar REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\nvar REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\nvar REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = \"@@iterator\";\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n    return null;\n  }\n\n  var maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === \"function\") {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || \"\";\n  return functionName !== \"\"\n    ? wrapperName + \"(\" + functionName + \")\"\n    : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\nfunction getContextName(type) {\n  return type.displayName || \"Context\";\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === \"number\") {\n      error(\n        \"Received an unexpected object in getComponentNameFromType(). \" +\n          \"This is likely a bug in React. Please file an issue.\"\n      );\n    }\n  }\n\n  if (typeof type === \"function\") {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === \"string\") {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n\n  if (typeof type === \"object\") {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + \".Consumer\";\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + \".Provider\";\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, \"ForwardRef\");\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || \"Memo\";\n\n      case REACT_LAZY_TYPE: {\n        var lazyComponent = type;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || \"\";\n  return (\n    outerType.displayName ||\n    (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName)\n  );\n} // Keep in sync with shared/getComponentNameFromType\n\nfunction getContextName$1(type) {\n  return type.displayName || \"Context\";\n}\n\nfunction getComponentNameFromFiber(fiber) {\n  var tag = fiber.tag,\n    type = fiber.type;\n\n  switch (tag) {\n    case CacheComponent:\n      return \"Cache\";\n\n    case ContextConsumer:\n      var context = type;\n      return getContextName$1(context) + \".Consumer\";\n\n    case ContextProvider:\n      var provider = type;\n      return getContextName$1(provider._context) + \".Provider\";\n\n    case DehydratedFragment:\n      return \"DehydratedFragment\";\n\n    case ForwardRef:\n      return getWrappedName$1(type, type.render, \"ForwardRef\");\n\n    case Fragment:\n      return \"Fragment\";\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return \"Portal\";\n\n    case HostRoot:\n      return \"Root\";\n\n    case HostText:\n      return \"Text\";\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return \"StrictMode\";\n      }\n\n      return \"Mode\";\n\n    case OffscreenComponent:\n      return \"Offscreen\";\n\n    case Profiler:\n      return \"Profiler\";\n\n    case ScopeComponent:\n      return \"Scope\";\n\n    case SuspenseComponent:\n      return \"Suspense\";\n\n    case SuspenseListComponent:\n      return \"SuspenseList\";\n\n    case TracingMarkerComponent:\n      return \"TracingMarker\";\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === \"string\") {\n        return type;\n      }\n\n      break;\n  }\n\n  return null;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n  /*                      */\n  0;\nvar PerformedWork =\n  /*                */\n  1; // You can change the rest (and add more).\n\nvar Placement =\n  /*                    */\n  2;\nvar Update =\n  /*                       */\n  4;\nvar ChildDeletion =\n  /*                */\n  16;\nvar ContentReset =\n  /*                 */\n  32;\nvar Callback =\n  /*                     */\n  64;\nvar DidCapture =\n  /*                   */\n  128;\nvar ForceClientRender =\n  /*            */\n  256;\nvar Ref =\n  /*                          */\n  512;\nvar Snapshot =\n  /*                     */\n  1024;\nvar Passive =\n  /*                      */\n  2048;\nvar Hydrating =\n  /*                    */\n  4096;\nvar Visibility =\n  /*                   */\n  8192;\nvar StoreConsistency =\n  /*             */\n  16384;\nvar LifecycleEffectMask =\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\n\nvar HostEffectMask =\n  /*               */\n  32767; // These are not really side effects, but we still reuse this field.\n\nvar Incomplete =\n  /*                   */\n  32768;\nvar ShouldCapture =\n  /*                */\n  65536;\nvar ForceUpdateForLegacySuspense =\n  /* */\n  131072;\nvar Forked =\n  /*                       */\n  1048576; // Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\n\nvar RefStatic =\n  /*                    */\n  2097152;\nvar LayoutStatic =\n  /*                 */\n  4194304;\nvar PassiveStatic =\n  /*                */\n  8388608; // These flags allow us to traverse to fibers that have effects on mount\n// don't contain effects, by checking subtreeFlags.\n\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update | Snapshot | 0;\nvar MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\n\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\n\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n  return null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n\n      if (!instance._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing isMounted inside its render() function. \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromFiber(ownerFiber) || \"A component\"\n        );\n      }\n\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error(\"Unable to find node on an unmounted component.\");\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error(\"Unable to find node on an unmounted component.\");\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n      throw new Error(\"Unable to find node on an unmounted component.\");\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error(\n            \"Child was not found in either parent set. This indicates a bug \" +\n              \"in React related to the return pointer. Please file an issue.\"\n          );\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\n        \"Return fibers should always be each others' alternates. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n  if (a.tag !== HostRoot) {\n    throw new Error(\"Unable to find node on an unmounted component.\");\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    var match = findCurrentHostFiberImpl(child);\n\n    if (match !== null) {\n      return match;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\n// Modules provided by RN:\nvar emptyObject = {};\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\n// Tracks removed keys\nvar removedKeys = null;\nvar removedKeyCount = 0;\nvar deepDifferOptions = {\n  unsafelyIgnoreFunctions: true\n};\n\nfunction defaultDiffer(prevProp, nextProp) {\n  if (typeof nextProp !== \"object\" || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return ReactNativePrivateInterface.deepDiffer(\n      prevProp,\n      nextProp,\n      deepDifferOptions\n    );\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload,\n  node,\n  validAttributes\n) {\n  if (isArray(node)) {\n    var i = node.length;\n\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    var obj = node;\n\n    for (var propKey in removedKeys) {\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n\n      var nextProp = obj[propKey];\n\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      var attributeConfig = validAttributes[propKey];\n\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === \"function\") {\n        nextProp = true;\n      }\n\n      if (typeof nextProp === \"undefined\") {\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== \"object\") {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === \"function\" ||\n        typeof attributeConfig.process === \"function\"\n      ) {\n        // case: CustomAttributeConfiguration\n        var nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload,\n  prevArray,\n  nextArray,\n  validAttributes\n) {\n  var minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  var i;\n\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes\n    );\n  }\n\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes\n    );\n  }\n\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload,\n  prevProp,\n  nextProp,\n  validAttributes\n) {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp) && !isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (isArray(prevProp) && isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes\n    );\n  }\n\n  if (isArray(prevProp)) {\n    return diffProperties(\n      updatePayload, // $FlowFixMe - We know that this is always an object when the input is.\n      ReactNativePrivateInterface.flattenStyle(prevProp), // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp, // $FlowFixMe - We know that this is always an object when the input is.\n    ReactNativePrivateInterface.flattenStyle(nextProp),\n    validAttributes\n  );\n}\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\n\nfunction addNestedProperty(updatePayload, nextProp, validAttributes) {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (var i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\n\nfunction clearNestedProperty(updatePayload, prevProp, validAttributes) {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (var i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes\n    );\n  }\n\n  return updatePayload;\n}\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\n\nfunction diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n  var attributeConfig;\n  var nextProp;\n  var prevProp;\n\n  for (var propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey]; // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n\n    if (typeof nextProp === \"function\") {\n      nextProp = true; // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n\n      if (typeof prevProp === \"function\") {\n        prevProp = true;\n      }\n    } // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n\n    if (typeof nextProp === \"undefined\") {\n      nextProp = null;\n\n      if (typeof prevProp === \"undefined\") {\n        prevProp = null;\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== \"object\") {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === \"function\" ||\n        typeof attributeConfig.process === \"function\"\n      ) {\n        // case: CustomAttributeConfiguration\n        var nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    } // Pattern match on: attributeConfig\n\n    if (typeof attributeConfig !== \"object\") {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === \"function\" ||\n      typeof attributeConfig.process === \"function\"\n    ) {\n      // case: CustomAttributeConfiguration\n      var shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === \"function\"\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n\n      if (shouldUpdate) {\n        var _nextValue =\n          typeof attributeConfig.process === \"function\"\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n\n        (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0; // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        attributeConfig\n      );\n\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          attributeConfig\n        );\n        removedKeys = null;\n      }\n    }\n  } // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n\n  for (var _propKey in prevProps) {\n    if (nextProps[_propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n\n    attributeConfig = validAttributes[_propKey];\n\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[_propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[_propKey];\n\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    } // Pattern match on: attributeConfig\n\n    if (\n      typeof attributeConfig !== \"object\" ||\n      typeof attributeConfig.diff === \"function\" ||\n      typeof attributeConfig.process === \"function\"\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = {}))[_propKey] = null;\n\n      if (!removedKeys) {\n        removedKeys = {};\n      }\n\n      if (!removedKeys[_propKey]) {\n        removedKeys[_propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        attributeConfig\n      );\n    }\n  }\n\n  return updatePayload;\n}\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\n\nfunction addProperties(updatePayload, props, validAttributes) {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\n\nfunction clearProperties(updatePayload, prevProps, validAttributes) {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nfunction create(props, validAttributes) {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes\n  );\n}\nfunction diff(prevProps, nextProps, validAttributes) {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes\n  );\n}\n\n/**\n * In the future, we should cleanup callbacks by cancelling them instead of\n * using this.\n */\nfunction mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n  return function() {\n    if (!callback) {\n      return undefined;\n    } // This protects against createClass() components.\n    // We don't know if there is code depending on it.\n    // We intentionally don't use isMounted() because even accessing\n    // isMounted property on a React ES6 class will trigger a warning.\n\n    if (typeof context.__isMounted === \"boolean\") {\n      if (!context.__isMounted) {\n        return undefined;\n      }\n    } // FIXME: there used to be other branches that protected\n    // against unmounted host components. But RN host components don't\n    // define isMounted() anymore, so those checks didn't do anything.\n    // They caused false positive warning noise so we removed them:\n    // https://github.com/facebook/react-native/issues/18868#issuecomment-413579095\n    // However, this means that the callback is NOT guaranteed to be safe\n    // for host components. The solution we should implement is to make\n    // UIManager.measure() and similar calls truly cancelable. Then we\n    // can change our own code calling them to cancel when something unmounts.\n\n    return callback.apply(context, arguments);\n  };\n}\nfunction warnForStyleProps(props, validAttributes) {\n  {\n    for (var key in validAttributes.style) {\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        error(\n          \"You are setting the style `{ %s\" +\n            \": ... }` as a prop. You \" +\n            \"should nest it in a style object. \" +\n            \"E.g. `{ style: { %s\" +\n            \": ... } }`\",\n          key,\n          key\n        );\n      }\n    }\n  }\n}\n\nvar ReactNativeFiberHostComponent = /*#__PURE__*/ (function() {\n  function ReactNativeFiberHostComponent(\n    tag,\n    viewConfig,\n    internalInstanceHandleDEV\n  ) {\n    this._nativeTag = tag;\n    this._children = [];\n    this.viewConfig = viewConfig;\n\n    {\n      this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n    }\n  }\n\n  var _proto = ReactNativeFiberHostComponent.prototype;\n\n  _proto.blur = function blur() {\n    ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n  };\n\n  _proto.focus = function focus() {\n    ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n  };\n\n  _proto.measure = function measure(callback) {\n    ReactNativePrivateInterface.UIManager.measure(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback)\n    );\n  };\n\n  _proto.measureInWindow = function measureInWindow(callback) {\n    ReactNativePrivateInterface.UIManager.measureInWindow(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback)\n    );\n  };\n\n  _proto.measureLayout = function measureLayout(\n    relativeToNativeNode,\n    onSuccess,\n    onFail\n  ) /* currently unused */\n  {\n    var relativeNode;\n\n    if (typeof relativeToNativeNode === \"number\") {\n      // Already a node handle\n      relativeNode = relativeToNativeNode;\n    } else {\n      var nativeNode = relativeToNativeNode;\n\n      if (nativeNode._nativeTag) {\n        relativeNode = nativeNode._nativeTag;\n      }\n    }\n\n    if (relativeNode == null) {\n      {\n        error(\n          \"Warning: ref.measureLayout must be called with a node handle or a ref to a native component.\"\n        );\n      }\n\n      return;\n    }\n\n    ReactNativePrivateInterface.UIManager.measureLayout(\n      this._nativeTag,\n      relativeNode,\n      mountSafeCallback_NOT_REALLY_SAFE(this, onFail),\n      mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)\n    );\n  };\n\n  _proto.setNativeProps = function setNativeProps(nativeProps) {\n    {\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n    }\n\n    var updatePayload = create(nativeProps, this.viewConfig.validAttributes); // Avoid the overhead of bridge calls if there's no update.\n    // This is an expensive no-op for Android, and causes an unnecessary\n    // view invalidation for certain components (eg RCTTextInput) on iOS.\n\n    if (updatePayload != null) {\n      ReactNativePrivateInterface.UIManager.updateView(\n        this._nativeTag,\n        this.viewConfig.uiViewClassName,\n        updatePayload\n      );\n    }\n  };\n\n  return ReactNativeFiberHostComponent;\n})(); // eslint-disable-next-line no-unused-expressions\n\n// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback = Scheduler.unstable_scheduleCallback;\nvar cancelCallback = Scheduler.unstable_cancelCallback;\nvar shouldYield = Scheduler.unstable_shouldYield;\nvar requestPaint = Scheduler.unstable_requestPaint;\nvar now = Scheduler.unstable_now;\nvar ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nvar UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nvar NormalPriority = Scheduler.unstable_NormalPriority;\nvar IdlePriority = Scheduler.unstable_IdlePriority;\n\nvar rendererID = null;\nvar injectedHook = null;\nvar hasLoggedError = false;\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n    // No DevTools\n    return false;\n  }\n\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    {\n      error(\n        \"The installed version of React DevTools is too old and will not work \" +\n          \"with the current version of React. Please update React DevTools. \" +\n          \"https://reactjs.org/link/react-devtools\"\n      );\n    } // DevTools exists, even though it doesn't support Fiber.\n\n    return true;\n  }\n\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = assign({}, internals, {\n        getLaneLabelMap: getLaneLabelMap,\n        injectProfilingHooks: injectProfilingHooks\n      });\n    }\n\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      error(\"React instrumentation encountered an error: %s.\", err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nfunction onScheduleRoot(root, children) {\n  {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === \"function\"\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n    try {\n      var didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        var schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdlePriority;\n            break;\n\n          default:\n            schedulerPriority = NormalPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onPostCommitRoot(root) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === \"function\"\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error(\"React instrumentation encountered an error: %s\", err);\n        }\n      }\n    }\n  }\n}\n\nfunction injectProfilingHooks(profilingHooks) {}\n\nfunction getLaneLabelMap() {\n  {\n    return null;\n  }\n}\nfunction markComponentRenderStopped() {}\nfunction markComponentErrored(fiber, thrownValue, lanes) {}\nfunction markComponentSuspended(fiber, wakeable, lanes) {}\n\nvar NoMode =\n  /*                         */\n  0; // TODO: Remove ConcurrentMode by reading from the root tag instead\n\nvar ConcurrentMode =\n  /*                 */\n  1;\nvar ProfileMode =\n  /*                    */\n  2;\nvar StrictLegacyMode =\n  /*               */\n  8;\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\n}\n\n// If those values are changed that package should be rebuilt and redeployed.\n\nvar TotalLanes = 31;\nvar NoLanes =\n  /*                        */\n  0;\nvar NoLane =\n  /*                          */\n  0;\nvar SyncLane =\n  /*                        */\n  1;\nvar InputContinuousHydrationLane =\n  /*    */\n  2;\nvar InputContinuousLane =\n  /*             */\n  4;\nvar DefaultHydrationLane =\n  /*            */\n  8;\nvar DefaultLane =\n  /*                     */\n  16;\nvar TransitionHydrationLane =\n  /*                */\n  32;\nvar TransitionLanes =\n  /*                       */\n  4194240;\nvar TransitionLane1 =\n  /*                        */\n  64;\nvar TransitionLane2 =\n  /*                        */\n  128;\nvar TransitionLane3 =\n  /*                        */\n  256;\nvar TransitionLane4 =\n  /*                        */\n  512;\nvar TransitionLane5 =\n  /*                        */\n  1024;\nvar TransitionLane6 =\n  /*                        */\n  2048;\nvar TransitionLane7 =\n  /*                        */\n  4096;\nvar TransitionLane8 =\n  /*                        */\n  8192;\nvar TransitionLane9 =\n  /*                        */\n  16384;\nvar TransitionLane10 =\n  /*                       */\n  32768;\nvar TransitionLane11 =\n  /*                       */\n  65536;\nvar TransitionLane12 =\n  /*                       */\n  131072;\nvar TransitionLane13 =\n  /*                       */\n  262144;\nvar TransitionLane14 =\n  /*                       */\n  524288;\nvar TransitionLane15 =\n  /*                       */\n  1048576;\nvar TransitionLane16 =\n  /*                       */\n  2097152;\nvar RetryLanes =\n  /*                            */\n  130023424;\nvar RetryLane1 =\n  /*                             */\n  4194304;\nvar RetryLane2 =\n  /*                             */\n  8388608;\nvar RetryLane3 =\n  /*                             */\n  16777216;\nvar RetryLane4 =\n  /*                             */\n  33554432;\nvar RetryLane5 =\n  /*                             */\n  67108864;\nvar SomeRetryLane = RetryLane1;\nvar SelectiveHydrationLane =\n  /*          */\n  134217728;\nvar NonIdleLanes =\n  /*                          */\n  268435455;\nvar IdleHydrationLane =\n  /*               */\n  268435456;\nvar IdleLane =\n  /*                        */\n  536870912;\nvar OffscreenLane =\n  /*                   */\n  1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\nvar NoTimestamp = -1;\nvar nextTransitionLane = TransitionLane1;\nvar nextRetryLane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes) {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n\n    case InputContinuousLane:\n      return InputContinuousLane;\n\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n\n    case DefaultLane:\n      return DefaultLane;\n\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n\n    case IdleLane:\n      return IdleLane;\n\n    case OffscreenLane:\n      return OffscreenLane;\n\n    default:\n      {\n        error(\"Should have found matching lanes. This is a bug in React.\");\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n\n      return lanes;\n  }\n}\n\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  var pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  var nextLanes = NoLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    var nextLane = getHighestPriorityLane(nextLanes);\n    var wipLane = getHighestPriorityLane(wipLanes);\n\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n  var entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    var entanglements = root.entanglements;\n    var lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      var index = pickArbitraryLaneIndex(lanes);\n      var lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  var eventTimes = root.eventTimes;\n  var mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n\n    default:\n      {\n        error(\"Should have found matching lanes. This is a bug in React.\");\n      }\n\n      return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  var pendingLanes = root.pendingLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes;\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  var lanes = pendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction includesSyncLane(lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyNonUrgentLanes(lanes) {\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n  return (lanes & UrgentLanes) === NoLanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\nfunction includesBlockingLane(root, lanes) {\n  var SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\nfunction includesExpiredLane(root, lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\nfunction isTransitionLane(lane) {\n  return (lane & TransitionLanes) !== NoLanes;\n}\nfunction claimNextTransitionLane() {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n    nextTransitionLane = TransitionLane1;\n  }\n\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\n    nextRetryLane = RetryLane1;\n  }\n\n  return lane;\n}\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n}\nfunction intersectLanes(a, b) {\n  return a & b;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  var laneMap = [];\n\n  for (var i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  var eventTimes = root.eventTimes;\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  var expirationTimes = root.expirationTimes;\n  var lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = NoLanes;\n  root.pingedLanes = NoLanes;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  var entanglements = root.entanglements;\n  var eventTimes = root.eventTimes;\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  var lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  var entanglements = root.entanglements;\n  var lanes = rootEntangledLanes;\n\n  while (lanes) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) | // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getBumpedLaneForHydration(root, renderLanes) {\n  var renderLane = getHighestPriorityLane(renderLanes);\n  var lane;\n\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  } // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\nfunction addFiberToLanesMap(root, fiber, lanes) {\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n    lanes &= ~lane;\n  }\n}\nfunction movePendingFibersToMemoized(root, lanes) {\n  if (!isDevToolsPresent) {\n    return;\n  }\n\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  var memoizedUpdaters = root.memoizedUpdaters;\n\n  while (lanes > 0) {\n    var index = laneToIndex(lanes);\n    var lane = 1 << index;\n    var updaters = pendingUpdatersLaneMap[index];\n\n    if (updaters.size > 0) {\n      updaters.forEach(function(fiber) {\n        var alternate = fiber.alternate;\n\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\nfunction getTransitionsForLanes(root, lanes) {\n  {\n    return null;\n  }\n}\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\nvar currentUpdatePriority = NoLane;\nfunction getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nfunction setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\nfunction higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nfunction lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nfunction isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nfunction lanesToEventPriority(lanes) {\n  var lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\nfunction shim() {\n  throw new Error(\n    \"The current renderer does not support hydration. \" +\n      \"This error is likely caused by a bug in React. \" +\n      \"Please file an issue.\"\n  );\n} // Hydration (when unsupported)\nvar isSuspenseInstancePending = shim;\nvar isSuspenseInstanceFallback = shim;\nvar getSuspenseInstanceFallbackErrorDetails = shim;\nvar registerSuspenseInstanceRetry = shim;\nvar hydrateTextInstance = shim;\nvar clearSuspenseBoundary = shim;\nvar clearSuspenseBoundaryFromContainer = shim;\nvar errorHydratingContainer = shim;\n\nvar getViewConfigForType =\n  ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\nvar UPDATE_SIGNAL = {};\n\n{\n  Object.freeze(UPDATE_SIGNAL);\n} // Counter for uniquely identifying views.\n// % 10 === 1 means it is a rootTag.\n// % 2 === 0 means it is a Fabric tag.\n\nvar nextReactTag = 3;\n\nfunction allocateTag() {\n  var tag = nextReactTag;\n\n  if (tag % 10 === 1) {\n    tag += 2;\n  }\n\n  nextReactTag = tag + 2;\n  return tag;\n}\n\nfunction recursivelyUncacheFiberNode(node) {\n  if (typeof node === \"number\") {\n    // Leaf node (eg text)\n    uncacheFiberNode(node);\n  } else {\n    uncacheFiberNode(node._nativeTag);\n\n    node._children.forEach(recursivelyUncacheFiberNode);\n  }\n}\nfunction appendInitialChild(parentInstance, child) {\n  parentInstance._children.push(child);\n}\nfunction createInstance(\n  type,\n  props,\n  rootContainerInstance,\n  hostContext,\n  internalInstanceHandle\n) {\n  var tag = allocateTag();\n  var viewConfig = getViewConfigForType(type);\n\n  {\n    for (var key in viewConfig.validAttributes) {\n      if (props.hasOwnProperty(key)) {\n        ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(\n          props[key]\n        );\n      }\n    }\n  }\n\n  var updatePayload = create(props, viewConfig.validAttributes);\n  ReactNativePrivateInterface.UIManager.createView(\n    tag, // reactTag\n    viewConfig.uiViewClassName, // viewName\n    rootContainerInstance, // rootTag\n    updatePayload // props\n  );\n  var component = new ReactNativeFiberHostComponent(\n    tag,\n    viewConfig,\n    internalInstanceHandle\n  );\n  precacheFiberNode(internalInstanceHandle, tag);\n  updateFiberProps(tag, props); // Not sure how to avoid this cast. Flow is okay if the component is defined\n  // in the same file but if it's external it can't see the types.\n\n  return component;\n}\nfunction createTextInstance(\n  text,\n  rootContainerInstance,\n  hostContext,\n  internalInstanceHandle\n) {\n  if (!hostContext.isInAParentText) {\n    throw new Error(\"Text strings must be rendered within a <Text> component.\");\n  }\n\n  var tag = allocateTag();\n  ReactNativePrivateInterface.UIManager.createView(\n    tag, // reactTag\n    \"RCTRawText\", // viewName\n    rootContainerInstance, // rootTag\n    {\n      text: text\n    } // props\n  );\n  precacheFiberNode(internalInstanceHandle, tag);\n  return tag;\n}\nfunction finalizeInitialChildren(\n  parentInstance,\n  type,\n  props,\n  rootContainerInstance,\n  hostContext\n) {\n  // Don't send a no-op message over the bridge.\n  if (parentInstance._children.length === 0) {\n    return false;\n  } // Map from child objects to native tags.\n  // Either way we need to pass a copy of the Array to prevent it from being frozen.\n\n  var nativeTags = parentInstance._children.map(function(child) {\n    return typeof child === \"number\"\n      ? child // Leaf node (eg text)\n      : child._nativeTag;\n  });\n\n  ReactNativePrivateInterface.UIManager.setChildren(\n    parentInstance._nativeTag, // containerTag\n    nativeTags // reactTags\n  );\n  return false;\n}\nfunction getRootHostContext(rootContainerInstance) {\n  return {\n    isInAParentText: false\n  };\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  var prevIsInAParentText = parentHostContext.isInAParentText;\n  var isInAParentText =\n    type === \"AndroidTextInput\" || // Android\n    type === \"RCTMultilineTextInputView\" || // iOS\n    type === \"RCTSinglelineTextInputView\" || // iOS\n    type === \"RCTText\" ||\n    type === \"RCTVirtualText\";\n\n  if (prevIsInAParentText !== isInAParentText) {\n    return {\n      isInAParentText: isInAParentText\n    };\n  } else {\n    return parentHostContext;\n  }\n}\nfunction getPublicInstance(instance) {\n  return instance;\n}\nfunction prepareForCommit(containerInfo) {\n  // Noop\n  return null;\n}\nfunction prepareUpdate(\n  instance,\n  type,\n  oldProps,\n  newProps,\n  rootContainerInstance,\n  hostContext\n) {\n  return UPDATE_SIGNAL;\n}\nfunction resetAfterCommit(containerInfo) {\n  // Noop\n}\nvar scheduleTimeout = setTimeout;\nvar cancelTimeout = clearTimeout;\nvar noTimeout = -1;\nfunction shouldSetTextContent(type, props) {\n  // TODO (bvaughn) Revisit this decision.\n  // Always returning false simplifies the createInstance() implementation,\n  // But creates an additional child Fiber for raw text children.\n  // No additional native views are created though.\n  // It's not clear to me which is better so I'm deferring for now.\n  // More context @ github.com/facebook/react/pull/8560#discussion_r92111303\n  return false;\n}\nfunction getCurrentEventPriority() {\n  return DefaultEventPriority;\n} // -------------------\nfunction appendChild(parentInstance, child) {\n  var childTag = typeof child === \"number\" ? child : child._nativeTag;\n  var children = parentInstance._children;\n  var index = children.indexOf(child);\n\n  if (index >= 0) {\n    children.splice(index, 1);\n    children.push(child);\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [index], // moveFromIndices\n      [children.length - 1], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [] // removeAtIndices\n    );\n  } else {\n    children.push(child);\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [children.length - 1], // addAtIndices\n      [] // removeAtIndices\n    );\n  }\n}\nfunction appendChildToContainer(parentInstance, child) {\n  var childTag = typeof child === \"number\" ? child : child._nativeTag;\n  ReactNativePrivateInterface.UIManager.setChildren(\n    parentInstance, // containerTag\n    [childTag] // reactTags\n  );\n}\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  ReactNativePrivateInterface.UIManager.updateView(\n    textInstance, // reactTag\n    \"RCTRawText\", // viewName\n    {\n      text: newText\n    } // props\n  );\n}\nfunction commitUpdate(\n  instance,\n  updatePayloadTODO,\n  type,\n  oldProps,\n  newProps,\n  internalInstanceHandle\n) {\n  var viewConfig = instance.viewConfig;\n  updateFiberProps(instance._nativeTag, newProps);\n  var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes); // Avoid the overhead of bridge calls if there's no update.\n  // This is an expensive no-op for Android, and causes an unnecessary\n  // view invalidation for certain components (eg RCTTextInput) on iOS.\n\n  if (updatePayload != null) {\n    ReactNativePrivateInterface.UIManager.updateView(\n      instance._nativeTag, // reactTag\n      viewConfig.uiViewClassName, // viewName\n      updatePayload // props\n    );\n  }\n}\nfunction insertBefore(parentInstance, child, beforeChild) {\n  var children = parentInstance._children;\n  var index = children.indexOf(child); // Move existing child or add new child?\n\n  if (index >= 0) {\n    children.splice(index, 1);\n    var beforeChildIndex = children.indexOf(beforeChild);\n    children.splice(beforeChildIndex, 0, child);\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerID\n      [index], // moveFromIndices\n      [beforeChildIndex], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [] // removeAtIndices\n    );\n  } else {\n    var _beforeChildIndex = children.indexOf(beforeChild);\n\n    children.splice(_beforeChildIndex, 0, child);\n    var childTag = typeof child === \"number\" ? child : child._nativeTag;\n    ReactNativePrivateInterface.UIManager.manageChildren(\n      parentInstance._nativeTag, // containerID\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [_beforeChildIndex], // addAtIndices\n      [] // removeAtIndices\n    );\n  }\n}\nfunction insertInContainerBefore(parentInstance, child, beforeChild) {\n  // TODO (bvaughn): Remove this check when...\n  // We create a wrapper object for the container in ReactNative render()\n  // Or we refactor to remove wrapper objects entirely.\n  // For more info on pros/cons see PR #8560 description.\n  if (typeof parentInstance === \"number\") {\n    throw new Error(\"Container does not support insertBefore operation\");\n  }\n}\nfunction removeChild(parentInstance, child) {\n  recursivelyUncacheFiberNode(child);\n  var children = parentInstance._children;\n  var index = children.indexOf(child);\n  children.splice(index, 1);\n  ReactNativePrivateInterface.UIManager.manageChildren(\n    parentInstance._nativeTag, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [index] // removeAtIndices\n  );\n}\nfunction removeChildFromContainer(parentInstance, child) {\n  recursivelyUncacheFiberNode(child);\n  ReactNativePrivateInterface.UIManager.manageChildren(\n    parentInstance, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [0] // removeAtIndices\n  );\n}\nfunction resetTextContent(instance) {\n  // Noop\n}\nfunction hideInstance(instance) {\n  var viewConfig = instance.viewConfig;\n  var updatePayload = create(\n    {\n      style: {\n        display: \"none\"\n      }\n    },\n    viewConfig.validAttributes\n  );\n  ReactNativePrivateInterface.UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload\n  );\n}\nfunction hideTextInstance(textInstance) {\n  throw new Error(\"Not yet implemented.\");\n}\nfunction unhideInstance(instance, props) {\n  var viewConfig = instance.viewConfig;\n  var updatePayload = diff(\n    assign({}, props, {\n      style: [\n        props.style,\n        {\n          display: \"none\"\n        }\n      ]\n    }),\n    props,\n    viewConfig.validAttributes\n  );\n  ReactNativePrivateInterface.UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload\n  );\n}\nfunction clearContainer(container) {\n  // TODO Implement this for React Native\n  // UIManager does not expose a \"remove all\" type method.\n}\nfunction unhideTextInstance(textInstance, text) {\n  throw new Error(\"Not yet implemented.\");\n}\nfunction preparePortalMount(portalInstance) {\n  // noop\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    var ownerName = null;\n\n    if (ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(name, source, ownerName) {\n  var sourceInfo = \"\";\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, \"\"); // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n\n    if (/^index\\./.test(fileName)) {\n      var match = path.match(BEFORE_SLASH_RE);\n\n      if (match) {\n        var pathBeforeSlash = match[1];\n\n        if (pathBeforeSlash) {\n          var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n          fileName = folderName + \"/\" + fileName;\n        }\n      }\n    }\n\n    sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n  } else if (ownerName) {\n    sourceInfo = \" (created by \" + ownerName + \")\";\n  }\n\n  return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    if (!fn) {\n      return \"\";\n    }\n\n    var name = fn.displayName || fn.name || null;\n    var ownerName = null;\n\n    if (ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n  if (type == null) {\n    return \"\";\n  }\n\n  if (typeof type === \"function\") {\n    {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n\n  if (typeof type === \"string\") {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n  }\n\n  if (typeof type === \"object\") {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE: {\n        var lazyComponent = type;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn\n          );\n        } catch (x) {}\n      }\n    }\n  }\n\n  return \"\";\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== \"function\") {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error(\n              (componentName || \"React class\") +\n                \": \" +\n                location +\n                \" type `\" +\n                typeSpecName +\n                \"` is invalid; \" +\n                \"it must be a function, usually from the `prop-types` package, but received `\" +\n                typeof typeSpecs[typeSpecName] +\n                \"`.\" +\n                \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\"\n            );\n            err.name = \"Invariant Violation\";\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"\n          );\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error(\n            \"%s: type specification of %s\" +\n              \" `%s` is invalid; the type checker \" +\n              \"function must return `null` or an `Error` but returned a %s. \" +\n              \"You may have forgotten to pass an argument to the type checker \" +\n              \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" +\n              \"shape all require an argument).\",\n            componentName || \"React class\",\n            location,\n            typeSpecName,\n            typeof error$1\n          );\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (\n          error$1 instanceof Error &&\n          !(error$1.message in loggedTypeFailures)\n        ) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error(\"Failed %s type: %s\", location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar valueStack = [];\nvar fiberStack;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      error(\"Unexpected pop.\");\n    }\n\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      error(\"Unexpected Fiber popped.\");\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n} // A cursor to the current merged context object on the stack.\n\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress,\n  Component,\n  didPushOwnContextIfProvider\n) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    var instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    var type = workInProgress.type;\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n    var instance = workInProgress.stateNode;\n\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n      checkPropTypes(contextTypes, context, \"context\", name);\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    var childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error(\n        \"Unexpected context found on stack. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    var instance = fiber.stateNode;\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== \"function\") {\n      {\n        var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error(\n            \"%s.childContextTypes is specified but there is no getChildContext() method \" +\n              \"on the instance. You can either define getChildContext() on %s or remove \" +\n              \"childContextTypes from it.\",\n            componentName,\n            componentName\n          );\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error(\n          (getComponentNameFromFiber(fiber) || \"Unknown\") +\n            '.getChildContext(): key \"' +\n            contextKey +\n            '\" is not defined in childContextTypes.'\n        );\n      }\n    }\n\n    {\n      var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n      checkPropTypes(childContextTypes, childContext, \"child context\", name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    var memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress\n    );\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    var instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error(\n        \"Expected to have an instance by this point. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      var mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error(\n        \"Expected subtree parent to be a mounted class component. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    var node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent: {\n          var Component = node.type;\n\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n\n          break;\n        }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error(\n      \"Found unexpected detached subtree parent. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nvar objectIs = typeof Object.is === \"function\" ? Object.is : is;\n\nvar syncQueue = null;\nvar includesLegacySyncCallbacks = false;\nvar isFlushingSyncQueue = false;\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\nfunction scheduleLegacySyncCallback(callback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\nfunction flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\nfunction flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    var i = 0;\n    var previousUpdatePriority = getCurrentUpdatePriority();\n\n    try {\n      var isSync = true;\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n\n      setCurrentUpdatePriority(DiscreteEventPriority);\n\n      for (; i < queue.length; i++) {\n        var callback = queue[i];\n\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      } // Resume flushing in the next tick\n\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n\n  return null;\n}\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root) {\n  var currentState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack = [];\nvar forkStackIndex = 0;\nvar treeForkProvider = null;\nvar treeForkCount = 0;\nvar idStack = [];\nvar idStackIndex = 0;\nvar treeContextProvider = null;\nvar treeContextId = 1;\nvar treeContextOverflow = \"\";\n\nfunction popTreeContext(workInProgress) {\n  // Restore the previous values.\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\n// due to earlier mismatches or a suspended fiber.\n\nvar didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary\n\nvar hydrationErrors = null;\nfunction didSuspendOrErrorWhileHydratingDEV() {\n  {\n    return didSuspendOrErrorDEV;\n  }\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber,\n  suspenseInstance,\n  treeContext\n) {\n  {\n    return false;\n  }\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber,\n  rootContainerInstance,\n  hostContext\n) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostTextInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n  var shouldUpdate = hydrateTextInstance();\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\n  {\n    throw new Error(\n      \"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" +\n        \"This error is likely caused by a bug in React. Please file an issue.\"\n    );\n  }\n}\n\nfunction popHydrationState(fiber) {\n  {\n    return false;\n  }\n}\n\nfunction upgradeHydrationErrorsToRecoverable() {\n  if (hydrationErrors !== null) {\n    // Successfully completed a forced client render. The errors that occurred\n    // during the hydration attempt are now recovered. We will log them in\n    // commit phase, once the entire tree has finished.\n    queueRecoverableErrors(hydrationErrors);\n    hydrationErrors = null;\n  }\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\nfunction queueHydrationError(error) {\n  if (hydrationErrors === null) {\n    hydrationErrors = [error];\n  } else {\n    hydrationErrors.push(error);\n  }\n}\n\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\nvar NoTransition = null;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig.transition;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n  for (var i = 0; i < keysA.length; i++) {\n    var currentKey = keysA[i];\n\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction describeFiber(fiber) {\n  var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n  var source = fiber._debugSource;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n\n    default:\n      return \"\";\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    var node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\n\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar current = null;\nvar isRendering = false;\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n\n    var owner = current._debugOwner;\n\n    if (owner !== null && typeof owner !== \"undefined\") {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return \"\";\n    } // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n\n    return getStackByFiberInDevAndProd(current);\n  }\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack =\n      fiber === null ? null : getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\nfunction getCurrentFiber() {\n  {\n    return current;\n  }\n}\nfunction setIsRendering(rendering) {\n  {\n    isRendering = rendering;\n  }\n}\n\nvar ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings: function(fiber, instance) {},\n  flushPendingUnsafeLifecycleWarnings: function() {},\n  recordLegacyContextWarning: function(fiber, instance) {},\n  flushLegacyContextWarning: function() {},\n  discardPendingWarnings: function() {}\n};\n\n{\n  var findStrictRoot = function(fiber) {\n    var maybeStrictRoot = null;\n    var node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  var setToSortedString = function(set) {\n    var array = [];\n    set.forEach(function(value) {\n      array.push(value);\n    });\n    return array.sort().join(\", \");\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  var didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(\n    fiber,\n    instance\n  ) {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === \"function\" && // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillMount === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === \"function\" &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === \"function\" &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillUpdate === \"function\"\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {\n    // We do an initial pass to gather component names\n    var componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(function(fiber) {\n        componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    var UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    var componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    var componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(function(fiber) {\n        componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || \"Component\"\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n\n      error(\n        \"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        sortedNames\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames\n      );\n\n      error(\n        \"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" +\n          \"and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* If you're updating state whenever props change, \" +\n          \"refactor your code to use memoization techniques or move it to \" +\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames2 = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames\n      );\n\n      error(\n        \"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" +\n          \"and may indicate bugs in your code. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames2\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n      warn(\n        \"componentWillMount has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\n          \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames3\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames4 = setToSortedString(\n        componentWillReceivePropsUniqueNames\n      );\n\n      warn(\n        \"componentWillReceiveProps has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* If you're updating state whenever props change, refactor your \" +\n          \"code to use memoization techniques or move it to \" +\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\n          \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames4\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n      warn(\n        \"componentWillUpdate has been renamed, and is not recommended for use. \" +\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\n          \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" +\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\n          \"\\nPlease update the following components: %s\",\n        _sortedNames5\n      );\n    }\n  };\n\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  var didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function(\n    fiber,\n    instance\n  ) {\n    var strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      error(\n        \"Expected to find a StrictMode component in a strict mode tree. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n\n      return;\n    } // Dedup strategy: Warn once per component.\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === \"function\")\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function() {\n    pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      var firstFiber = fiberArray[0];\n      var uniqueNames = new Set();\n      fiberArray.forEach(function(fiber) {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      var sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentFiber(firstFiber);\n\n        error(\n          \"Legacy context API has been detected within a strict-mode tree.\" +\n            \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" +\n            \"using it should migrate to the new version.\" +\n            \"\\n\\nPlease update the following components: %s\" +\n            \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\",\n          sortedNames\n        );\n      } finally {\n        resetCurrentFiber();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function() {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n    var type =\n      (hasToStringTag && value[Symbol.toStringTag]) ||\n      value.constructor.name ||\n      \"Object\";\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return \"\" + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error(\n        \"The provided key is an unsupported type %s.\" +\n          \" This value must be coerced to a string before before using it here.\",\n        typeName(value)\n      );\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\nfunction checkPropStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error(\n        \"The provided `%s` prop is an unsupported type %s.\" +\n          \" This value must be coerced to a string before before using it here.\",\n        propName,\n        typeName(value)\n      );\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nvar valueCursor = createCursor(null);\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastFullyObservedContext = null;\nvar isDisallowedContextReadInDEV = false;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction pushProvider(providerFiber, context, nextValue) {\n  {\n    push(valueCursor, context._currentValue, providerFiber);\n    context._currentValue = nextValue;\n\n    {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        error(\n          \"Detected multiple renderers concurrently rendering the \" +\n            \"same context provider. This is currently unsupported.\"\n        );\n      }\n\n      context._currentRenderer = rendererSigil;\n    }\n  }\n}\nfunction popProvider(context, providerFiber) {\n  var currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n\n  {\n    {\n      context._currentValue = currentValue;\n    }\n  }\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  var node = parent;\n\n  while (node !== null) {\n    var alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    }\n\n    if (node === propagationRoot) {\n      break;\n    }\n\n    node = node.return;\n  }\n\n  {\n    if (node !== propagationRoot) {\n      error(\n        \"Expected to find the propagation root when scheduling context work. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n  }\n}\nfunction propagateContextChange(workInProgress, context, renderLanes) {\n  {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\n  var fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    var nextFiber = void 0; // Visit this fiber.\n\n    var list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      var dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var lane = pickArbitraryLane(renderLanes);\n            var update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            // Inlined `enqueueUpdate` to remove interleaved update check\n\n            var updateQueue = fiber.updateQueue;\n\n            if (updateQueue === null);\n            else {\n              var sharedQueue = updateQueue.shared;\n              var pending = sharedQueue.pending;\n\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          var alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(\n            fiber.return,\n            renderLanes,\n            workInProgress\n          ); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (fiber.tag === DehydratedFragment) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      var parentSuspense = fiber.return;\n\n      if (parentSuspense === null) {\n        throw new Error(\n          \"We just came from a parent so we must have had a parent. This is a bug in React.\"\n        );\n      }\n\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      var _alternate = parentSuspense.alternate;\n\n      if (_alternate !== null) {\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n      } // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n\n      scheduleContextWorkOnParentPath(\n        parentSuspense,\n        renderLanes,\n        workInProgress\n      );\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        var sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  var dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    {\n      var firstContext = dependencies.firstContext;\n\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        } // Reset the work-in-progress list\n\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\nfunction readContext(context) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      error(\n        \"Context can only be read while React is rendering. \" +\n          \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n          \"In function components, you can read it directly in the function body, but not \" +\n          \"inside Hooks like useReducer() or useMemo().\"\n      );\n    }\n  }\n\n  var value = context._currentValue;\n\n  if (lastFullyObservedContext === context);\n  else {\n    var contextItem = {\n      context: context,\n      memoizedValue: value,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error(\n          \"Context can only be read while React is rendering. \" +\n            \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n            \"In function components, you can read it directly in the function body, but not \" +\n            \"inside Hooks like useReducer() or useMemo().\"\n        );\n      } // This is the first dependency for this component. Create a new list.\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return value;\n}\n\n// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nvar interleavedQueues = null;\nfunction pushInterleavedQueue(queue) {\n  if (interleavedQueues === null) {\n    interleavedQueues = [queue];\n  } else {\n    interleavedQueues.push(queue);\n  }\n}\nfunction hasInterleavedUpdates() {\n  return interleavedQueues !== null;\n}\nfunction enqueueInterleavedUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (interleavedQueues !== null) {\n    for (var i = 0; i < interleavedQueues.length; i++) {\n      var queue = interleavedQueues[i];\n      var lastInterleavedUpdate = queue.interleaved;\n\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\n        var lastPendingUpdate = queue.pending;\n\n        if (lastPendingUpdate !== null) {\n          var firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = firstInterleavedUpdate;\n          lastInterleavedUpdate.next = firstPendingUpdate;\n        }\n\n        queue.pending = lastInterleavedUpdate;\n      }\n    }\n\n    interleavedQueues = null;\n  }\n}\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nvar hasForceUpdate = false;\nvar didWarnUpdateInsideUpdate;\nvar currentlyProcessingQueue;\n\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n}\n\nfunction initializeUpdateQueue(fiber) {\n  var queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  var queue = workInProgress.updateQueue;\n  var currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    var clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  var update = {\n    eventTime: eventTime,\n    lane: lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isInterleavedUpdate(fiber)) {\n    var interleaved = sharedQueue.interleaved;\n\n    if (interleaved === null) {\n      // This is the first update. Create a circular list.\n      update.next = update; // At the end of the current render, this queue's interleaved updates will\n      // be transferred to the pending queue.\n\n      pushInterleavedQueue(sharedQueue);\n    } else {\n      update.next = interleaved.next;\n      interleaved.next = update;\n    }\n\n    sharedQueue.interleaved = update;\n  } else {\n    var pending = sharedQueue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    sharedQueue.pending = update;\n  }\n\n  {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      error(\n        \"An update (setState, replaceState, or forceUpdate) was scheduled \" +\n          \"from inside an update function. Update functions should be pure, \" +\n          \"with zero side-effects. Consider using componentDidUpdate or a \" +\n          \"callback.\"\n      );\n\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\nfunction entangleTransitions(root, fiber, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isTransitionLane(lane)) {\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  var current = workInProgress.alternate;\n\n  if (current !== null) {\n    var currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      var newFirst = null;\n      var newLast = null;\n      var firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        var update = firstBaseUpdate;\n\n        do {\n          var clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n  var lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(\n  workInProgress,\n  queue,\n  update,\n  prevState,\n  nextProps,\n  instance\n) {\n  switch (update.tag) {\n    case ReplaceState: {\n      var payload = update.payload;\n\n      if (typeof payload === \"function\") {\n        // Updater function\n        {\n          enterDisallowedContextReadInDEV();\n        }\n\n        var nextState = payload.call(instance, prevState, nextProps);\n\n        {\n          exitDisallowedContextReadInDEV();\n        }\n\n        return nextState;\n      } // State object\n\n      return payload;\n    }\n\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n\n    case UpdateState: {\n      var _payload = update.payload;\n      var partialState;\n\n      if (typeof _payload === \"function\") {\n        // Updater function\n        {\n          enterDisallowedContextReadInDEV();\n        }\n\n        partialState = _payload.call(instance, prevState, nextProps);\n\n        {\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = _payload;\n      }\n\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      } // Merge the partial state and the previous state.\n\n      return assign({}, prevState, partialState);\n    }\n\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  var queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  var firstBaseUpdate = queue.firstBaseUpdate;\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  var pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    var lastPendingUpdate = pendingQueue;\n    var firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    var current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      var currentQueue = current.updateQueue;\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    var newLanes = NoLanes;\n    var newBaseState = null;\n    var newFirstBaseUpdate = null;\n    var newLastBaseUpdate = null;\n    var update = firstBaseUpdate;\n\n    do {\n      var updateLane = update.lane;\n      var updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          var _clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n        } // Process this update.\n\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance\n        );\n        var callback = update.callback;\n\n        if (\n          callback !== null && // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          var effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          var _firstPendingUpdate = _lastPendingUpdate.next;\n          _lastPendingUpdate.next = null;\n          update = _firstPendingUpdate;\n          queue.lastBaseUpdate = _lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n\n    var lastInterleaved = queue.shared.interleaved;\n\n    if (lastInterleaved !== null) {\n      var interleaved = lastInterleaved;\n\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = interleaved.next;\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== \"function\") {\n    throw new Error(\n      \"Invalid argument passed as callback. Expected a function. Instead \" +\n        (\"received: \" + callback)\n    );\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  var effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (var i = 0; i < effects.length; i++) {\n      var effect = effects[i];\n      var callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\n\nvar emptyRefsObject = new React.Component().refs;\nvar didWarnAboutStateAssignmentForComponent;\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback, callerName) {\n    if (callback === null || typeof callback === \"function\") {\n      return;\n    }\n\n    var key = callerName + \"_\" + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error(\n        \"%s(...): Expected the last optional `callback` argument to be a \" +\n          \"function. Instead received: %s.\",\n        callerName,\n        callback\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || \"Component\";\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error(\n          \"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" +\n            \"You have returned undefined.\",\n          componentName\n        );\n      }\n    }\n  }; // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n\n  Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n    enumerable: false,\n    value: function() {\n      throw new Error(\n        \"_processChildContext is not available in React 16+. This likely \" +\n          \"means you have multiple copies of React and are attempting to nest \" +\n          \"a React 15 tree inside a React 16 tree using \" +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          \"to make sure you have only one copy of React (and ideally, switch \" +\n          \"to ReactDOM.createPortal).\"\n      );\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  var prevState = workInProgress.memoizedState;\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n  var memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    var updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function(inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"setState\");\n      }\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueReplaceState: function(inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"replaceState\");\n      }\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueForceUpdate: function(inst, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, \"forceUpdate\");\n      }\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n  }\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  var instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === \"function\") {\n    var shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext\n    );\n\n    {\n      if (shouldUpdate === undefined) {\n        error(\n          \"%s.shouldComponentUpdate(): Returned undefined instead of a \" +\n            \"boolean value. Make sure to return true or false.\",\n          getComponentNameFromType(ctor) || \"Component\"\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n\n  {\n    var name = getComponentNameFromType(ctor) || \"Component\";\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n        error(\n          \"%s(...): No `render` method found on the returned component \" +\n            \"instance: did you accidentally return an object from the constructor?\",\n          name\n        );\n      } else {\n        error(\n          \"%s(...): No `render` method found on the returned component \" +\n            \"instance: you may have forgotten to define `render`.\",\n          name\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      error(\n        \"getInitialState was defined on %s, a plain JavaScript class. \" +\n          \"This is only supported for classes created using React.createClass. \" +\n          \"Did you mean to define a state property instead?\",\n        name\n      );\n    }\n\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      error(\n        \"getDefaultProps was defined on %s, a plain JavaScript class. \" +\n          \"This is only supported for classes created using React.createClass. \" +\n          \"Use a static property to define defaultProps instead.\",\n        name\n      );\n    }\n\n    if (instance.propTypes) {\n      error(\n        \"propTypes was defined as an instance property on %s. Use a static \" +\n          \"property to define propTypes instead.\",\n        name\n      );\n    }\n\n    if (instance.contextType) {\n      error(\n        \"contextType was defined as an instance property on %s. Use a static \" +\n          \"property to define contextType instead.\",\n        name\n      );\n    }\n\n    {\n      if (instance.contextTypes) {\n        error(\n          \"contextTypes was defined as an instance property on %s. Use a static \" +\n            \"property to define contextTypes instead.\",\n          name\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error(\n          \"%s declares both contextTypes and contextType static properties. \" +\n            \"The legacy contextTypes property will be ignored.\",\n          name\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" +\n          \"The name is phrased as a question because the function is \" +\n          \"expected to return a value.\",\n        name\n      );\n    }\n\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== \"undefined\"\n    ) {\n      error(\n        \"%s has a method called shouldComponentUpdate(). \" +\n          \"shouldComponentUpdate should not be used when extending React.PureComponent. \" +\n          \"Please extend React.Component if shouldComponentUpdate is used.\",\n        getComponentNameFromType(ctor) || \"A pure component\"\n      );\n    }\n\n    if (typeof instance.componentDidUnmount === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentDidUnmount(). But there is no such lifecycle method. \" +\n          \"Did you mean componentWillUnmount()?\",\n        name\n      );\n    }\n\n    if (typeof instance.componentDidReceiveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentDidReceiveProps(). But there is no such lifecycle method. \" +\n          \"If you meant to update the state in response to changing props, \" +\n          \"use componentWillReceiveProps(). If you meant to fetch data or \" +\n          \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",\n        name\n      );\n    }\n\n    if (typeof instance.componentWillRecieveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",\n        name\n      );\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n      error(\n        \"%s has a method called \" +\n          \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",\n        name\n      );\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error(\n        \"%s(...): When calling super() in `%s`, make sure to pass \" +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name\n      );\n    }\n\n    if (instance.defaultProps) {\n      error(\n        \"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" +\n          \" Instead, define defaultProps as a static property on %s.\",\n        name,\n        name\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === \"function\" &&\n      typeof instance.componentDidUpdate !== \"function\" &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error(\n        \"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" +\n          \"This component defines getSnapshotBeforeUpdate() only.\",\n        getComponentNameFromType(ctor)\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === \"function\") {\n      error(\n        \"%s: getDerivedStateFromProps() is defined as an instance method \" +\n          \"and will be ignored. Instead, declare it as a static method.\",\n        name\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromError === \"function\") {\n      error(\n        \"%s: getDerivedStateFromError() is defined as an instance method \" +\n          \"and will be ignored. Instead, declare it as a static method.\",\n        name\n      );\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n      error(\n        \"%s: getSnapshotBeforeUpdate() is defined as a static method \" +\n          \"and will be ignored. Instead, declare it as an instance method.\",\n        name\n      );\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n      error(\"%s.state: must be set to an object or null\", name);\n    }\n\n    if (\n      typeof instance.getChildContext === \"function\" &&\n      typeof ctor.childContextTypes !== \"object\"\n    ) {\n      error(\n        \"%s.getChildContext(): childContextTypes must be defined in order to \" +\n          \"use getChildContext().\",\n        name\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if (\"contextType\" in ctor) {\n      var isValid = // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = \"\";\n\n        if (contextType === undefined) {\n          addendum =\n            \" However, it is set to undefined. \" +\n            \"This can be caused by a typo or by mixing up named and default imports. \" +\n            \"This can also happen due to a circular dependency, so \" +\n            \"try moving the createContext() call to a separate file.\";\n        } else if (typeof contextType !== \"object\") {\n          addendum = \" However, it is set to a \" + typeof contextType + \".\";\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = \" Did you accidentally pass the Context.Provider instead?\";\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n        } else {\n          addendum =\n            \" However, it is set to an object with keys {\" +\n            Object.keys(contextType).join(\", \") +\n            \"}.\";\n        }\n\n        error(\n          \"%s defines an invalid contextType. \" +\n            \"contextType should point to the Context object returned by React.createContext().%s\",\n          getComponentNameFromType(ctor) || \"Component\",\n          addendum\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\n\n  var state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error(\n          \"`%s` uses `getDerivedStateFromProps` but its initial state is \" +\n            \"%s. This is not recommended. Instead, define the initial state by \" +\n            \"assigning an object to `this.state` in the constructor of `%s`. \" +\n            \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",\n          componentName,\n          instance.state === null ? \"null\" : \"undefined\",\n          componentName\n        );\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n    if (\n      typeof ctor.getDerivedStateFromProps === \"function\" ||\n      typeof instance.getSnapshotBeforeUpdate === \"function\"\n    ) {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (\n        typeof instance.componentWillMount === \"function\" &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = \"componentWillMount\";\n      } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        foundWillMountName = \"UNSAFE_componentWillMount\";\n      }\n\n      if (\n        typeof instance.componentWillReceiveProps === \"function\" &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = \"componentWillReceiveProps\";\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\n      ) {\n        foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n      }\n\n      if (\n        typeof instance.componentWillUpdate === \"function\" &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = \"componentWillUpdate\";\n      } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n        foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n      }\n\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        var _componentName = getComponentNameFromType(ctor) || \"Component\";\n\n        var newApiName =\n          typeof ctor.getDerivedStateFromProps === \"function\"\n            ? \"getDerivedStateFromProps()\"\n            : \"getSnapshotBeforeUpdate()\";\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error(\n            \"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" +\n              \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" +\n              \"The above lifecycles should be removed. Learn more about this warning here:\\n\" +\n              \"https://reactjs.org/link/unsafe-component-lifecycles\",\n            _componentName,\n            newApiName,\n            foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\",\n            foundWillReceivePropsName !== null\n              ? \"\\n  \" + foundWillReceivePropsName\n              : \"\",\n            foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\"\n          );\n        }\n      }\n    }\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === \"function\") {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error(\n        \"%s.componentWillMount(): Assigning directly to this.state is \" +\n          \"deprecated (except inside a component's \" +\n          \"constructor). Use setState instead.\",\n        getComponentNameFromFiber(workInProgress) || \"Component\"\n      );\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === \"function\") {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    {\n      var componentName =\n        getComponentNameFromFiber(workInProgress) || \"Component\";\n\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n\n        error(\n          \"%s.componentWillReceiveProps(): Assigning directly to \" +\n            \"this.state is deprecated (except inside a component's \" +\n            \"constructor). Use setState instead.\",\n          componentName\n        );\n      }\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error(\n          \"%s: It is not recommended to assign props directly to state \" +\n            \"because updates to props won't be reflected in state. \" +\n            \"In most cases, it is better to use props directly.\",\n          componentName\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance\n      );\n    }\n\n    {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    typeof ctor.getDerivedStateFromProps !== \"function\" &&\n    typeof instance.getSnapshotBeforeUpdate !== \"function\" &&\n    (typeof instance.UNSAFE_componentWillMount === \"function\" ||\n      typeof instance.componentWillMount === \"function\")\n  ) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === \"function\") {\n    var fiberFlags = Update;\n\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles =\n    typeof getDerivedStateFromProps === \"function\" ||\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\n      typeof instance.componentWillReceiveProps === \"function\")\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === \"function\") {\n      var fiberFlags = Update;\n\n      workInProgress.flags |= fiberFlags;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === \"function\" ||\n        typeof instance.componentWillMount === \"function\")\n    ) {\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === \"function\") {\n      var _fiberFlags = Update;\n\n      workInProgress.flags |= _fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === \"function\") {\n      var _fiberFlags2 = Update;\n\n      workInProgress.flags |= _fiberFlags2;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\nfunction updateClassInstance(\n  current,\n  workInProgress,\n  ctor,\n  newProps,\n  renderLanes\n) {\n  var instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  var unresolvedOldProps = workInProgress.memoizedProps;\n  var oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  var unresolvedNewProps = workInProgress.pendingProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === \"object\" && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles =\n    typeof getDerivedStateFromProps === \"function\" ||\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\n      typeof instance.componentWillReceiveProps === \"function\")\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !enableLazyContextPropagation\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === \"function\") {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext\n    ) || // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    enableLazyContextPropagation;\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === \"function\" ||\n        typeof instance.componentWillUpdate === \"function\")\n    ) {\n      if (typeof instance.componentWillUpdate === \"function\") {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === \"function\") {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\nvar didWarnAboutMaps;\nvar didWarnAboutGenerators;\nvar didWarnAboutStringRefs;\nvar ownerHasKeyUseWarning;\nvar ownerHasFunctionTypeWarning;\n\nvar warnForMissingKey = function(child, returnFiber) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function(child, returnFiber) {\n    if (child === null || typeof child !== \"object\") {\n      return;\n    }\n\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== \"object\") {\n      throw new Error(\n        \"React Component in warnForMissingKey should have a _store. \" +\n          \"This error is likely caused by a bug in React. Please file an issue.\"\n      );\n    }\n\n    child._store.validated = true;\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[componentName] = true;\n\n    error(\n      \"Each child in a list should have a unique \" +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        \"more information.\"\n    );\n  };\n}\n\nfunction coerceRef(returnFiber, current, element) {\n  var mixedRef = element.ref;\n\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== \"function\" &&\n    typeof mixedRef !== \"object\"\n  ) {\n    {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        var componentName =\n          getComponentNameFromFiber(returnFiber) || \"Component\";\n\n        if (!didWarnAboutStringRefs[componentName]) {\n          {\n            error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                \"String refs are a source of potential bugs and should be avoided. \" +\n                \"We recommend using useRef() or createRef() instead. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-string-ref\",\n              mixedRef\n            );\n          }\n\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst;\n\n      if (owner) {\n        var ownerFiber = owner;\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error(\n            \"Function components cannot have string refs. \" +\n              \"We recommend using useRef() instead. \" +\n              \"Learn more about using refs safely here: \" +\n              \"https://reactjs.org/link/strict-mode-string-ref\"\n          );\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\n          \"Missing owner for string ref \" +\n            mixedRef +\n            \". This error is likely caused by a \" +\n            \"bug in React. Please file an issue.\"\n        );\n      } // Assigning this to a const so Flow knows it won't change in the closure\n\n      var resolvedInst = inst;\n\n      {\n        checkPropStringCoercion(mixedRef, \"ref\");\n      }\n\n      var stringRef = \"\" + mixedRef; // Check if previous string ref matches new string ref\n\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === \"function\" &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n\n      var ref = function(value) {\n        var refs = resolvedInst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== \"string\") {\n        throw new Error(\n          \"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\"\n        );\n      }\n\n      if (!element._owner) {\n        throw new Error(\n          \"Element ref was specified as a string (\" +\n            mixedRef +\n            \") but no owner was set. This could happen for one of\" +\n            \" the following reasons:\\n\" +\n            \"1. You may be adding a ref to a function component\\n\" +\n            \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n            \"3. You have multiple copies of React loaded\\n\" +\n            \"See https://reactjs.org/link/refs-must-have-owner for more information.\"\n        );\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  var childString = Object.prototype.toString.call(newChild);\n  throw new Error(\n    \"Objects are not valid as a React child (found: \" +\n      (childString === \"[object Object]\"\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : childString) +\n      \"). \" +\n      \"If you meant to render a collection of children, use an array \" +\n      \"instead.\"\n  );\n}\n\nfunction warnOnFunctionType(returnFiber) {\n  {\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    error(\n      \"Functions are not valid as a React child. This may happen if \" +\n        \"you return a Component instead of <Component /> from render. \" +\n        \"Or maybe you meant to call this function rather than return it.\"\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  var payload = lazyType._payload;\n  var init = lazyType._init;\n  return init(payload);\n} // This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n    var childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    var existingChildren = new Map();\n    var existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n\n    var current = newFiber.alternate;\n\n    if (current !== null) {\n      var oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    }\n\n    if (current !== null) {\n      if (\n        current.elementType === elementType || // Keep this check inline so it only runs on the false path:\n        isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (typeof elementType === \"object\" &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        var existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n\n        return existing;\n      }\n    } // Insert\n\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          var _created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes\n          );\n\n          _created.ref = coerceRef(returnFiber, null, newChild);\n          _created.return = returnFiber;\n          return _created;\n        }\n\n        case REACT_PORTAL_TYPE: {\n          var _created2 = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes\n          );\n\n          _created2.return = returnFiber;\n          return _created2;\n        }\n\n        case REACT_LAZY_TYPE: {\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return createChild(returnFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null\n        );\n\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n\n        case REACT_LAZY_TYPE: {\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n    }\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          var _matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key\n            ) || null;\n\n          return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n        }\n\n        case REACT_PORTAL_TYPE: {\n          var _matchedFiber2 =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key\n            ) || null;\n\n          return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n        }\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init;\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            init(payload),\n            lanes\n          );\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n        return updateFragment(\n          returnFiber,\n          _matchedFiber3,\n          newChild,\n          lanes,\n          null\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\n    {\n      if (typeof child !== \"object\" || child === null) {\n        return knownKeys;\n      }\n\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          var key = child.key;\n\n          if (typeof key !== \"string\") {\n            break;\n          }\n\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n\n          error(\n            \"Encountered two children with the same key, `%s`. \" +\n              \"Keys should be unique so that components maintain their identity \" +\n              \"across updates. Non-unique keys may cause children to be \" +\n              \"duplicated and/or omitted — the behavior is unsupported and \" +\n              \"could change in a future version.\",\n            key\n          );\n\n          break;\n\n        case REACT_LAZY_TYPE:\n          var payload = child._payload;\n          var init = child._init;\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n          break;\n      }\n    }\n\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n    {\n      // First, validate keys.\n      var knownKeys = null;\n\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (_newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n\n        previousNewFiber = _newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      );\n\n      if (_newFiber2 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              _newFiber2.key === null ? newIdx : _newFiber2.key\n            );\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function(child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildrenIterable,\n    lanes\n  ) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== \"function\") {\n      throw new Error(\n        \"An object is not an iterable. This error is likely caused by a bug in \" +\n          \"React. Please file an issue.\"\n      );\n    }\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === \"function\" && // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === \"Generator\"\n      ) {\n        if (!didWarnAboutGenerators) {\n          error(\n            \"Using Generators as children is unsupported and will likely yield \" +\n              \"unexpected results because enumerating a generator mutates it. \" +\n              \"You may convert it to an array with `Array.from()` or the \" +\n              \"`[...spread]` operator before rendering. Keep in mind \" +\n              \"you might need to polyfill these features for older browsers.\"\n          );\n        }\n\n        didWarnAboutGenerators = true;\n      } // Warn about using Maps as children\n\n      if (newChildrenIterable.entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          error(\n            \"Using Maps as children is not supported. \" +\n              \"Use an array of keyed ReactElements instead.\"\n          );\n        }\n\n        didWarnAboutMaps = true;\n      } // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n\n      if (_newChildren) {\n        var knownKeys = null;\n\n        var _step = _newChildren.next();\n\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error(\"An iterable object provided no iterator.\");\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    var step = newChildren.next();\n\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n        if (_newFiber3 === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n\n        previousNewFiber = _newFiber3;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes\n      );\n\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              _newFiber4.key === null ? newIdx : _newFiber4.key\n            );\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function(child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber,\n    currentFirstChild,\n    textContent,\n    lanes\n  ) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber,\n    currentFirstChild,\n    element,\n    lanes\n  ) {\n    var key = element.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            var existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType || // Keep this check inline so it only runs on the false path:\n            isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (typeof elementType === \"object\" &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n\n            var _existing = useFiber(child, element.props);\n\n            _existing.ref = coerceRef(returnFiber, child, element);\n            _existing.return = returnFiber;\n\n            {\n              _existing._debugSource = element._source;\n              _existing._debugOwner = element._owner;\n            }\n\n            return _existing;\n          }\n        } // Didn't match.\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber,\n    currentFirstChild,\n    portal,\n    lanes\n  ) {\n    var key = portal.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n  function reconcileChildFibers(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment =\n      typeof newChild === \"object\" &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n    if (typeof newChild === \"object\" && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n\n        case REACT_LAZY_TYPE:\n          var payload = newChild._payload;\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\n\n          return reconcileChildFibers(\n            returnFiber,\n            currentFirstChild,\n            init(payload),\n            lanes\n          );\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (\n      (typeof newChild === \"string\" && newChild !== \"\") ||\n      typeof newChild === \"number\"\n    ) {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          \"\" + newChild,\n          lanes\n        )\n      );\n    }\n\n    {\n      if (typeof newChild === \"function\") {\n        warnOnFunctionType(returnFiber);\n      }\n    } // Remaining cases are all treated as empty.\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error(\"Resuming work not yet implemented.\");\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps\n    );\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  var child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nvar NO_CONTEXT = {};\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\n\nfunction requiredContext(c) {\n  if (c === NO_CONTEXT) {\n    throw new Error(\n      \"Expected host context to exist. This error is likely caused by a bug \" +\n        \"in React. Please file an issue.\"\n    );\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\n  var nextRootContext = getRootHostContext(); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nvar ForceSuspenseFallback = 2;\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext, fiber);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor, fiber);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\n\n  {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n}\nfunction findFirstSuspended(row) {\n  var node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        var dehydrated = state.dehydrated;\n\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending() ||\n          isSuspenseInstanceFallback()\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nvar NoFlags$1 =\n  /*   */\n  0; // Represents whether effect should fire.\n\nvar HasEffect =\n  /* */\n  1; // Represents the phase in which the effect (not the clean-up) fires.\n\nvar Insertion =\n  /*  */\n  2;\nvar Layout =\n  /*    */\n  4;\nvar Passive$1 =\n  /*   */\n  8;\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nvar workInProgressSources = [];\nfunction resetWorkInProgressVersions() {\n  for (var i = 0; i < workInProgressSources.length; i++) {\n    var mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionPrimary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n  ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar didWarnAboutMismatchedHooksForComponent;\nvar didWarnUncachedGetSnapshot;\n\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nvar currentHook = null;\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\n\nvar globalClientIdCounter = 0;\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\n\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\n\nvar ignorePreviousDependencies = false;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps) {\n  {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      error(\n        \"%s received a final argument that is not an array (instead, received `%s`). When \" +\n          \"specified, the final argument must be an array.\",\n        currentHookNameInDev,\n        typeof deps\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = \"\";\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName =\n            i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n\n          while (row.length < secondColumnStart) {\n            row += \" \";\n          }\n\n          row += newHookName + \"\\n\";\n          table += row;\n        }\n\n        error(\n          \"React has detected a change in the order of Hooks called by %s. \" +\n            \"This will lead to bugs and errors if not fixed. \" +\n            \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" +\n            \"   Previous render            Next render\\n\" +\n            \"   ------------------------------------------------------\\n\" +\n            \"%s\" +\n            \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\",\n          componentName,\n          table\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error(\n    \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" +\n      \" one of the following reasons:\\n\" +\n      \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" +\n      \"2. You might be breaking the Rules of Hooks\\n\" +\n      \"3. You might have more than one copy of React in the same app\\n\" +\n      \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n  );\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    {\n      error(\n        \"%s received a final argument during this render, but not during \" +\n          \"the previous render. Even though the final argument is optional, \" +\n          \"its type cannot change between renders.\",\n        currentHookNameInDev\n      );\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error(\n        \"The final argument passed to %s changed size between renders. The \" +\n          \"order and size of this array must remain constant.\\n\\n\" +\n          \"Previous: %s\\n\" +\n          \"Incoming: %s\",\n        currentHookNameInDev,\n        \"[\" + prevDeps.join(\", \") + \"]\",\n        \"[\" + nextDeps.join(\", \") + \"]\"\n      );\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\n\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    var numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error(\n          \"Too many re-renders. React limits the number of renders to prevent \" +\n            \"an infinite loop.\"\n        );\n      }\n\n      numberOfReRenders += 1;\n\n      {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      } // Start over from the beginning of the list\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  {\n    workInProgress._debugHookTypes = hookTypesDev;\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n\n    if (\n      current !== null &&\n      (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      error(\n        \"Internal React error: Expected static flag was missing. Please \" +\n          \"notify the React team.\"\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error(\n      \"Rendered fewer hooks than expected. This may be caused by an accidental \" +\n        \"early return statement.\"\n    );\n  }\n\n  return children;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n\n  {\n    workInProgress.flags &= ~(Passive | Update);\n  }\n\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    var hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      var queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n    currentHookNameInDev = null;\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  var nextCurrentHook;\n\n  if (currentHook === null) {\n    var current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  var nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error(\"Rendered more hooks than during the previous render.\");\n    }\n\n    currentHook = nextCurrentHook;\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null,\n    stores: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === \"function\" ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = (queue.dispatch = dispatchReducerAction.bind(\n    null,\n    currentlyRenderingFiber$1,\n    queue\n  ));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\n    );\n  }\n\n  queue.lastRenderedReducer = reducer;\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  var pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      var baseFirst = baseQueue.next;\n      var pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        error(\n          \"Internal error: Expected work-in-progress queue to be a clone. \" +\n            \"This is a bug in React.\"\n        );\n      }\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    var first = baseQueue.next;\n    var newState = current.baseState;\n    var newBaseState = null;\n    var newBaseQueueFirst = null;\n    var newBaseQueueLast = null;\n    var update = first;\n\n    do {\n      var updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(\n          currentlyRenderingFiber$1.lanes,\n          updateLane\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          var _clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\n        } // Process this update.\n\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          var action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  } // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n\n  var lastInterleaved = queue.interleaved;\n\n  if (lastInterleaved !== null) {\n    var interleaved = lastInterleaved;\n\n    do {\n      var interleavedLane = interleaved.lane;\n      currentlyRenderingFiber$1.lanes = mergeLanes(\n        currentlyRenderingFiber$1.lanes,\n        interleavedLane\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = interleaved.next;\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error(\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\n    );\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  var dispatch = queue.dispatch;\n  var lastRenderPhaseUpdate = queue.pending;\n  var newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    var update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      var action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = mountWorkInProgressHook();\n  var nextSnapshot;\n\n  {\n    nextSnapshot = getSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedSnapshot = getSnapshot();\n\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\n          error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          );\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  } // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  hook.memoizedState = nextSnapshot;\n  var inst = {\n    value: nextSnapshot,\n    getSnapshot: getSnapshot\n  };\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\n\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n\n  fiber.flags |= Passive;\n  pushEffect(\n    HasEffect | Passive$1,\n    updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n    undefined,\n    null\n  );\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  var nextSnapshot = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedSnapshot = getSnapshot();\n\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\n        error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  var prevSnapshot = hook.memoizedState;\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n\n  var inst = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n    subscribe\n  ]); // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n\n  if (\n    inst.getSnapshot !== getSnapshot ||\n    snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\n    // checking whether we scheduled a subscription effect above.\n    (workInProgressHook !== null &&\n      workInProgressHook.memoizedState.tag & HasEffect)\n  ) {\n    fiber.flags |= Passive;\n    pushEffect(\n      HasEffect | Passive$1,\n      updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\n      undefined,\n      null\n    ); // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error(\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\n      );\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= StoreConsistency;\n  var check = {\n    getSnapshot: getSnapshot,\n    value: renderedSnapshot\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.stores = [check];\n  } else {\n    var stores = componentUpdateQueue.stores;\n\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  var handleStoreChange = function() {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }; // Subscribe to the store and return a clean-up function.\n\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n\n  if (typeof initialState === \"function\") {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = (queue.dispatch = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    queue\n  ));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n\n  {\n    var _ref2 = {\n      current: initialValue\n    };\n    hook.memoizedState = _ref2;\n    return _ref2;\n  }\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps\n  );\n}\n\nfunction mountEffect(create, deps) {\n  {\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n  }\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Passive, Passive$1, create, deps);\n}\n\nfunction mountInsertionEffect(create, deps) {\n  return mountEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === \"function\") {\n    var refCallback = ref;\n\n    var _inst = create();\n\n    refCallback(_inst);\n    return function() {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n\n    {\n      if (!refObject.hasOwnProperty(\"current\")) {\n        error(\n          \"Expected useImperativeHandle() first argument to either be a \" +\n            \"ref callback or React.createRef() object. Instead received: %s.\",\n          \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\"\n        );\n      }\n    }\n\n    var _inst2 = create();\n\n    refObject.current = _inst2;\n    return function() {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== \"function\") {\n      error(\n        \"Expected useImperativeHandle() second argument to be a function \" +\n          \"that creates a handle. Instead received: %s.\",\n        create !== null ? typeof create : \"null\"\n      );\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n  var effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  var fiberFlags = Update;\n\n  return mountEffectImpl(\n    fiberFlags,\n    Layout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps\n  );\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== \"function\") {\n      error(\n        \"Expected useImperativeHandle() second argument to be a function \" +\n          \"that creates a handle. Instead received: %s.\",\n        create !== null ? typeof create : \"null\"\n      );\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n  var effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(\n    Update,\n    Layout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps\n  );\n}\n\nfunction mountDebugValue(value, formatterFn) {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = value;\n  return value;\n}\n\nfunction updateDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n  var resolvedCurrentHook = currentHook;\n  var prevValue = resolvedCurrentHook.memoizedState;\n  return updateDeferredValueImpl(hook, prevValue, value);\n}\n\nfunction rerenderDeferredValue(value) {\n  var hook = updateWorkInProgressHook();\n\n  if (currentHook === null) {\n    // This is a rerender during a mount.\n    hook.memoizedState = value;\n    return value;\n  } else {\n    // This is a rerender during an update.\n    var prevValue = currentHook.memoizedState;\n    return updateDeferredValueImpl(hook, prevValue, value);\n  }\n}\n\nfunction updateDeferredValueImpl(hook, prevValue, value) {\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n\n  if (shouldDeferValue) {\n    // This is an urgent update. If the value has changed, keep using the\n    // previous value and spawn a deferred render to update it later.\n    if (!objectIs(value, prevValue)) {\n      // Schedule a deferred render\n      var deferredLane = claimNextTransitionLane();\n      currentlyRenderingFiber$1.lanes = mergeLanes(\n        currentlyRenderingFiber$1.lanes,\n        deferredLane\n      );\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\n      // from the latest value. The name \"baseState\" doesn't really match how we\n      // use it because we're reusing a state hook field instead of creating a\n      // new one.\n\n      hook.baseState = true;\n    } // Reuse the previous value\n\n    return prevValue;\n  } else {\n    // This is not an urgent update, so we can use the latest value regardless\n    // of what it is. No need to defer it.\n    // However, if we're currently inside a spawned render, then we need to mark\n    // this as an update to prevent the fiber from bailing out.\n    //\n    // `baseState` is true when the current value is different from the rendered\n    // value. The name doesn't really match how we use it because we're reusing\n    // a state hook field instead of creating a new one.\n    if (hook.baseState) {\n      // Flip this back to false.\n      hook.baseState = false;\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = value;\n    return value;\n  }\n}\n\nfunction startTransition(setPending, callback, options) {\n  var previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority)\n  );\n  setPending(true);\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\n  ReactCurrentBatchConfig$1.transition = {};\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\n\n  {\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$1.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn(\n            \"Detected a large number of updates inside startTransition. \" +\n              \"If this is due to a subscription please re-write it to use React provided hooks. \" +\n              \"Otherwise concurrent mode guarantees are off the table.\"\n          );\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition() {\n  var _mountState = mountState(false),\n    isPending = _mountState[0],\n    setPending = _mountState[1]; // The `start` method never changes.\n\n  var start = startTransition.bind(null, setPending);\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition() {\n  var _updateState = updateState(),\n    isPending = _updateState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition() {\n  var _rerenderState = rerenderState(),\n    isPending = _rerenderState[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nvar isUpdatingOpaqueValueInRenderPhase = false;\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n  {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId() {\n  var hook = mountWorkInProgressHook();\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n\n  var identifierPrefix = root.identifierPrefix;\n  var id;\n\n  {\n    // Use a lowercase r prefix for client-generated ids.\n    var globalClientId = globalClientIdCounter++;\n    id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId() {\n  var hook = updateWorkInProgressHook();\n  var id = hook.memoizedState;\n  return id;\n}\n\nfunction dispatchReducerAction(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === \"function\") {\n      error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          \"second callback argument. To execute a side effect after \" +\n          \"rendering, declare it in the component body with useEffect().\"\n      );\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    enqueueUpdate$1(fiber, queue, update);\n    var eventTime = requestEventTime();\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction dispatchSetState(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === \"function\") {\n      error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          \"second callback argument. To execute a side effect after \" +\n          \"rendering, declare it in the component body with useEffect().\"\n      );\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    enqueueUpdate$1(fiber, queue, update);\n    var alternate = fiber.alternate;\n\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        var prevDispatcher;\n\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n\n        try {\n          var currentState = queue.lastRenderedState;\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    var eventTime = requestEventTime();\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber$1 ||\n    (alternate !== null && alternate === currentlyRenderingFiber$1)\n  );\n}\n\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  var pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n}\n\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  if (isInterleavedUpdate(fiber)) {\n    var interleaved = queue.interleaved;\n\n    if (interleaved === null) {\n      // This is the first update. Create a circular list.\n      update.next = update; // At the end of the current render, this queue's interleaved updates will\n      // be transferred to the pending queue.\n\n      pushInterleavedQueue(queue);\n    } else {\n      update.next = interleaved.next;\n      interleaved.next = update;\n    }\n\n    queue.interleaved = update;\n  } else {\n    var pending = queue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    queue.pending = update;\n  }\n}\n\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (isTransitionLane(lane)) {\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar HooksDispatcherOnRerenderInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n\n{\n  var warnInvalidContextAccess = function() {\n    error(\n      \"Context can only be read while React is rendering. \" +\n        \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\n        \"In function components, you can read it directly in the function body, but not \" +\n        \"inside Hooks like useReducer() or useMemo().\"\n    );\n  };\n\n  var warnInvalidHookAccess = function() {\n    error(\n      \"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" +\n        \"You can only call Hooks at the top level of your React function. \" +\n        \"For more information, see \" +\n        \"https://reactjs.org/link/rules-of-hooks\"\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext: function(context) {\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext: function(context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function(callback, deps) {\n      currentHookNameInDev = \"useCallback\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function(context) {\n      currentHookNameInDev = \"useContext\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function(create, deps) {\n      currentHookNameInDev = \"useEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function(ref, create, deps) {\n      currentHookNameInDev = \"useImperativeHandle\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function(create, deps) {\n      currentHookNameInDev = \"useInsertionEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function(create, deps) {\n      currentHookNameInDev = \"useLayoutEffect\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function(create, deps) {\n      currentHookNameInDev = \"useMemo\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function(reducer, initialArg, init) {\n      currentHookNameInDev = \"useReducer\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function(initialValue) {\n      currentHookNameInDev = \"useRef\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function(initialState) {\n      currentHookNameInDev = \"useState\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function(value, formatterFn) {\n      currentHookNameInDev = \"useDebugValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function(value) {\n      currentHookNameInDev = \"useDeferredValue\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function() {\n      currentHookNameInDev = \"useTransition\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function(source, getSnapshot, subscribe) {\n      currentHookNameInDev = \"useMutableSource\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = \"useSyncExternalStore\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function() {\n      currentHookNameInDev = \"useId\";\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n}\n\nvar now$1 = Scheduler.unstable_now;\nvar commitTime = 0;\nvar layoutEffectStartTime = -1;\nvar profilerStartTime = -1;\nvar passiveEffectStartTime = -1;\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\n\nvar currentUpdateIsNested = false;\nvar nestedUpdateScheduled = false;\n\nfunction isCurrentUpdateNested() {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled() {\n  {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n  if (profilerStartTime >= 0) {\n    var elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber) {\n  if (layoutEffectStartTime >= 0) {\n    var elapsedTime = now$1() - layoutEffectStartTime;\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n  if (passiveEffectStartTime >= 0) {\n    var elapsedTime = now$1() - passiveEffectStartTime;\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer() {\n  layoutEffectStartTime = now$1();\n}\n\nfunction startPassiveEffectTimer() {\n  passiveEffectStartTime = now$1();\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  var child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nfunction createCapturedValue(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\n\nif (\n  typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !==\n  \"function\"\n) {\n  throw new Error(\n    \"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\"\n  );\n}\n\nfunction showErrorDialog(boundary, errorInfo) {\n  var capturedError = {\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n    error: errorInfo.value,\n    errorBoundary:\n      boundary !== null && boundary.tag === ClassComponent\n        ? boundary.stateNode\n        : null\n  };\n  return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(\n    capturedError\n  );\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    var error = errorInfo.value;\n\n    if (true) {\n      var source = errorInfo.source;\n      var stack = errorInfo.stack;\n      var componentStack = stack !== null ? stack : \"\"; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n        console[\"error\"](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      var componentName = source ? getComponentNameFromFiber(source) : null;\n      var componentNameMessage = componentName\n        ? \"The above error occurred in the <\" + componentName + \"> component:\"\n        : \"The above error occurred in one of your React components:\";\n      var errorBoundaryMessage;\n\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" +\n          \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n      } else {\n        var errorBoundaryName =\n          getComponentNameFromFiber(boundary) || \"Anonymous\";\n        errorBoundaryMessage =\n          \"React will try to recreate this component tree from scratch \" +\n          (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      }\n\n      var combinedMessage =\n        componentNameMessage +\n        \"\\n\" +\n        componentStack +\n        \"\\n\\n\" +\n        (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console[\"error\"](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console[\"error\"](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function() {\n      throw e;\n    });\n  }\n}\n\nvar PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  var error = errorInfo.value;\n\n  update.callback = function() {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === \"function\") {\n    var error$1 = errorInfo.value;\n\n    update.payload = function() {\n      return getDerivedStateFromError(error$1);\n    };\n\n    update.callback = function() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  var inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n    update.callback = function callback() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n\n      if (typeof getDerivedStateFromError !== \"function\") {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n\n      var error$1 = errorInfo.value;\n      var stack = errorInfo.stack;\n      this.componentDidCatch(error$1, {\n        componentStack: stack !== null ? stack : \"\"\n      });\n\n      {\n        if (typeof getDerivedStateFromError !== \"function\") {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\n            error(\n              \"%s: Error boundaries should implement getDerivedStateFromError(). \" +\n                \"In that method, return a state update to display an error message or fallback UI.\",\n              getComponentNameFromFiber(fiber) || \"Unknown\"\n            );\n          }\n        }\n      }\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  var pingCache = root.pingCache;\n  var threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n\n    {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  var wakeables = suspenseBoundary.updateQueue;\n\n  if (wakeables === null) {\n    var updateQueue = new Set();\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n  // A legacy mode Suspense quirk, only relevant to hook components.\n\n  var tag = sourceFiber.tag;\n\n  if (\n    (sourceFiber.mode & ConcurrentMode) === NoMode &&\n    (tag === FunctionComponent ||\n      tag === ForwardRef ||\n      tag === SimpleMemoComponent)\n  ) {\n    var currentSource = sourceFiber.alternate;\n\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\n  var node = returnFiber;\n\n  do {\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n      return node;\n    } // This boundary already captured during this render. Continue to the next\n    // boundary.\n\n    node = node.return;\n  } while (node !== null);\n\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(\n  suspenseBoundary,\n  returnFiber,\n  sourceFiber,\n  root,\n  rootRenderLanes\n) {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        var currentSourceFiber = sourceFiber.alternate;\n\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          var update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update);\n        }\n      } // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n\n    return suspenseBoundary;\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === \"object\" &&\n    typeof value.then === \"function\"\n  ) {\n    // This is a wakeable. The component suspended.\n    var wakeable = value;\n    resetSuspendedComponent(sourceFiber);\n\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(\n        suspenseBoundary,\n        returnFiber,\n        sourceFiber,\n        root,\n        rootRenderLanes\n      ); // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n\n      attachRetryListener(suspenseBoundary, root, wakeable);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      } // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n\n      var uncaughtSuspenseError = new Error(\n        \"A component suspended while responding to synchronous input. This \" +\n          \"will cause the UI to be replaced with a loading indicator. To \" +\n          \"fix, updates that suspend should be wrapped \" +\n          \"with startTransition.\"\n      ); // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n\n      value = uncaughtSuspenseError;\n    }\n  } // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n  renderDidError(value);\n  value = createCapturedValue(value, sourceFiber);\n  var workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        var _errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        var lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === \"function\" ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === \"function\" &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n\n          var _lane = pickArbitraryLane(rootRenderLanes);\n\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\n\n          var _update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            _lane\n          );\n\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction getSuspendedCache() {\n  {\n    return null;\n  } // This function is called when a Suspense boundary suspends. It returns the\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar didReceiveUpdate = false;\nvar didWarnAboutBadClass;\nvar didWarnAboutModulePatternComponent;\nvar didWarnAboutContextTypeOnFunctionComponent;\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\nvar didWarnAboutFunctionRefs;\nvar didWarnAboutReassigningProps;\nvar didWarnAboutRevealOrder;\nvar didWarnAboutTailOptions;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n}\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes\n  ); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes\n  );\n}\n\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes\n    );\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (current === null) {\n    var type = Component.type;\n\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      var resolvedType = type;\n\n      {\n        resolvedType = resolveFunctionForHotReloading(type);\n      } // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes\n      );\n    }\n\n    {\n      var innerPropTypes = type.propTypes;\n\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(type)\n        );\n      }\n    }\n\n    var child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        _innerPropTypes,\n        nextProps, // Resolved props\n        \"prop\",\n        getComponentNameFromType(_type)\n      );\n    }\n  }\n\n  var currentChild = current.child; // This is always exactly one child\n\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes\n  );\n\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n  workInProgress.flags |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        var lazyComponent = outerMemoType;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        } // Inner propTypes will be validated in the function component path.\n\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            \"prop\",\n            getComponentNameFromType(outerMemoType)\n          );\n        }\n      }\n    }\n  }\n\n  if (current !== null) {\n    var prevProps = current.memoizedProps;\n\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload.\n      workInProgress.type === current.type\n    ) {\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\n      // would during a normal fiber bailout.\n      //\n      // We don't have strong guarantees that the props object is referentially\n      // equal during updates where we can't bail out anyway — like if the props\n      // are shallowly equal, but there's a local state or context update in the\n      // same batch.\n      //\n      // However, as a principle, we should aim to make the behavior consistent\n      // across different ways of memoizing a component. For example, React.memo\n      // has a different internal Fiber layout if you pass a normal function\n      // component (SimpleMemoComponent) versus if you pass a different type\n      // like forwardRef (MemoComponent). But this is an implementation detail.\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\n      // affect whether the props object is reused during a bailout.\n\n      workInProgress.pendingProps = nextProps = prevProps;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  var prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      // TODO: Consider how Offscreen should work with transitions in the future\n      var nextState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = nextState;\n\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n\n      var nextBaseLanes;\n\n      if (prevState !== null) {\n        var prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane\n      );\n      var _nextState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState;\n      workInProgress.updateQueue = null;\n      // to avoid a push/pop misalignment.\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n      // Rendering at offscreen, so we can clear the base lanes.\n      var _nextState2 = {\n        baseLanes: NoLanes,\n        cachePool: null,\n        transitions: null\n      };\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\n\n      var subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    var _subtreeRenderLanes;\n\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      _subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\n  }\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update;\n\n    {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      var stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  }\n\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes\n    );\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        var _instance = workInProgress.stateNode;\n        var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n\n        var tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          _instance.context\n        );\n        var state = tempInstance.state;\n\n        _instance.updater.enqueueSetState(_instance, state, null);\n\n        break;\n      }\n\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\n\n        var error$1 = new Error(\"Simulated error coming from DevTools\");\n        var lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n        var update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValue(error$1, workInProgress),\n          lane\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          \"prop\",\n          getComponentNameFromType(Component)\n        );\n      }\n    }\n  } // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var instance = workInProgress.stateNode;\n  var shouldUpdate;\n\n  if (instance === null) {\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes\n    );\n  }\n\n  var nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes\n  );\n\n  {\n    var inst = workInProgress.stateNode;\n\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        error(\n          \"It looks like %s is reassigning its own `this.props` while rendering. \" +\n            \"This is not supported and can lead to confusing bugs.\",\n          getComponentNameFromFiber(workInProgress) || \"a component\"\n        );\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current,\n  workInProgress,\n  Component,\n  shouldUpdate,\n  hasContext,\n  renderLanes\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  var instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  var nextChildren;\n\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== \"function\"\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n    {\n      setIsRendering(true);\n      nextChildren = instance.render();\n\n      setIsRendering(false);\n    }\n  } // React DevTools reads this flag.\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error(\"Should have a current fiber. This is a bug in React.\");\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n  var nextChildren = nextState.element;\n\n  {\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n\n  if (prevProps !== null && shouldSetTextContent()) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  // immediately after.\n\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var lazyComponent = elementType;\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  var resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child;\n\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component\n        );\n      }\n\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case ClassComponent: {\n      {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component\n        );\n      }\n\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case ForwardRef: {\n      {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component\n        );\n      }\n\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n      return child;\n    }\n\n    case MemoComponent: {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerPropTypes = Component.propTypes;\n\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              \"prop\",\n              getComponentNameFromType(Component)\n            );\n          }\n        }\n      }\n\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes\n      );\n      return child;\n    }\n  }\n\n  var hint = \"\";\n\n  {\n    if (\n      Component !== null &&\n      typeof Component === \"object\" &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = \" Did you wrap a component in React.lazy() more than once?\";\n    }\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n  throw new Error(\n    \"Element type is invalid. Received a promise that resolves to: \" +\n      Component +\n      \". \" +\n      (\"Lazy element type must resolve to a class or function.\" + hint)\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes\n) {\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n  var props = workInProgress.pendingProps;\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var value;\n\n  {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === \"function\"\n    ) {\n      var componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            \"This is likely to cause errors. Change %s to extend React.Component instead.\",\n          componentName,\n          componentName\n        );\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes\n    );\n    setIsRendering(false);\n  }\n\n  workInProgress.flags |= PerformedWork;\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === \"object\" &&\n      value !== null &&\n      typeof value.render === \"function\" &&\n      value.$$typeof === undefined\n    ) {\n      var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error(\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\n            \"Change %s to a class that extends React.Component instead. \" +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            \"cannot be called with `new` by React.\",\n          _componentName,\n          _componentName,\n          _componentName\n        );\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    typeof value === \"object\" &&\n    value !== null &&\n    typeof value.render === \"function\" &&\n    value.$$typeof === undefined\n  ) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error(\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\n            \"Change %s to a class that extends React.Component instead. \" +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            \"cannot be called with `new` by React.\",\n          _componentName2,\n          _componentName2,\n          _componentName2\n        );\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    } // Proceed under the assumption that this is a class instance\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    var hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error(\n          \"%s(...): childContextTypes cannot be defined on a function component.\",\n          Component.displayName || Component.name || \"Component\"\n        );\n      }\n    }\n\n    if (workInProgress.ref !== null) {\n      var info = \"\";\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n      if (ownerName) {\n        info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n      }\n\n      var warningKey = ownerName || \"\";\n      var debugSource = workInProgress._debugSource;\n\n      if (debugSource) {\n        warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n      }\n\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n\n        error(\n          \"Function components cannot be given refs. \" +\n            \"Attempts to access this ref will fail. \" +\n            \"Did you mean to use React.forwardRef()?%s\",\n          info\n        );\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === \"function\") {\n      var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error(\n          \"%s: Function components do not support getDerivedStateFromProps.\",\n          _componentName3\n        );\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === \"object\" &&\n      Component.contextType !== null\n    ) {\n      var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error(\n          \"%s: Function components do not support contextType.\",\n          _componentName4\n        );\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache(),\n    transitions: null\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  var cachePool = null;\n\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool: cachePool,\n    transitions: prevOffscreenState.transitions\n  };\n} // TODO: Probably should inline this back\n\nfunction shouldRemainOnFallback(\n  suspenseContext,\n  current,\n  workInProgress,\n  renderLanes\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    var suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  var suspenseContext = suspenseStackCursor.current;\n  var showFallback = false;\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n    var suspenseState = workInProgress.memoizedState;\n\n    if (suspenseState !== null) {\n      var dehydrated = suspenseState.dehydrated;\n\n      if (dehydrated !== null) {\n        return mountDehydratedSuspenseComponent(workInProgress);\n      }\n    }\n\n    var nextPrimaryChildren = nextProps.children;\n    var nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      var fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes\n      );\n      var primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n    }\n  } else {\n    // This is an update.\n    // Special path for hydration\n    var prevState = current.memoizedState;\n\n    if (prevState !== null) {\n      var _dehydrated = prevState.dehydrated;\n\n      if (_dehydrated !== null) {\n        return updateDehydratedSuspenseComponent(\n          current,\n          workInProgress,\n          didSuspend,\n          nextProps,\n          _dehydrated,\n          prevState,\n          renderLanes\n        );\n      }\n    }\n\n    if (showFallback) {\n      var _nextFallbackChildren = nextProps.fallback;\n      var _nextPrimaryChildren = nextProps.children;\n      var fallbackChildFragment = updateSuspenseFallbackChildren(\n        current,\n        workInProgress,\n        _nextPrimaryChildren,\n        _nextFallbackChildren,\n        renderLanes\n      );\n      var _primaryChildFragment2 = workInProgress.child;\n      var prevOffscreenState = current.child.memoizedState;\n      _primaryChildFragment2.memoizedState =\n        prevOffscreenState === null\n          ? mountSuspenseOffscreenState(renderLanes)\n          : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    } else {\n      var _nextPrimaryChildren2 = nextProps.children;\n\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(\n        current,\n        workInProgress,\n        _nextPrimaryChildren2,\n        renderLanes\n      );\n\n      workInProgress.memoizedState = null;\n      return _primaryChildFragment3;\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: \"visible\",\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var progressedPrimaryFragment = workInProgress.child;\n  var primaryChildProps = {\n    mode: \"hidden\",\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n  var fallbackChildFragment;\n\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes\n) {\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: \"visible\",\n      children: primaryChildren\n    }\n  );\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    var deletions = workInProgress.deletions;\n\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var mode = workInProgress.mode;\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildProps = {\n    mode: \"hidden\",\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    var progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    } // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps\n    ); // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n\n  var fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null\n    ); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes,\n  recoverableError\n) {\n  // Falling back to client rendering. Because this has performance\n  // implications, it's considered a recoverable error, even though the user\n  // likely won't observe anything wrong with the UI.\n  //\n  // The error is passed in as an argument to enforce that every caller provide\n  // a custom message, or explicitly opt out (currently the only path that opts\n  // out is legacy mode; every concurrent path provides an error).\n  if (recoverableError !== null) {\n    queueHydrationError(recoverableError);\n  } // This will add the old fiber to the deletion list\n\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\n\n  var nextProps = workInProgress.pendingProps;\n  var primaryChildren = nextProps.children;\n  var primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren\n  ); // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes\n) {\n  var fiberMode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: \"visible\",\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode\n  );\n  var fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null\n  ); // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n\n  fallbackChildFragment.flags |= Placement;\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress,\n  suspenseInstance,\n  renderLanes\n) {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    {\n      error(\n        \"Cannot hydrate Suspense in legacy mode. Switch from \" +\n          \"ReactDOM.hydrate(element, container) to \" +\n          \"ReactDOMClient.hydrateRoot(container, <App />)\" +\n          \".render(element) or remove the Suspense components from \" +\n          \"the server rendered components.\"\n      );\n    }\n\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback()) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current,\n  workInProgress,\n  didSuspend,\n  nextProps,\n  suspenseInstance,\n  suspenseState,\n  renderLanes\n) {\n  if (!didSuspend) {\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes, // TODO: When we delete legacy mode, we should make this error argument\n        // required — every concurrent mode path that causes hydration to\n        // de-opt to client rendering should have an error message.\n        null\n      );\n    }\n\n    if (isSuspenseInstanceFallback()) {\n      // This boundary is in a permanent fallback state. In this case, we'll never\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\n      // client side render instead.\n      var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(),\n        errorMessage = _getSuspenseInstanceF.errorMessage;\n\n      var error = errorMessage // eslint-disable-next-line react-internal/prod-error-codes\n        ? new Error(errorMessage)\n        : new Error(\n            \"The server could not finish this Suspense boundary, likely \" +\n              \"due to an error during server rendering. Switched to \" +\n              \"client rendering.\"\n          );\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        error\n      );\n    }\n    // any context has changed, we need to treat is as if the input might have changed.\n\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n\n    if (didReceiveUpdate || hasContextChanged) {\n      // This boundary has changed since the first render. This means that we are now unable to\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\n      var root = getWorkInProgressRoot();\n\n      if (root !== null) {\n        var attemptHydrationAtLane = getBumpedLaneForHydration(\n          root,\n          renderLanes\n        );\n\n        if (\n          attemptHydrationAtLane !== NoLane &&\n          attemptHydrationAtLane !== suspenseState.retryLane\n        ) {\n          // Intentionally mutating since this render will get interrupted. This\n          // is one of the very rare times where we mutate the current tree\n          // during the render phase.\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\n\n          var eventTime = NoTimestamp;\n          scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n        }\n      } // If we have scheduled higher pri work above, this will probably just abort the render\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\n      // render something, if we time out. Even if that requires us to delete everything and\n      // skip hydration.\n      // Delay having to do this as long as the suspense timeout allows us.\n\n      renderDidSuspendDelayIfPossible();\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        new Error(\n          \"This Suspense boundary received an update before it finished \" +\n            \"hydrating. This caused the boundary to switch to client rendering. \" +\n            \"The usual way to fix this is to wrap the original update \" +\n            \"in startTransition.\"\n        )\n      );\n    } else if (isSuspenseInstancePending()) {\n      // This component is still pending more data from the server, so we can't hydrate its\n      // content. We treat it as if this component suspended itself. It might seem as if\n      // we could just try to render it client-side instead. However, this will perform a\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\n      // on missing data anyway. Additionally, the server might be able to render more\n      // than we can on the client yet. In that case we'd end up with more fallback states\n      // on the client than if we just leave it alone. If the server times out or errors\n      // these should update this boundary to the permanent Fallback state instead.\n      // Mark it as having captured (i.e. suspended).\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\n\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\n\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n      registerSuspenseInstanceRetry();\n      return null;\n    } else {\n      // This is the first attempt.\n      reenterHydrationStateFromDehydratedSuspenseInstance(\n        workInProgress,\n        suspenseInstance,\n        suspenseState.treeContext\n      );\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(\n        workInProgress,\n        primaryChildren\n      ); // Mark the children as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n\n      primaryChildFragment.flags |= Hydrating;\n      return primaryChildFragment;\n    }\n  } else {\n    // This is the second render pass. We already attempted to hydrated, but\n    // something either suspended or errored.\n    if (workInProgress.flags & ForceClientRender) {\n      // Something errored during hydration. Try again without hydrating.\n      workInProgress.flags &= ~ForceClientRender;\n      return retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes,\n        new Error(\n          \"There was an error while hydrating this Suspense boundary. \" +\n            \"Switched to client rendering.\"\n        )\n      );\n    } else if (workInProgress.memoizedState !== null) {\n      // Something suspended and we should still be in dehydrated mode.\n      // Leave the existing child in place.\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\n      // but the normal suspense pass doesn't.\n\n      workInProgress.flags |= DidCapture;\n      return null;\n    } else {\n      // Suspended but we should no longer be in dehydrated mode.\n      // Therefore we now have to render the fallback.\n      var nextPrimaryChildren = nextProps.children;\n      var nextFallbackChildren = nextProps.fallback;\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n        current,\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes\n      );\n      var _primaryChildFragment4 = workInProgress.child;\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(\n        renderLanes\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackChildFragment;\n    }\n  }\n}\n\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress,\n  firstChild,\n  renderLanes\n) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  var node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  var row = firstChild;\n  var lastContentRow = null;\n\n  while (row !== null) {\n    var currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction validateRevealOrder(revealOrder) {\n  {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== \"forwards\" &&\n      revealOrder !== \"backwards\" &&\n      revealOrder !== \"together\" &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n\n      if (typeof revealOrder === \"string\") {\n        switch (revealOrder.toLowerCase()) {\n          case \"together\":\n          case \"forwards\":\n          case \"backwards\": {\n            error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase()\n            );\n\n            break;\n          }\n\n          case \"forward\":\n          case \"backward\": {\n            error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase()\n            );\n\n            break;\n          }\n\n          default:\n            error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder\n            );\n\n            break;\n        }\n      } else {\n        error(\n          \"%s is not a supported value for revealOrder on <SuspenseList />. \" +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(tailMode, revealOrder) {\n  {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode\n        );\n      } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot, index) {\n  {\n    var isAnArray = isArray(childSlot);\n    var isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n\n    if (isAnArray || isIterable) {\n      var type = isAnArray ? \"array\" : \"iterable\";\n\n      error(\n        \"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" +\n          \"an additional SuspenseList to configure its revealOrder: \" +\n          \"<SuspenseList revealOrder=...> ... \" +\n          \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" +\n          \"</SuspenseList>\",\n        type,\n        index,\n        type\n      );\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateSuspenseListChildren(children, revealOrder) {\n  {\n    if (\n      (revealOrder === \"forwards\" || revealOrder === \"backwards\") &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === \"function\") {\n          var childrenIterator = iteratorFn.call(children);\n\n          if (childrenIterator) {\n            var step = childrenIterator.next();\n            var _i = 0;\n\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\n                return;\n              }\n\n              _i++;\n            }\n          }\n        } else {\n          error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              \"This is not useful since it needs multiple rows. \" +\n              \"Did you mean to pass multiple children or an array?\",\n            revealOrder\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var revealOrder = nextProps.revealOrder;\n  var tailMode = nextProps.tail;\n  var newChildren = nextProps.children;\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  var suspenseContext = suspenseStackCursor.current;\n  var shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    ForceSuspenseFallback\n  );\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    var didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes\n      );\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case \"forwards\": {\n        var lastContentRow = findLastContentRow(workInProgress.child);\n        var tail;\n\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode\n        );\n        break;\n      }\n\n      case \"backwards\": {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        var _tail = null;\n        var row = workInProgress.child;\n        workInProgress.child = null;\n\n        while (row !== null) {\n          var currentRow = row.alternate; // New rows can't be content rows.\n\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n\n          var nextRow = row.sibling;\n          row.sibling = _tail;\n          _tail = row;\n          row = nextRow;\n        } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          _tail,\n          null, // last\n          tailMode\n        );\n        break;\n      }\n\n      case \"together\": {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined\n        );\n        break;\n      }\n\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n  var newValue = newProps.value;\n\n  {\n    if (!(\"value\" in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n\n        error(\n          \"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\"\n        );\n      }\n    }\n\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  {\n    if (oldProps !== null) {\n      var oldValue = oldProps.value;\n\n      if (objectIs(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error(\n            \"Rendering <Context> directly is not supported and will be removed in \" +\n              \"a future major release. Did you mean to render <Context.Consumer> instead?\"\n          );\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    if (typeof render !== \"function\") {\n      error(\n        \"A context consumer was rendered with multiple children, or a child \" +\n          \"that isn't a function. A context consumer expects a single child \" +\n          \"that is a function. If you did pass a function, make sure there \" +\n          \"is no trailing or leading whitespace around it.\"\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var newValue = readContext(context);\n\n  var newChildren;\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  }\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (current !== null) {\n      // A lazy component only mounts if it suspended inside a non-\n      // concurrent tree, in an inconsistent state. We want to treat it like\n      // a new mount, even though an empty version of it already committed.\n      // Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    }\n  }\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    {\n      return null;\n    }\n  } // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n  {\n    var returnFiber = oldWorkInProgress.return;\n\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error(\"Cannot swap the root fiber.\");\n    } // Disconnect from the old current.\n    // It will get deleted.\n\n    current.alternate = null;\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\n\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\n\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      var prevSibling = returnFiber.child;\n\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error(\"Expected parent to have a child.\");\n      }\n\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error(\"Expected to find the previous sibling.\");\n        }\n      }\n\n      prevSibling.sibling = newWorkInProgress;\n    } // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\n\n    return newWorkInProgress;\n  }\n}\n\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  var updateLanes = current.lanes;\n\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  } // No pending update, but because context is propagated lazily, we need\n\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      var root = workInProgress.stateNode;\n      break;\n\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        pushContextProvider(workInProgress);\n      }\n\n      break;\n    }\n\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n\n    case ContextProvider: {\n      var newValue = workInProgress.memoizedProps.value;\n      var context = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n\n    case Profiler:\n      {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        var hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes\n        );\n\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n\n      break;\n\n    case SuspenseComponent: {\n      var state = workInProgress.memoizedState;\n\n      if (state !== null) {\n        if (state.dehydrated !== null) {\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n          ); // We know that this component will suspend again because if it has\n          // been unsuspended it has committed as a resolved Suspense component.\n          // If it needs to be retried, it should have work scheduled on it.\n\n          workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\n          // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n\n          return null;\n        } // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n\n        var primaryChildFragment = workInProgress.child;\n        var primaryChildLanes = primaryChildFragment.childLanes;\n\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n          ); // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n\n          var child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes\n          );\n\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current)\n        );\n      }\n\n      break;\n    }\n\n    case SuspenseListComponent: {\n      var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      var _hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes\n      );\n\n      if (didSuspendBefore) {\n        if (_hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        } // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n\n        workInProgress.flags |= DidCapture;\n      } // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (_hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n  }\n\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes\n        )\n      );\n    }\n  }\n\n  if (current !== null) {\n    var oldProps = current.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:\n      workInProgress.type !== current.type\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes\n      );\n\n      if (\n        !hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes\n        );\n      }\n\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes\n      );\n    }\n\n    case LazyComponent: {\n      var elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes\n      );\n    }\n\n    case FunctionComponent: {\n      var Component = workInProgress.type;\n      var unresolvedProps = workInProgress.pendingProps;\n      var resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes\n      );\n    }\n\n    case ClassComponent: {\n      var _Component = workInProgress.type;\n      var _unresolvedProps = workInProgress.pendingProps;\n\n      var _resolvedProps =\n        workInProgress.elementType === _Component\n          ? _unresolvedProps\n          : resolveDefaultProps(_Component, _unresolvedProps);\n\n      return updateClassComponent(\n        current,\n        workInProgress,\n        _Component,\n        _resolvedProps,\n        renderLanes\n      );\n    }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText();\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef: {\n      var type = workInProgress.type;\n      var _unresolvedProps2 = workInProgress.pendingProps;\n\n      var _resolvedProps2 =\n        workInProgress.elementType === type\n          ? _unresolvedProps2\n          : resolveDefaultProps(type, _unresolvedProps2);\n\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        _resolvedProps2,\n        renderLanes\n      );\n    }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent: {\n      var _type2 = workInProgress.type;\n      var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n      var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerPropTypes = _type2.propTypes;\n\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              _resolvedProps3, // Resolved for outer only\n              \"prop\",\n              getComponentNameFromType(_type2)\n            );\n          }\n        }\n      }\n\n      _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        _type2,\n        _resolvedProps3,\n        renderLanes\n      );\n    }\n\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    }\n\n    case IncompleteClassComponent: {\n      var _Component2 = workInProgress.type;\n      var _unresolvedProps4 = workInProgress.pendingProps;\n\n      var _resolvedProps4 =\n        workInProgress.elementType === _Component2\n          ? _unresolvedProps4\n          : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        _Component2,\n        _resolvedProps4,\n        renderLanes\n      );\n    }\n\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n\n    case ScopeComponent: {\n      break;\n    }\n\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n  }\n\n  throw new Error(\n    \"Unknown unit of work tag (\" +\n      workInProgress.tag +\n      \"). This error is likely caused by a bug in \" +\n      \"React. Please file an issue.\"\n  );\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef$1(workInProgress) {\n  workInProgress.flags |= Ref;\n}\n\nvar appendAllChildren;\nvar updateHostContainer;\nvar updateHostComponent$1;\nvar updateHostText$1;\n\n{\n  // Mutation mode\n  appendAllChildren = function(\n    parent,\n    workInProgress,\n    needsVisibilityToggle,\n    isHidden\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal);\n      else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current, workInProgress) {\n    // Noop\n  };\n\n  updateHostComponent$1 = function(\n    current,\n    workInProgress,\n    type,\n    newProps,\n    rootContainerInstance\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    var oldProps = current.memoizedProps;\n\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    } // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n\n    var instance = workInProgress.stateNode;\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n\n    var updatePayload = prepareUpdate(); // TODO: Type this specific to this type of component.\n\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n\n  updateHostText$1 = function(current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  switch (renderState.tailMode) {\n    case \"hidden\": {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      var tailNode = renderState.tail;\n      var lastTailNode = null;\n\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n\n        tailNode = tailNode.sibling;\n      } // Next we're simply going to delete all insertions after the\n      // last rendered item.\n\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n\n      break;\n    }\n\n    case \"collapsed\": {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      var _tailNode = renderState.tail;\n      var _lastTailNode = null;\n\n      while (_tailNode !== null) {\n        if (_tailNode.alternate !== null) {\n          _lastTailNode = _tailNode;\n        }\n\n        _tailNode = _tailNode.sibling;\n      } // Next we're simply going to delete all insertions after the\n      // last rendered item.\n\n      if (_lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        _lastTailNode.sibling = null;\n      }\n\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n  var newChildLanes = NoLanes;\n  var subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var actualDuration = completedWork.actualDuration;\n      var treeBaseDuration = completedWork.selfBaseDuration;\n      var child = completedWork.child;\n\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes)\n        );\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n\n        actualDuration += child.actualDuration;\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      var _child = completedWork.child;\n\n      while (_child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child.lanes, _child.childLanes)\n        );\n        subtreeFlags |= _child.subtreeFlags;\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child.return = completedWork;\n        _child = _child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var _treeBaseDuration = completedWork.selfBaseDuration;\n      var _child2 = completedWork.child;\n\n      while (_child2 !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child2.lanes, _child2.childLanes)\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\n        subtreeFlags |= _child2.flags & StaticMask;\n        _treeBaseDuration += _child2.treeBaseDuration;\n        _child2 = _child2.sibling;\n      }\n\n      completedWork.treeBaseDuration = _treeBaseDuration;\n    } else {\n      var _child3 = completedWork.child;\n\n      while (_child3 !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(_child3.lanes, _child3.childLanes)\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child3.return = completedWork;\n        _child3 = _child3.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\n\nfunction completeDehydratedSuspenseBoundary(\n  current,\n  workInProgress,\n  nextState\n) {\n  var wasHydrated = popHydrationState();\n\n  if (nextState !== null && nextState.dehydrated !== null) {\n    // We might be inside a hydration state the first time we're picking up this\n    // Suspense boundary, and also after we've reentered it for further hydration.\n    if (current === null) {\n      if (!wasHydrated) {\n        throw new Error(\n          \"A dehydrated suspense component was completed without a hydrated node. \" +\n            \"This is probably a bug in React.\"\n        );\n      }\n\n      prepareToHydrateHostSuspenseInstance();\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var isTimedOutSuspense = nextState !== null;\n\n          if (isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    } else {\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\n        // This boundary did not suspend so it's now hydrated and unsuspended.\n        workInProgress.memoizedState = null;\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\n      // as having hydrated so events know that they're free to be invoked.\n      // It's also a signal to replay events and the suspense callback.\n      // If something suspended, schedule an effect to attach retry listeners.\n      // So we might as well always mark this.\n\n      workInProgress.flags |= Update;\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          var _isTimedOutSuspense = nextState !== null;\n\n          if (_isTimedOutSuspense) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var _primaryChildFragment = workInProgress.child;\n\n            if (_primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                _primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  } else {\n    // Successfully completed this tree. If this was a forced client render,\n    // there may have been recoverable errors during first hydration\n    // attempt. If so, add them to a queue so we can log them in the\n    // commit phase.\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\n\n    return true;\n  }\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        popContext(workInProgress);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case HostRoot: {\n      var fiberRoot = workInProgress.stateNode;\n      popHostContainer(workInProgress);\n      popTopLevelContextObject(workInProgress);\n      resetWorkInProgressVersions();\n\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        var wasHydrated = popHydrationState();\n\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else {\n          if (current !== null) {\n            var prevState = current.memoizedState;\n\n            if (\n              // Check if this is a client root\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags\n            ) {\n              // Schedule an effect to clear this container at the start of the\n              // next commit. This handles the case of React rendering into a\n              // container with previous children. It's also safe to do for\n              // updates too, because current.child would only be null if the\n              // previous render was null (so the container would already\n              // be empty).\n              workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\n              // recoverable errors during first hydration attempt. If so, add\n              // them to a queue so we can log them in the commit phase.\n\n              upgradeHydrationErrorsToRecoverable();\n            }\n          }\n        }\n      }\n\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n\n      return null;\n    }\n\n    case HostComponent: {\n      popHostContext(workInProgress);\n      var rootContainerInstance = getRootHostContainer();\n      var type = workInProgress.type;\n\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent$1(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef$1(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              \"We must have new props for new mounts. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          } // This can happen when we abort work.\n\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n\n        var _wasHydrated = popHydrationState();\n\n        if (_wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (prepareToHydrateHostInstance()) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          var instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress\n          );\n          appendAllChildren(instance, workInProgress, false, false);\n          workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n\n          if (finalizeInitialChildren(instance)) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef$1(workInProgress);\n        }\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case HostText: {\n      var newText = newProps;\n\n      if (current && workInProgress.stateNode != null) {\n        var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n\n        updateHostText$1(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== \"string\") {\n          if (workInProgress.stateNode === null) {\n            throw new Error(\n              \"We must have new props for new mounts. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          } // This can happen when we abort work.\n        }\n\n        var _rootContainerInstance = getRootHostContainer();\n\n        var _currentHostContext = getHostContext();\n\n        var _wasHydrated2 = popHydrationState();\n\n        if (_wasHydrated2) {\n          if (prepareToHydrateHostTextInstance()) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            _rootContainerInstance,\n            _currentHostContext,\n            workInProgress\n          );\n        }\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\n      // to its own fiber type so that we can add other kinds of hydration\n      // boundaries that aren't associated with a Suspense tree. In anticipation\n      // of such a refactor, all the hydration logic is contained in\n      // this branch.\n\n      if (\n        current === null ||\n        (current.memoizedState !== null &&\n          current.memoizedState.dehydrated !== null)\n      ) {\n        var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(\n          current,\n          workInProgress,\n          nextState\n        );\n\n        if (!fallthroughToNormalSuspensePath) {\n          if (workInProgress.flags & ShouldCapture) {\n            // Special case. There were remaining unhydrated nodes. We treat\n            // this as a mismatch. Revert to client rendering.\n            return workInProgress;\n          } else {\n            // Did not finish hydrating, either because this is the initial\n            // render or because something suspended.\n            return null;\n          }\n        } // Continue with the normal Suspense path.\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        } // Don't bubble properties in this case.\n\n        return workInProgress;\n      }\n\n      var nextDidTimeout = nextState !== null;\n      var prevDidTimeout = current !== null && current.memoizedState !== null;\n      // a passive effect, which is when we process the transitions\n\n      if (nextDidTimeout !== prevDidTimeout) {\n        // an effect to toggle the subtree's visibility. When we switch from\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\n        // as part of its normal complete phase. But when we switch from\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\n        // phase. So we need to schedule its effect here.\n        //\n        // We also use this flag to connect/disconnect the effects, but the same\n        // logic applies: when re-connecting, the Offscreen fiber's complete\n        // phase will handle scheduling the effect. It's only when the fallback\n        // is active that we have to do anything special.\n\n        if (nextDidTimeout) {\n          var _offscreenFiber2 = workInProgress.child;\n          _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            var hasInvisibleChildContext =\n              current === null &&\n              (workInProgress.memoizedProps.unstable_avoidThisFallback !==\n                true ||\n                !enableSuspenseAvoidThisFallback);\n\n            if (\n              hasInvisibleChildContext ||\n              hasSuspenseContext(\n                suspenseStackCursor.current,\n                InvisibleParentSuspenseContext\n              )\n            ) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n      }\n\n      var wakeables = workInProgress.updateQueue;\n\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      bubbleProperties(workInProgress);\n\n      {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            var primaryChildFragment = workInProgress.child;\n\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -=\n                primaryChildFragment.treeBaseDuration;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      var _Component = workInProgress.type;\n\n      if (isContextProvider(_Component)) {\n        popContext(workInProgress);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      var renderState = workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n      var renderedTail = renderState.rendering;\n\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          var cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n\n          if (!cannotBeSuspended) {\n            var row = workInProgress.child;\n\n            while (row !== null) {\n              var suspended = findFirstSuspended(row);\n\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n\n                var newThenables = suspended.updateQueue;\n\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                } // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback\n                  )\n                ); // Don't bubble properties in this case.\n\n                return workInProgress.child;\n              }\n\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        } // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          var _suspended = findFirstSuspended(renderedTail);\n\n          if (_suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n\n            var _newThenables = _suspended.updateQueue;\n\n            if (_newThenables !== null) {\n              workInProgress.updateQueue = _newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === \"hidden\" &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          var previousSibling = renderState.last;\n\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        var next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null; // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n\n        var suspenseContext = suspenseStackCursor.current;\n\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n\n        pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n        // Don't bubble properties in this case.\n\n        return next;\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n    }\n\n    case ScopeComponent: {\n      break;\n    }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      var _nextState = workInProgress.memoizedState;\n      var nextIsHidden = _nextState !== null;\n\n      if (current !== null) {\n        var _prevState = current.memoizedState;\n        var prevIsHidden = _prevState !== null;\n\n        if (\n          prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.\n          !enableLegacyHidden\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n          bubbleProperties(workInProgress);\n\n          {\n            // Check if there was an insertion or update in the hidden subtree.\n            // If so, we need to hide those nodes in the commit phase, so\n            // schedule a visibility effect.\n            if (workInProgress.subtreeFlags & (Placement | Update)) {\n              workInProgress.flags |= Visibility;\n            }\n          }\n        }\n      }\n      return null;\n    }\n\n    case CacheComponent: {\n      return null;\n    }\n\n    case TracingMarkerComponent: {\n      return null;\n    }\n  }\n\n  throw new Error(\n    \"Unknown unit of work tag (\" +\n      workInProgress.tag +\n      \"). This error is likely caused by a bug in \" +\n      \"React. Please file an issue.\"\n  );\n}\n\nfunction unwindWork(current, workInProgress, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      var Component = workInProgress.type;\n\n      if (isContextProvider(Component)) {\n        popContext(workInProgress);\n      }\n\n      var flags = workInProgress.flags;\n\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        }\n\n        return workInProgress;\n      }\n\n      return null;\n    }\n\n    case HostRoot: {\n      var root = workInProgress.stateNode;\n      popHostContainer(workInProgress);\n      popTopLevelContextObject(workInProgress);\n      resetWorkInProgressVersions();\n      var _flags = workInProgress.flags;\n\n      if (\n        (_flags & ShouldCapture) !== NoFlags &&\n        (_flags & DidCapture) === NoFlags\n      ) {\n        // There was an error during render that wasn't captured by a suspense\n        // boundary. Do a second pass on the root to unmount the children.\n        workInProgress.flags = (_flags & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      } // We unwound to the root without completing it. Exit.\n\n      return null;\n    }\n\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      var suspenseState = workInProgress.memoizedState;\n\n      if (suspenseState !== null && suspenseState.dehydrated !== null) {\n        if (workInProgress.alternate === null) {\n          throw new Error(\n            \"Threw in newly mounted dehydrated component. This is likely a bug in \" +\n              \"React. Please file an issue.\"\n          );\n        }\n      }\n\n      var _flags2 = workInProgress.flags;\n\n      if (_flags2 & ShouldCapture) {\n        workInProgress.flags = (_flags2 & ~ShouldCapture) | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          transferActualDuration(workInProgress);\n        }\n\n        return workInProgress;\n      }\n\n      return null;\n    }\n\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n\n      return null;\n    }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n\n    case ContextProvider:\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      return null;\n\n    case CacheComponent:\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      var childContextTypes = interruptedWork.type.childContextTypes;\n\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popContext(interruptedWork);\n      }\n\n      break;\n    }\n\n    case HostRoot: {\n      var root = interruptedWork.stateNode;\n      popHostContainer(interruptedWork);\n      popTopLevelContextObject(interruptedWork);\n      resetWorkInProgressVersions();\n      break;\n    }\n\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case ContextProvider:\n      var context = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      break;\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n} // Used during the commit phase to track the state of the Offscreen component stack.\nvar PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\nvar nextEffect = null; // Used for Profiling builds to track updaters.\n\nvar inProgressLanes = null;\nvar inProgressRoot = null;\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  {\n    invokeGuardedCallback(null, function() {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  if (current.mode & ProfileMode) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt mounting.\n\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === \"function\") {\n      var retVal;\n\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n\n      {\n        if (typeof retVal === \"function\") {\n          error(\n            \"Unexpected return value from a callback ref in %s. \" +\n              \"A callback ref should not return a function.\",\n            getComponentNameFromFiber(current)\n          );\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n  try {\n    destroy();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nvar focusedInstanceHandle = null;\nvar shouldFireAfterActiveInstanceBlur = false;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\n\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\n\n    var child = fiber.child;\n\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentFiber(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n\n      case ClassComponent: {\n        if (current !== null) {\n          var prevProps = current.memoizedProps;\n          var prevState = current.memoizedState;\n          var instance = finishedWork.stateNode; // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n          {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                error(\n                  \"Expected %s props to match memoized props before \" +\n                    \"getSnapshotBeforeUpdate. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.props`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n\n              if (instance.state !== finishedWork.memoizedState) {\n                error(\n                  \"Expected %s state to match memoized state before \" +\n                    \"getSnapshotBeforeUpdate. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.state`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n            }\n          }\n\n          var snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState\n          );\n\n          {\n            var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n\n              error(\n                \"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" +\n                  \"must be returned. You have returned undefined.\",\n                getComponentNameFromFiber(finishedWork)\n              );\n            }\n          }\n\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n\n        break;\n      }\n\n      case HostRoot: {\n        {\n          var root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n\n        break;\n      }\n\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n\n      default: {\n        throw new Error(\n          \"This unit of work tag should not have side-effects. This error is \" +\n            \"likely caused by a bug in React. Please file an issue.\"\n        );\n      }\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor\n) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(true);\n            }\n          }\n\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n\n          {\n            if ((flags & Insertion) !== NoFlags$1) {\n              setIsRunningInsertionEffect(false);\n            }\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        var create = effect.create;\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(true);\n          }\n        }\n\n        effect.destroy = create();\n\n        {\n          if ((flags & Insertion) !== NoFlags$1) {\n            setIsRunningInsertionEffect(false);\n          }\n        }\n\n        {\n          var destroy = effect.destroy;\n\n          if (destroy !== undefined && typeof destroy !== \"function\") {\n            var hookName = void 0;\n\n            if ((effect.tag & Layout) !== NoFlags) {\n              hookName = \"useLayoutEffect\";\n            } else if ((effect.tag & Insertion) !== NoFlags) {\n              hookName = \"useInsertionEffect\";\n            } else {\n              hookName = \"useEffect\";\n            }\n\n            var addendum = void 0;\n\n            if (destroy === null) {\n              addendum =\n                \" You returned null. If your effect does not require clean \" +\n                \"up, return undefined (or nothing).\";\n            } else if (typeof destroy.then === \"function\") {\n              addendum =\n                \"\\n\\nIt looks like you wrote \" +\n                hookName +\n                \"(async () => ...) or returned a Promise. \" +\n                \"Instead, write the async function inside your effect \" +\n                \"and call it immediately:\\n\\n\" +\n                hookName +\n                \"(() => {\\n\" +\n                \"  async function fetchData() {\\n\" +\n                \"    // You can await here\\n\" +\n                \"    const response = await MyAPI.getData(someId);\\n\" +\n                \"    // ...\\n\" +\n                \"  }\\n\" +\n                \"  fetchData();\\n\" +\n                \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" +\n                \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n            } else {\n              addendum = \" You returned: \" + destroy;\n            }\n\n            error(\n              \"%s must not return anything besides a function, \" +\n                \"which is used for clean-up.%s\",\n              hookName,\n              addendum\n            );\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\n  {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          var passiveEffectDuration =\n            finishedWork.stateNode.passiveEffectDuration;\n          var _finishedWork$memoize = finishedWork.memoizedProps,\n            id = _finishedWork$memoize.id,\n            onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n\n          var commitTime = getCommitTime();\n          var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n\n          {\n            if (isCurrentUpdateNested()) {\n              phase = \"nested-update\";\n            }\n          }\n\n          if (typeof onPostCommit === \"function\") {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          } // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n\n          var parentFiber = finishedWork.return;\n\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                var root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n\n              case Profiler:\n                var parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n\n            parentFiber = parentFiber.return;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot,\n  current,\n  finishedWork,\n  committedLanes\n) {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(Layout | HasEffect, finishedWork);\n          }\n        }\n\n        break;\n      }\n\n      case ClassComponent: {\n        var instance = finishedWork.stateNode;\n\n        if (finishedWork.flags & Update) {\n          {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    error(\n                      \"Expected %s props to match memoized props before \" +\n                        \"componentDidMount. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.props`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n\n                  if (instance.state !== finishedWork.memoizedState) {\n                    error(\n                      \"Expected %s state to match memoized state before \" +\n                        \"componentDidMount. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.state`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n                }\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              var prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps\n                    );\n              var prevState = current.memoizedState; // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n\n              {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    error(\n                      \"Expected %s props to match memoized props before \" +\n                        \"componentDidUpdate. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.props`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n\n                  if (instance.state !== finishedWork.memoizedState) {\n                    error(\n                      \"Expected %s state to match memoized state before \" +\n                        \"componentDidUpdate. \" +\n                        \"This might either be because of a bug in React, or because \" +\n                        \"a component reassigns its own `this.state`. \" +\n                        \"Please file an issue.\",\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\n                    );\n                  }\n                }\n              }\n\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate\n                );\n              }\n            }\n          }\n        } // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n\n        var updateQueue = finishedWork.updateQueue;\n\n        if (updateQueue !== null) {\n          {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                error(\n                  \"Expected %s props to match memoized props before \" +\n                    \"processing the update queue. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.props`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n\n              if (instance.state !== finishedWork.memoizedState) {\n                error(\n                  \"Expected %s state to match memoized state before \" +\n                    \"processing the update queue. \" +\n                    \"This might either be because of a bug in React, or because \" +\n                    \"a component reassigns its own `this.state`. \" +\n                    \"Please file an issue.\",\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\n                );\n              }\n            }\n          } // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n\n        break;\n      }\n\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        var _updateQueue = finishedWork.updateQueue;\n\n        if (_updateQueue !== null) {\n          var _instance = null;\n\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                _instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n\n              case ClassComponent:\n                _instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n\n          commitUpdateQueue(finishedWork, _updateQueue, _instance);\n        }\n\n        break;\n      }\n\n      case HostComponent: {\n        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n\n        if (current === null && finishedWork.flags & Update) {\n          var type = finishedWork.type;\n          var props = finishedWork.memoizedProps;\n        }\n\n        break;\n      }\n\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n\n      case Profiler: {\n        {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            onCommit = _finishedWork$memoize2.onCommit,\n            onRender = _finishedWork$memoize2.onRender;\n          var effectDuration = finishedWork.stateNode.effectDuration;\n          var commitTime = getCommitTime();\n          var phase = current === null ? \"mount\" : \"update\";\n\n          {\n            if (isCurrentUpdateNested()) {\n              phase = \"nested-update\";\n            }\n          }\n\n          if (typeof onRender === \"function\") {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime\n            );\n          }\n\n          {\n            if (typeof onCommit === \"function\") {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime\n              );\n            } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n\n            enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n\n            var parentFiber = finishedWork.return;\n\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  var root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n\n                case Profiler:\n                  var parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n\n        break;\n      }\n\n      case SuspenseComponent: {\n        break;\n      }\n\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n      case TracingMarkerComponent: {\n        break;\n      }\n\n      default:\n        throw new Error(\n          \"This unit of work tag should not have side-effects. This error is \" +\n            \"likely caused by a bug in React. Please file an issue.\"\n        );\n    }\n  }\n\n  {\n    {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  var hostSubtreeRoot = null;\n\n  {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    var node = finishedWork;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n\n          try {\n            var instance = node.stateNode;\n\n            if (isHidden) {\n              hideInstance(instance);\n            } else {\n              unhideInstance(node.stateNode, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          try {\n            var _instance3 = node.stateNode;\n\n            if (isHidden) {\n              hideTextInstance(_instance3);\n            } else {\n              unhideTextInstance(_instance3, node.memoizedProps);\n            }\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        node.memoizedState !== null &&\n        node !== finishedWork\n      );\n      else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === \"function\") {\n      var retVal;\n\n      if (finishedWork.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n\n      {\n        if (typeof retVal === \"function\") {\n          error(\n            \"Unexpected return value from a callback ref in %s. \" +\n              \"A callback ref should not return a function.\",\n            getComponentNameFromFiber(finishedWork)\n          );\n        }\n      }\n    } else {\n      {\n        if (!ref.hasOwnProperty(\"current\")) {\n          error(\n            \"Unexpected ref object provided for %s. \" +\n              \"Use either a ref-setter function or React.createRef().\",\n            getComponentNameFromFiber(finishedWork)\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  } // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n\n  {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n\n    if (fiber.tag === HostComponent) {\n      var hostInstance = fiber.stateNode;\n    }\n\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    {\n      fiber._debugOwner = null;\n    }\n\n    {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction getHostParentFiber(fiber) {\n  var parent = fiber.return;\n\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n\n    parent = parent.return;\n  }\n\n  throw new Error(\n    \"Expected to find a host parent. This error is likely caused by a bug \" +\n      \"in React. Please file an issue.\"\n  );\n}\n\nfunction isHostParent(fiber) {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  var node = fiber;\n\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      } // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    } // Check if this host node is stable or about to be placed.\n\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n  switch (parentFiber.tag) {\n    case HostComponent: {\n      var parent = parentFiber.stateNode;\n\n      if (parentFiber.flags & ContentReset) {\n        parentFiber.flags &= ~ContentReset;\n      }\n\n      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\n      // children to find all the terminal nodes.\n\n      insertOrAppendPlacementNode(finishedWork, before, parent);\n      break;\n    }\n\n    case HostRoot:\n    case HostPortal: {\n      var _parent = parentFiber.stateNode.containerInfo;\n\n      var _before = getHostSibling(finishedWork);\n\n      insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n      break;\n    }\n    // eslint-disable-next-line-no-fallthrough\n\n    default:\n      throw new Error(\n        \"Invalid host parent fiber. This error is likely caused by a bug \" +\n          \"in React. Please file an issue.\"\n      );\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertInContainerBefore(parent);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal);\n  else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal);\n  else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n} // These are tracked on the stack as we recursively traverse a\n// deleted subtree.\n// TODO: Update these during the whole mutation phase, not just during\n// a deletion.\n\nvar hostParent = null;\nvar hostParentIsContainer = false;\n\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\n  {\n    // We only have the top Fiber that was deleted but we need to recurse down its\n    // children to find all the terminal nodes.\n    // Recursively delete all host nodes from the parent, detach refs, clean\n    // up mounted layout effects, and call componentWillUnmount.\n    // We only need to remove the topmost host child in each branch. But then we\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\n    // could split this into two separate traversals functions, where the second\n    // one doesn't include any removeChild logic. This is maybe the same\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\n    // the layout phase is refactored to use recursion).\n    // Before starting, find the nearest host parent on the stack so we know\n    // which instance/container to remove the children from.\n    // TODO: Instead of searching up the fiber return path on every deletion, we\n    // can track the nearest host component on the JS stack as we traverse the\n    // tree during the commit phase. This would make insertions faster, too.\n    var parent = returnFiber;\n\n    findParent: while (parent !== null) {\n      switch (parent.tag) {\n        case HostComponent: {\n          hostParent = parent.stateNode;\n          hostParentIsContainer = false;\n          break findParent;\n        }\n\n        case HostRoot: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n\n        case HostPortal: {\n          hostParent = parent.stateNode.containerInfo;\n          hostParentIsContainer = true;\n          break findParent;\n        }\n      }\n\n      parent = parent.return;\n    }\n\n    if (hostParent === null) {\n      throw new Error(\n        \"Expected to find a host parent. This error is likely caused by \" +\n          \"a bug in React. Please file an issue.\"\n      );\n    }\n\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n    hostParent = null;\n    hostParentIsContainer = false;\n  }\n\n  detachFiberMutation(deletedFiber);\n}\n\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  // TODO: Use a static flag to skip trees that don't have unmount effects\n  var child = parent.child;\n\n  while (child !== null) {\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n    child = child.sibling;\n  }\n}\n\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\n  // into their subtree. There are simpler cases in the inner switch\n  // that don't modify the stack.\n\n  switch (deletedFiber.tag) {\n    case HostComponent: {\n      {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      } // Intentional fallthrough to next branch\n    }\n    // eslint-disable-next-line-no-fallthrough\n\n    case HostText: {\n      // We only need to remove the nearest host child. Set the host parent\n      // to `null` on the stack to indicate that nested children don't\n      // need to be removed.\n      {\n        var prevHostParent = hostParent;\n        var prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = null;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n        hostParent = prevHostParent;\n        hostParentIsContainer = prevHostParentIsContainer;\n\n        if (hostParent !== null) {\n          // Now that all the child effects have unmounted, we can remove the\n          // node from the tree.\n          if (hostParentIsContainer) {\n            removeChildFromContainer(hostParent, deletedFiber.stateNode);\n          } else {\n            removeChild(hostParent, deletedFiber.stateNode);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case DehydratedFragment: {\n      // Delete the dehydrated suspense boundary and all of its content.\n\n      {\n        if (hostParent !== null) {\n          if (hostParentIsContainer) {\n            clearSuspenseBoundaryFromContainer(\n              hostParent,\n              deletedFiber.stateNode\n            );\n          } else {\n            clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostPortal: {\n      {\n        // When we go into a portal, it becomes the parent to remove from.\n        var _prevHostParent = hostParent;\n        var _prevHostParentIsContainer = hostParentIsContainer;\n        hostParent = deletedFiber.stateNode.containerInfo;\n        hostParentIsContainer = true;\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n        hostParent = _prevHostParent;\n        hostParentIsContainer = _prevHostParentIsContainer;\n      }\n\n      return;\n    }\n\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      {\n        var updateQueue = deletedFiber.updateQueue;\n\n        if (updateQueue !== null) {\n          var lastEffect = updateQueue.lastEffect;\n\n          if (lastEffect !== null) {\n            var firstEffect = lastEffect.next;\n            var effect = firstEffect;\n\n            do {\n              var _effect = effect,\n                destroy = _effect.destroy,\n                tag = _effect.tag;\n\n              if (destroy !== undefined) {\n                if ((tag & Insertion) !== NoFlags$1) {\n                  safelyCallDestroy(\n                    deletedFiber,\n                    nearestMountedAncestor,\n                    destroy\n                  );\n                } else if ((tag & Layout) !== NoFlags$1) {\n                  if (deletedFiber.mode & ProfileMode) {\n                    startLayoutEffectTimer();\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy\n                    );\n                    recordLayoutEffectDuration(deletedFiber);\n                  } else {\n                    safelyCallDestroy(\n                      deletedFiber,\n                      nearestMountedAncestor,\n                      destroy\n                    );\n                  }\n                }\n              }\n\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case ClassComponent: {\n      {\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n        var instance = deletedFiber.stateNode;\n\n        if (typeof instance.componentWillUnmount === \"function\") {\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            instance\n          );\n        }\n      }\n\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case ScopeComponent: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n\n    case OffscreenComponent: {\n      {\n        recursivelyTraverseDeletionEffects(\n          finishedRoot,\n          nearestMountedAncestor,\n          deletedFiber\n        );\n      }\n\n      break;\n    }\n\n    default: {\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      return;\n    }\n  }\n}\n\nfunction commitSuspenseCallback(finishedWork) {\n  // TODO: Move this to passive phase\n  var newState = finishedWork.memoizedState;\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  var wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    var retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(function(wakeable) {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                \"Expected finished root and lanes to be set. This is a bug in React.\"\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  setCurrentFiber(finishedWork);\n  commitMutationEffectsOnFiber(finishedWork, root);\n  setCurrentFiber(finishedWork);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n  // Deletions effects can be scheduled on any fiber type. They need to happen\n  // before the children effects hae fired.\n  var deletions = parentFiber.deletions;\n\n  if (deletions !== null) {\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i];\n\n      try {\n        commitDeletionEffects(root, parentFiber, childToDelete);\n      } catch (error) {\n        captureCommitPhaseError(childToDelete, parentFiber, error);\n      }\n    }\n  }\n\n  var prevDebugFiber = getCurrentFiber();\n\n  if (parentFiber.subtreeFlags & MutationMask) {\n    var child = parentFiber.child;\n\n    while (child !== null) {\n      setCurrentFiber(child);\n      commitMutationEffectsOnFiber(child, root);\n      child = child.sibling;\n    }\n  }\n\n  setCurrentFiber(prevDebugFiber);\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\n  // because the fiber tag is more specific. An exception is any flag related\n  // to reconcilation, because those can be set on all fiber types.\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        try {\n          commitHookEffectListUnmount(\n            Insertion | HasEffect,\n            finishedWork,\n            finishedWork.return\n          );\n          commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        } // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n\n        if (finishedWork.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              Layout | HasEffect,\n              finishedWork,\n              finishedWork.return\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n\n          recordLayoutEffectDuration(finishedWork);\n        } else {\n          try {\n            commitHookEffectListUnmount(\n              Layout | HasEffect,\n              finishedWork,\n              finishedWork.return\n            );\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case ClassComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n\n      return;\n    }\n\n    case HostComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Ref) {\n        if (current !== null) {\n          safelyDetachRef(current, current.return);\n        }\n      }\n\n      {\n        // TODO: ContentReset gets cleared by the children during the commit\n        // phase. This is a refactor hazard because it means we must read\n        // flags the flags after `commitReconciliationEffects` has already run;\n        // the order matters. We should refactor so that ContentReset does not\n        // rely on mutating the flag during commit. Like by setting a flag\n        // during the render phase instead.\n        if (finishedWork.flags & ContentReset) {\n          var instance = finishedWork.stateNode;\n\n          try {\n            resetTextContent(instance);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n\n        if (flags & Update) {\n          var _instance4 = finishedWork.stateNode;\n\n          if (_instance4 != null) {\n            // Commit the work prepared earlier.\n            var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n            // as the newProps. The updatePayload will contain the real change in\n            // this case.\n\n            var oldProps = current !== null ? current.memoizedProps : newProps;\n            var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n            var updatePayload = finishedWork.updateQueue;\n            finishedWork.updateQueue = null;\n\n            if (updatePayload !== null) {\n              try {\n                commitUpdate(\n                  _instance4,\n                  updatePayload,\n                  type,\n                  oldProps,\n                  newProps,\n                  finishedWork\n                );\n              } catch (error) {\n                captureCommitPhaseError(\n                  finishedWork,\n                  finishedWork.return,\n                  error\n                );\n              }\n            }\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostText: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        {\n          if (finishedWork.stateNode === null) {\n            throw new Error(\n              \"This should have a text node initialized. This error is likely \" +\n                \"caused by a bug in React. Please file an issue.\"\n            );\n          }\n\n          var textInstance = finishedWork.stateNode;\n          var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n\n          var oldText = current !== null ? current.memoizedProps : newText;\n\n          try {\n            commitTextUpdate(textInstance, oldText, newText);\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        }\n      }\n\n      return;\n    }\n\n    case HostRoot: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n\n    case HostPortal: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      return;\n    }\n\n    case SuspenseComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      var offscreenFiber = finishedWork.child;\n\n      if (offscreenFiber.flags & Visibility) {\n        var newState = offscreenFiber.memoizedState;\n        var isHidden = newState !== null;\n\n        if (isHidden) {\n          var wasHidden =\n            offscreenFiber.alternate !== null &&\n            offscreenFiber.alternate.memoizedState !== null;\n\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n      }\n\n      if (flags & Update) {\n        try {\n          commitSuspenseCallback(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n\n        attachSuspenseRetryListeners(finishedWork);\n      }\n\n      return;\n    }\n\n    case OffscreenComponent: {\n      var _wasHidden = current !== null && current.memoizedState !== null;\n\n      {\n        recursivelyTraverseMutationEffects(root, finishedWork);\n      }\n\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Visibility) {\n        var _newState = finishedWork.memoizedState;\n\n        var _isHidden = _newState !== null;\n\n        var offscreenBoundary = finishedWork;\n\n        {\n          // TODO: This needs to run whenever there's an insertion or update\n          // inside a hidden Offscreen tree.\n          hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n        }\n      }\n\n      return;\n    }\n\n    case SuspenseListComponent: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n\n      if (flags & Update) {\n        attachSuspenseRetryListeners(finishedWork);\n      }\n\n      return;\n    }\n\n    case ScopeComponent: {\n      return;\n    }\n\n    default: {\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      return;\n    }\n  }\n}\n\nfunction commitReconciliationEffects(finishedWork) {\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\n  // type. They needs to happen after the children effects have fired, but\n  // before the effects on this fiber have fired.\n  var flags = finishedWork.flags;\n\n  if (flags & Placement) {\n    try {\n      commitPlacement(finishedWork);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    } // Clear the \"placement\" from effect tag so that we know that this is\n    // inserted, before any life-cycles like componentDidMount gets called.\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\n    // and isMounted is deprecated anyway so we should be able to kill this.\n\n    finishedWork.flags &= ~Placement;\n  }\n\n  if (flags & Hydrating) {\n    finishedWork.flags &= ~Hydrating;\n  }\n}\n\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      var current = fiber.alternate;\n      setCurrentFiber(fiber);\n\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountEffects(\n  root,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(\n    finishedWork,\n    root,\n    committedLanes,\n    committedTransitions\n  );\n}\n\nfunction commitPassiveMountEffects_begin(\n  subtreeRoot,\n  root,\n  committedLanes,\n  committedTransitions\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(\n        subtreeRoot,\n        root,\n        committedLanes,\n        committedTransitions\n      );\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot,\n  root,\n  committedLanes,\n  committedTransitions\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n\n      try {\n        commitPassiveMountOnFiber(\n          root,\n          fiber,\n          committedLanes,\n          committedTransitions\n        );\n      } catch (error) {\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (finishedWork.mode & ProfileMode) {\n        startPassiveEffectTimer();\n\n        try {\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n      }\n\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects(firstChild) {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      var deletions = fiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber\n          );\n        }\n\n        {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          var previousFiber = fiber.alternate;\n\n          if (previousFiber !== null) {\n            var detachedChild = previousFiber.child;\n\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n\n              do {\n                var detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentFiber();\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (finishedWork.mode & ProfileMode) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          Passive$1 | HasEffect,\n          finishedWork,\n          finishedWork.return\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          Passive$1 | HasEffect,\n          finishedWork,\n          finishedWork.return\n        );\n      }\n\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n\n    setCurrentFiber(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentFiber();\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n\n    if (child !== null) {\n      child.return = fiber;\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot\n) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var sibling = fiber.sibling;\n    var returnFiber = fiber.return;\n\n    {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      sibling.return = returnFiber;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current,\n  nearestMountedAncestor\n) {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (current.mode & ProfileMode) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n      }\n\n      break;\n    }\n  }\n} // TODO: Reuse reappearLayoutEffects traversal here?\n\nvar COMPONENT_TYPE = 0;\nvar HAS_PSEUDO_CLASS_TYPE = 1;\nvar ROLE_TYPE = 2;\nvar TEST_NAME_TYPE = 3;\nvar TEXT_TYPE = 4;\n\nif (typeof Symbol === \"function\" && Symbol.for) {\n  var symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor(\"selector.component\");\n  HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n  ROLE_TYPE = symbolFor(\"selector.role\");\n  TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n  TEXT_TYPE = symbolFor(\"selector.text\");\n}\n\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\nfunction isLegacyActEnvironment(fiber) {\n  {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined; // $FlowExpectedError - Flow doesn't know about jest\n\n    var jestIsDefined = typeof jest !== \"undefined\";\n    return jestIsDefined && isReactActEnvironmentGlobal !== false;\n  }\n}\nfunction isConcurrentActEnvironment() {\n  {\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\n        ? IS_REACT_ACT_ENVIRONMENT\n        : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      error(\n        \"The current testing environment is not configured to support \" +\n          \"act(...)\"\n      );\n    }\n\n    return isReactActEnvironmentGlobal;\n  }\n}\n\nvar ceil = Math.ceil;\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n  ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n  ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n  ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\nvar NoContext =\n  /*             */\n  0;\nvar BatchedContext =\n  /*               */\n  1;\nvar RenderContext =\n  /*                */\n  2;\nvar CommitContext =\n  /*                */\n  4;\nvar RootInProgress = 0;\nvar RootFatalErrored = 1;\nvar RootErrored = 2;\nvar RootSuspended = 3;\nvar RootSuspendedWithDelay = 4;\nvar RootCompleted = 5;\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\n\nvar executionContext = NoContext; // The root we're working on\n\nvar workInProgressRoot = null; // The fiber we're working on\n\nvar workInProgress = null; // The lanes we're rendering\n\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nvar subtreeRenderLanes = NoLanes;\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\n\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\n\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\n\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\n\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nvar globalMostRecentFallbackTime = 0;\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nvar RENDER_TIMEOUT_MS = 500;\nvar workInProgressTransitions = null;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nvar hasUncaughtError = false;\nvar firstUncaughtError = null;\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects = false;\nvar rootWithPendingPassiveEffects = null;\nvar pendingPassiveEffectsLanes = NoLanes;\nvar pendingPassiveProfilerEffects = [];\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\n\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar rootWithNestedUpdates = null;\nvar isFlushingPassiveEffects = false;\nvar didScheduleUpdateDuringPassiveEffects = false;\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\nvar nestedPassiveUpdateCount = 0;\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nvar currentEventTime = NoTimestamp;\nvar currentEventTransitionLane = NoLanes;\nvar isRunningInsertionEffect = false;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  } else if (\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  var isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if (ReactCurrentBatchConfig$2.transition !== null) {\n      var transition = ReactCurrentBatchConfig$2.transition;\n\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    } // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n\n    return currentEventTransitionLane;\n  } // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n  var updateLane = getCurrentUpdatePriority();\n\n  if (updateLane !== NoLane) {\n    return updateLane;\n  } // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n  var eventLane = getCurrentEventPriority();\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  }\n\n  return claimNextRetryLane();\n}\n\nfunction scheduleUpdateOnFiber(fiber, lane, eventTime) {\n  checkForNestedUpdates();\n\n  {\n    if (isRunningInsertionEffect) {\n      error(\"useInsertionEffect must not schedule updates.\");\n    }\n  }\n\n  var root = markUpdateLaneFromFiberToRoot(fiber, lane);\n\n  if (root === null) {\n    return null;\n  }\n\n  {\n    if (isFlushingPassiveEffects) {\n      didScheduleUpdateDuringPassiveEffects = true;\n    }\n  } // Mark that the root has a pending update.\n\n  markRootUpdated(root, lane, eventTime);\n\n  if (\n    (executionContext & RenderContext) !== NoLanes &&\n    root === workInProgressRoot\n  ) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\n  } else {\n    // This is a normal update, scheduled from outside the render phase. For\n    // example, during an input event.\n    {\n      if (isDevToolsPresent) {\n        addFiberToLanesMap(root, fiber, lane);\n      }\n    }\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (root === workInProgressRoot) {\n      // TODO: Consolidate with `isInterleavedUpdate` check\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if ((executionContext & RenderContext) === NoContext) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(\n          workInProgressRootInterleavedUpdatedLanes,\n          lane\n        );\n      }\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n\n    if (\n      lane === SyncLane &&\n      executionContext === NoContext &&\n      (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !ReactCurrentActQueue$1.isBatchingLegacy\n    ) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n\n  return root;\n}\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  var alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  } // Walk the parent path to the root and update the child lanes.\n\n  var node = sourceFiber;\n  var parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    var root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nfunction isInterleavedUpdate(fiber, lane) {\n  return (\n    // TODO: Optimize slightly by comparing to root that fiber belongs to.\n    // Requires some refactoring. Not a big deal though since it's rare for\n    // concurrent apps to have more than a single root.\n    (workInProgressRoot !== null || // If the interleaved updates queue hasn't been cleared yet, then\n      // we should treat this as an interleaved update, too. This is also a\n      // defensive coding measure in case a new update comes in between when\n      // rendering has finished and when the interleaved updates are transferred\n      // to the main queue.\n      hasInterleavedUpdates()) &&\n    (fiber.mode & ConcurrentMode) !== NoMode && // If this is a render phase update (i.e. UNSAFE_componentWillReceiveProps),\n    // then don't treat this as an interleaved update. This pattern is\n    // accompanied by a warning but we haven't fully deprecated it yet. We can\n    // remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.\n    (executionContext & RenderContext) === NoContext\n  );\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  var nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback$1(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  } // We use the highest priority lane to represent the priority of the callback.\n\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\n\n  var existingCallbackPriority = root.callbackPriority;\n\n  if (\n    existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      ReactCurrentActQueue$1.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        error(\n          \"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\"\n        );\n      }\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\n\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback$1(existingCallbackNode);\n  } // Schedule a new callback.\n\n  var newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n      }\n\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    {\n      // Flush the queue in an Immediate task.\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n    }\n\n    newCallbackNode = null;\n  } else {\n    var schedulerPriorityLevel;\n\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediatePriority;\n        break;\n\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingPriority;\n        break;\n\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdlePriority;\n        break;\n\n      default:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n    }\n\n    newCallbackNode = scheduleCallback$1(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root)\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  {\n    resetNestedUpdateFlag();\n  } // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n  var originalCallbackNode = root.callbackNode;\n  var didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next lanes to work on, using the fields stored\n  // on the root.\n\n  var lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\n  );\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n\n  var shouldTimeSlice =\n    !includesBlockingLane(root, lanes) &&\n    !includesExpiredLane(root, lanes) &&\n    !didTimeout;\n  var exitStatus = shouldTimeSlice\n    ? renderRootConcurrent(root, lanes)\n    : renderRootSync(root, lanes);\n\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      var fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended$1(root, lanes);\n    } else {\n      // The render completed.\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\n      var finishedWork = root.current.alternate;\n\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(finishedWork)\n      ) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\n\n        if (exitStatus === RootErrored) {\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (_errorRetryLanes !== NoLanes) {\n            lanes = _errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var _fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw _fatalError;\n        }\n      } // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n  // Before rendering again, save the errors from the previous attempt.\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n\n    {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  var exitStatus = renderRootSync(root, errorRetryLanes);\n\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  }\n\n  return exitStatus;\n}\n\nfunction queueRecoverableErrors(errors) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(\n      workInProgressRootRecoverableErrors,\n      errors\n    );\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored: {\n      throw new Error(\"Root did not complete. This is a bug in React.\");\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootSuspended: {\n      markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        var msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n        if (msUntilTimeout > 10) {\n          var nextLanes = getNextLanes(root, NoLanes);\n\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n\n          var suspendedLanes = root.suspendedLanes;\n\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            var eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes);\n            break;\n          } // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions\n            ),\n            msUntilTimeout\n          );\n          break;\n        }\n      } // The work expired. Commit immediately.\n\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootSuspendedWithDelay: {\n      markRootSuspended$1(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n        var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        var eventTimeMs = mostRecentEventTime;\n        var timeElapsedMs = now() - eventTimeMs;\n\n        var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n        if (_msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(\n              null,\n              root,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions\n            ),\n            _msUntilTimeout\n          );\n          break;\n        }\n      } // Commit the placeholder.\n\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(\n        root,\n        workInProgressRootRecoverableErrors,\n        workInProgressTransitions\n      );\n      break;\n    }\n\n    default: {\n      throw new Error(\"Unknown root exit status.\");\n    }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  var node = finishedWork;\n\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      var updateQueue = node.updateQueue;\n\n      if (updateQueue !== null) {\n        var checks = updateQueue.stores;\n\n        if (checks !== null) {\n          for (var i = 0; i < checks.length; i++) {\n            var check = checks[i];\n            var getSnapshot = check.getSnapshot;\n            var renderedValue = check.value;\n\n            try {\n              if (!objectIs(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    var child = node.child;\n\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n\n    if (node === finishedWork) {\n      return true;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n\n  return true;\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(\n    suspendedLanes,\n    workInProgressRootInterleavedUpdatedLanes\n  );\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\nfunction performSyncWorkOnRoot(root) {\n  {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  }\n\n  flushPassiveEffects();\n  var lanes = getNextLanes(root, NoLanes);\n\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  var exitStatus = renderRootSync(root, lanes);\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    var fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error(\"Root did not complete. This is a bug in React.\");\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n  var finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(\n    root,\n    workInProgressRootRecoverableErrors,\n    workInProgressTransitions\n  ); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\nfunction batchedUpdates$1(fn, a) {\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n\n    if (\n      executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !ReactCurrentActQueue$1.isBatchingLegacy\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n// Warning, this opts-out of checking the function body.\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n  var previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes\n  );\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  var timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    var interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      var current = interruptedWork.alternate;\n      unwindInterruptedWork(current, interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n  enqueueInterleavedUpdates();\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    var erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (\n          thrownValue !== null &&\n          typeof thrownValue === \"object\" &&\n          typeof thrownValue.then === \"function\"\n        ) {\n          var wakeable = thrownValue;\n          markComponentSuspended(\n            erroredWork,\n            wakeable,\n            workInProgressRootRenderLanes\n          );\n        } else {\n          markComponentErrored(\n            erroredWork,\n            thrownValue,\n            workInProgressRootRenderLanes\n          );\n        }\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes\n  );\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (\n    workInProgressRootExitStatus === RootInProgress ||\n    workInProgressRootExitStatus === RootSuspended ||\n    workInProgressRootExitStatus === RootErrored\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError(error) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error(\n      \"Cannot commit an incomplete root. This error is likely caused by a \" +\n        \"bug in React. Please file an issue.\"\n    );\n  }\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    {\n      if (isDevToolsPresent) {\n        var memoizedUpdaters = root.memoizedUpdaters;\n\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    workInProgressTransitions = getTransitionsForLanes();\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (workInProgress !== null) {\n    return RootInProgress;\n  } else {\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  var current = unitOfWork.alternate;\n  setCurrentFiber(unitOfWork);\n  var next;\n\n  if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentFiber();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  var completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    var current = completedWork.alternate;\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentFiber(completedWork);\n      var next = void 0;\n\n      if ((completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      resetCurrentFiber();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\n\n      if (_next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        _next.flags &= HostEffectMask;\n        workInProgress = _next;\n        return;\n      }\n\n      if ((completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        var actualDuration = completedWork.actualDuration;\n        var child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    var siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root, recoverableErrors, transitions) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(\n      root,\n      recoverableErrors,\n      transitions,\n      previousUpdateLanePriority\n    );\n  } finally {\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(\n  root,\n  recoverableErrors,\n  transitions,\n  renderPriorityLevel\n) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Should not already be working.\");\n  }\n\n  var finishedWork = root.finishedWork;\n  var lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n    return null;\n  } else {\n    {\n      if (lanes === NoLanes) {\n        error(\n          \"root.finishedLanes should not be empty during a commit. This is a \" +\n            \"bug in React.\"\n        );\n      }\n    }\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error(\n      \"Cannot commit the same tree as before. This error is likely caused by \" +\n        \"a bug in React. Please file an issue.\"\n    );\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n  root.callbackNode = null;\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      // to store it in pendingPassiveTransitions until they get processed\n      // We need to pass this through as an argument to commitRoot\n      // because workInProgressTransitions might have changed between\n      // the previous render and commit if we throttle the commit\n      // with setTimeout\n\n      pendingPassiveTransitions = transitions;\n      scheduleCallback$1(NormalPriority, function() {\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n\n        return null;\n      });\n    }\n  } // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n\n  var subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  var rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    ReactCurrentBatchConfig$2.transition = null;\n    var previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    var prevExecutionContext = executionContext;\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork\n    );\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    commitMutationEffects(root, finishedWork, lanes);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n\n    commitLayoutEffects(finishedWork, root, lanes);\n    // opportunity to paint.\n\n    requestPaint();\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\n\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } else {\n    {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n    }\n  } // Read this again, since an effect might have updated it\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n\n  {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n  // additional work on this root is scheduled.\n\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    var onRecoverableError = root.onRecoverableError;\n\n    for (var i = 0; i < recoverableErrors.length; i++) {\n      var recoverableError = recoverableErrors[i];\n      onRecoverableError(recoverableError);\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    var error$1 = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error$1;\n  } // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  } // Read this again, since a passive effect might have updated it\n\n  remainingLanes = root.pendingLanes;\n\n  if (includesSomeLane(remainingLanes, SyncLane)) {\n    {\n      markNestedUpdateScheduled();\n    } // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  } // If layout work was scheduled, flush it now.\n\n  flushSyncCallbacks();\n\n  return null;\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    var previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig$2.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\n  {\n    pendingPassiveProfilerEffects.push(fiber);\n\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function() {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  } // Cache and clear the transitions flag\n\n  var transitions = pendingPassiveTransitions;\n  pendingPassiveTransitions = null;\n  var root = rootWithPendingPassiveEffects;\n  var lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error(\"Cannot flush passive effects while already rendering.\");\n  }\n\n  {\n    isFlushingPassiveEffects = true;\n    didScheduleUpdateDuringPassiveEffects = false;\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\n\n  {\n    var profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n\n    for (var i = 0; i < profilerEffects.length; i++) {\n      var _fiber = profilerEffects[i];\n      commitPassiveEffectDurations(root, _fiber);\n    }\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbacks();\n\n  {\n    // If additional passive effects were scheduled, increment a counter. If this\n    // exceeds the limit, we'll fire a warning.\n    if (didScheduleUpdateDuringPassiveEffects) {\n      if (root === rootWithPassiveNestedUpdates) {\n        nestedPassiveUpdateCount++;\n      } else {\n        nestedPassiveUpdateCount = 0;\n        rootWithPassiveNestedUpdates = root;\n      }\n    } else {\n      nestedPassiveUpdateCount = 0;\n    }\n\n    isFlushingPassiveEffects = false;\n    didScheduleUpdateDuringPassiveEffects = false;\n  } // TODO: Move to commitPassiveMountEffects\n\n  onPostCommitRoot(root);\n\n  {\n    var stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nvar onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  var errorInfo = createCapturedValue(error, sourceFiber);\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  enqueueUpdate(rootFiber, update);\n  var eventTime = requestEventTime();\n  var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n  {\n    reportUncaughtErrorInDEV(error$1);\n    setIsRunningInsertionEffect(false);\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n    return;\n  }\n\n  var fiber = null;\n\n  {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      var ctor = fiber.type;\n      var instance = fiber.stateNode;\n\n      if (\n        typeof ctor.getDerivedStateFromError === \"function\" ||\n        (typeof instance.componentDidCatch === \"function\" &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        var errorInfo = createCapturedValue(error$1, sourceFiber);\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        enqueueUpdate(fiber, update);\n        var eventTime = requestEventTime();\n        var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n\n  {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    error(\n      \"Internal React error: Attempted to capture a commit phase error \" +\n        \"inside a detached tree. This indicates a bug in React. Likely \" +\n        \"causes include deleting the same fiber more than once, committing an \" +\n        \"already-finished tree, or an inconsistent return pointer.\\n\\n\" +\n        \"Error message:\\n\\n%s\",\n      error$1\n    );\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  var eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n  var eventTime = requestEventTime();\n  var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState;\n  var retryLane = NoLane;\n\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = NoLane; // Default\n\n  var retryCache;\n\n  switch (boundaryFiber.tag) {\n    case SuspenseComponent:\n      retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n\n      break;\n\n    case SuspenseListComponent:\n      retryCache = boundaryFiber.stateNode;\n      break;\n\n    default:\n      throw new Error(\n        \"Pinged unknown suspense boundary type. \" +\n          \"This is probably a bug in React.\"\n      );\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    throw new Error(\n      \"Maximum update depth exceeded. This can happen when a component \" +\n        \"repeatedly calls setState inside componentWillUpdate or \" +\n        \"componentDidUpdate. React limits the number of nested updates to \" +\n        \"prevent infinite loops.\"\n    );\n  }\n\n  {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      rootWithPassiveNestedUpdates = null;\n\n      error(\n        \"Maximum update depth exceeded. This can happen when a component \" +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          \"have a dependency array, or one of the dependencies changes on \" +\n          \"every render.\"\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nvar didWarnStateUpdateForNotYetMountedComponent = null;\n\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    var tag = fiber.tag;\n\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    } // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n\n    var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    var previousFiber = current;\n\n    try {\n      setCurrentFiber(fiber);\n\n      error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          \"This indicates that you have a side-effect in your render function that \" +\n          \"asynchronously later calls tries to update the component. Move this work to \" +\n          \"useEffect instead.\"\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentFiber(fiber);\n      } else {\n        resetCurrentFiber();\n      }\n    }\n  }\n}\n\nvar beginWork$1;\n\n{\n  var dummyFiber = null;\n\n  beginWork$1 = function(current, unitOfWork, lanes) {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork\n    );\n\n    try {\n      return beginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        didSuspendOrErrorWhileHydratingDEV() ||\n        (originalError !== null &&\n          typeof originalError === \"object\" &&\n          typeof originalError.then === \"function\")\n      ) {\n        // Don't replay promises.\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\n        throw originalError;\n      } // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n\n      resetContextDependencies();\n      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n      // Unwind the failed stack frame\n\n      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.\n\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      } // Run beginWork again.\n\n      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n\n      if (hasCaughtError()) {\n        var replayError = clearCaughtError();\n\n        if (\n          typeof replayError === \"object\" &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === \"object\" &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      } // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\n\n      throw originalError;\n    }\n  };\n}\n\nvar didWarnAboutUpdateInRender = false;\nvar didWarnAboutUpdateInRenderForAnotherComponent;\n\n{\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  {\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          var renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            \"Unknown\"; // Dedupe by the rendering component because it's the one that needs to be fixed.\n\n          var dedupeKey = renderingComponentName;\n\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            var setStateComponentName =\n              getComponentNameFromFiber(fiber) || \"Unknown\";\n\n            error(\n              \"Cannot update a component (`%s`) while rendering a \" +\n                \"different component (`%s`). To locate the bad setState() call inside `%s`, \" +\n                \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\",\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName\n            );\n          }\n\n          break;\n        }\n\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            error(\n              \"Cannot update during an existing state transition (such as \" +\n                \"within `render`). Render methods should be a pure \" +\n                \"function of props and state.\"\n            );\n\n            didWarnAboutUpdateInRender = true;\n          }\n\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction restorePendingUpdaters(root, lanes) {\n  {\n    if (isDevToolsPresent) {\n      var memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(function(schedulingFiber) {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      }); // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\nvar fakeActCallbackNode = {};\n\nfunction scheduleCallback$1(priorityLevel, callback) {\n  {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    var actQueue = ReactCurrentActQueue$1.current;\n\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return scheduleCallback(priorityLevel, callback);\n    }\n  }\n}\n\nfunction cancelCallback$1(callbackNode) {\n  if (callbackNode === fakeActCallbackNode) {\n    return;\n  } // In production, always call Scheduler. This function will be stripped out.\n\n  return cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return ReactCurrentActQueue$1.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\n  {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n\n      if (\n        fiber.tag !== FunctionComponent &&\n        fiber.tag !== ForwardRef &&\n        fiber.tag !== SimpleMemoComponent\n      ) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue$1.current === null) {\n      var previousFiber = current;\n\n      try {\n        setCurrentFiber(fiber);\n\n        error(\n          \"An update to %s inside a test was not wrapped in act(...).\\n\\n\" +\n            \"When testing, code that causes React state updates should be \" +\n            \"wrapped into act(...):\\n\\n\" +\n            \"act(() => {\\n\" +\n            \"  /* fire events that update state */\\n\" +\n            \"});\\n\" +\n            \"/* assert on the output */\\n\\n\" +\n            \"This ensures that you're testing the behavior the user would see \" +\n            \"in the browser.\" +\n            \" Learn more at https://reactjs.org/link/wrap-tests-with-act\",\n          getComponentNameFromFiber(fiber)\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentFiber(fiber);\n        } else {\n          resetCurrentFiber();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n  {\n    if (\n      root.tag !== LegacyRoot &&\n      isConcurrentActEnvironment() &&\n      ReactCurrentActQueue$1.current === null\n    ) {\n      error(\n        \"A suspended resource finished loading inside a test, but the event \" +\n          \"was not wrapped in act(...).\\n\\n\" +\n          \"When testing, code that resolves suspended data should be wrapped \" +\n          \"into act(...):\\n\\n\" +\n          \"act(() => {\\n\" +\n          \"  /* finish loading suspended data */\\n\" +\n          \"});\\n\" +\n          \"/* assert on the output */\\n\\n\" +\n          \"This ensures that you're testing the behavior the user would see \" +\n          \"in the browser.\" +\n          \" Learn more at https://reactjs.org/link/wrap-tests-with-act\"\n      );\n    }\n  }\n}\n\nfunction setIsRunningInsertionEffect(isRunning) {\n  {\n    isRunningInsertionEffect = isRunning;\n  }\n}\n\n/* eslint-disable react-internal/prod-error-codes */\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\n\nvar failedBoundaries = null;\nvar setRefreshHandler = function(handler) {\n  {\n    resolveFamily = handler;\n  }\n};\nfunction resolveFunctionForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      return type;\n    } // Use the latest known implementation.\n\n    return family.current;\n  }\n}\nfunction resolveClassForHotReloading(type) {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\nfunction resolveForwardRefForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === \"function\"\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        var currentRender = resolveFunctionForHotReloading(type.render);\n\n        if (type.render !== currentRender) {\n          var syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender\n          };\n\n          if (type.displayName !== undefined) {\n            syntheticType.displayName = type.displayName;\n          }\n\n          return syntheticType;\n        }\n      }\n\n      return type;\n    } // Use the latest known implementation.\n\n    return family.current;\n  }\n}\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    var prevType = fiber.elementType;\n    var nextType = element.type; // If we got here, we know types aren't === equal.\n\n    var needsCompareFamilies = false;\n    var $$typeofNextType =\n      typeof nextType === \"object\" && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === \"function\") {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case FunctionComponent: {\n        if (typeof nextType === \"function\") {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n\n        break;\n      }\n\n      default:\n        return false;\n    } // Check if both types have a family and it's the same one.\n\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      var prevFamily = resolveFamily(prevType);\n\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    if (typeof WeakSet !== \"function\") {\n      return;\n    }\n\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n\n    failedBoundaries.add(fiber);\n  }\n}\nvar scheduleRefresh = function(root, update) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    var staleFamilies = update.staleFamilies,\n      updatedFamilies = update.updatedFamilies;\n    flushPassiveEffects();\n    flushSync(function() {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies\n      );\n    });\n  }\n};\nvar scheduleRoot = function(root, element) {\n  {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n\n    flushPassiveEffects();\n    flushSync(function() {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber,\n  updatedFamilies,\n  staleFamilies\n) {\n  {\n    var alternate = fiber.alternate,\n      child = fiber.child,\n      sibling = fiber.sibling,\n      tag = fiber.tag,\n      type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n    }\n\n    var needsRender = false;\n    var needsRemount = false;\n\n    if (candidateType !== null) {\n      var family = resolveFamily(candidateType);\n\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies\n      );\n    }\n\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies\n      );\n    }\n  }\n}\n\nvar findHostInstancesForRefresh = function(root, families) {\n  {\n    var hostInstances = new Set();\n    var types = new Set(\n      families.map(function(family) {\n        return family.current;\n      })\n    );\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances\n    );\n    return hostInstances;\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber,\n  types,\n  hostInstances\n) {\n  {\n    var child = fiber.child,\n      sibling = fiber.sibling,\n      tag = fiber.tag,\n      type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    var didMatch = false;\n\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances\n    );\n\n    if (foundHostInstances) {\n      return;\n    } // If we didn't find any host children, fallback to closest host parent.\n\n    var node = fiber;\n\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n\n      if (node.return === null) {\n        throw new Error(\"Expected to reach root first.\");\n      }\n\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var node = fiber;\n    var foundHostInstances = false;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n\n  return false;\n}\n\nvar hasBadMapPolyfill;\n\n{\n  hasBadMapPolyfill = false;\n\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n      Object.preventExtensions(this);\n    }\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\nvar createFiber = function(tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return (\n    typeof type === \"function\" &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === \"function\") {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  } // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  var currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n    }\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\n\n  var current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext\n          };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(\n  tag,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride\n) {\n  var mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(\n  type, // React$ElementType\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  var resolvedType = type;\n\n  if (typeof type === \"function\") {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n\n      {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === \"string\") {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_CACHE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_TRACING_MARKER_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default: {\n        if (typeof type === \"object\" && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n\n              {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n\n              break getTag;\n\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n\n        var info = \"\";\n\n        {\n          if (\n            type === undefined ||\n            (typeof type === \"object\" &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              \" You likely forgot to export your component from the file \" +\n              \"it's defined in, or you might have mixed up default and \" +\n              \"named imports.\";\n          }\n\n          var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n        }\n\n        throw new Error(\n          \"Element type is invalid: expected a string (for built-in \" +\n            \"components) or a class/function (for composite components) \" +\n            (\"but got: \" + (type == null ? type : typeof type) + \".\" + info)\n        );\n      }\n    }\n  }\n\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  var owner = null;\n\n  {\n    owner = element._owner;\n  }\n\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes\n  );\n\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n  {\n    if (typeof pendingProps.id !== \"string\") {\n      error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id\n      );\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  var primaryChildInstance = {};\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction assignFiberPropertiesInDEV(target, source) {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  } // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n\n  {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onRecoverableError\n) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  {\n    this.memoizedUpdaters = new Set();\n    var pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n\n    for (var _i = 0; _i < TotalLanes; _i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n        break;\n    }\n  }\n}\n\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n  // host config, but because they are passed in at runtime, we have to thread\n  // them through the root constructor. Perhaps we should put them all into a\n  // single type, like a DynamicHostConfig that is defined by the renderer.\n  identifierPrefix,\n  onRecoverableError,\n  transitionCallbacks\n) {\n  var root = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onRecoverableError\n  );\n  // stateNode is any.\n\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  {\n    var _initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null,\n      pendingSuspenseBoundaries: null\n    };\n    uninitializedFiber.memoizedState = _initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar ReactVersion = \"18.2.0-next-d300cebde-20220601\";\n\nfunction createPortal(\n  children,\n  containerInfo, // TODO: figure out the API for cross-renderer implementation.\n  implementation\n) {\n  var key =\n    arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  {\n    checkKeyStringCoercion(key);\n  }\n\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\n\nvar didWarnAboutNestedUpdates;\nvar didWarnAboutFindNodeInStrictMode;\n\n{\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstanceWithWarning(component, methodName) {\n  {\n    var fiber = get(component);\n\n    if (fiber === undefined) {\n      if (typeof component.render === \"function\") {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      } else {\n        var keys = Object.keys(component).join(\",\");\n        throw new Error(\n          \"Argument appears to not be a ReactComponent. Keys: \" + keys\n        );\n      }\n    }\n\n    var hostFiber = findCurrentHostFiber(fiber);\n\n    if (hostFiber === null) {\n      return null;\n    }\n\n    if (hostFiber.mode & StrictLegacyMode) {\n      var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        var previousFiber = current;\n\n        try {\n          setCurrentFiber(hostFiber);\n\n          if (fiber.mode & StrictLegacyMode) {\n            error(\n              \"%s is deprecated in StrictMode. \" +\n                \"%s was passed an instance of %s which is inside StrictMode. \" +\n                \"Instead, add a ref directly to the element you want to reference. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-find-node\",\n              methodName,\n              methodName,\n              componentName\n            );\n          } else {\n            error(\n              \"%s is deprecated in StrictMode. \" +\n                \"%s was passed an instance of %s which renders StrictMode children. \" +\n                \"Instead, add a ref directly to the element you want to reference. \" +\n                \"Learn more about using refs safely here: \" +\n                \"https://reactjs.org/link/strict-mode-find-node\",\n              methodName,\n              methodName,\n              componentName\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentFiber(previousFiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n\n    return hostFiber.stateNode;\n  }\n}\n\nfunction createContainer(\n  containerInfo,\n  tag,\n  hydrationCallbacks,\n  isStrictMode,\n  concurrentUpdatesByDefaultOverride,\n  identifierPrefix,\n  onRecoverableError,\n  transitionCallbacks\n) {\n  var hydrate = false;\n  var initialChildren = null;\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    initialChildren,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n    identifierPrefix,\n    onRecoverableError\n  );\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n  {\n    onScheduleRoot(container, element);\n  }\n\n  var current$1 = container.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current$1);\n\n  var context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  {\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n\n      error(\n        \"Render methods should be a pure function of props and state; \" +\n          \"triggering nested component updates from render is not allowed. \" +\n          \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" +\n          \"Check the render method of %s.\",\n        getComponentNameFromFiber(current) || \"Unknown\"\n      );\n    }\n  }\n\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n    {\n      if (typeof callback !== \"function\") {\n        error(\n          \"render(...): Expected the last optional `callback` argument to be a \" +\n            \"function. Instead received: %s.\",\n          callback\n        );\n      }\n    }\n\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current$1, update);\n  var root = scheduleUpdateOnFiber(current$1, lane, eventTime);\n\n  if (root !== null) {\n    entangleTransitions(root, current$1, lane);\n  }\n\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nvar shouldErrorImpl = function(fiber) {\n  return null;\n};\n\nfunction shouldError(fiber) {\n  return shouldErrorImpl(fiber);\n}\n\nvar shouldSuspendImpl = function(fiber) {\n  return false;\n};\n\nfunction shouldSuspend(fiber) {\n  return shouldSuspendImpl(fiber);\n}\nvar overrideHookState = null;\nvar overrideHookStateDeletePath = null;\nvar overrideHookStateRenamePath = null;\nvar overrideProps = null;\nvar overridePropsDeletePath = null;\nvar overridePropsRenamePath = null;\nvar scheduleUpdate = null;\nvar setErrorHandler = null;\nvar setSuspenseHandler = null;\n\n{\n  var copyWithDeleteImpl = function(obj, path, index) {\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(key, 1);\n      } else {\n        delete updated[key];\n      }\n\n      return updated;\n    } // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  var copyWithDelete = function(obj, path) {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  var copyWithRenameImpl = function(obj, oldPath, newPath, index) {\n    var oldKey = oldPath[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === oldPath.length) {\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\n\n      updated[newKey] = updated[oldKey];\n\n      if (isArray(updated)) {\n        updated.splice(oldKey, 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1\n      );\n    }\n\n    return updated;\n  };\n\n  var copyWithRename = function(obj, oldPath, newPath) {\n    if (oldPath.length !== newPath.length) {\n      warn(\"copyWithRename() expects paths of the same length\");\n\n      return;\n    } else {\n      for (var i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          warn(\n            \"copyWithRename() expects paths to be the same except for the deepest key\"\n          );\n\n          return;\n        }\n      }\n    }\n\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  var copyWithSetImpl = function(obj, path, index, value) {\n    if (index >= path.length) {\n      return value;\n    }\n\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function(obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  var findHook = function(fiber, id) {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    var currentHook = fiber.memoizedState;\n\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n\n    return currentHook;\n  }; // Support DevTools editable values for useState and useReducer.\n\n  overrideHookState = function(fiber, id, path, value) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overrideHookStateDeletePath = function(fiber, id, path) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n  overrideProps = function(fiber, path, value) {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  overridePropsDeletePath = function(fiber, path) {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  overridePropsRenamePath = function(fiber, oldPath, newPath) {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = function(fiber) {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setErrorHandler = function(newShouldErrorImpl) {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = function(newShouldSuspendImpl) {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber) {\n  var hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return current;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState: overrideHookState,\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\n    overrideProps: overrideProps,\n    overridePropsDeletePath: overridePropsDeletePath,\n    overridePropsRenamePath: overridePropsRenamePath,\n    setErrorHandler: setErrorHandler,\n    setSuspenseHandler: setSuspenseHandler,\n    scheduleUpdate: scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: findHostInstancesForRefresh,\n    scheduleRefresh: scheduleRefresh,\n    scheduleRoot: scheduleRoot,\n    setRefreshHandler: setRefreshHandler,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: getCurrentFiberForDevTools,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion\n  });\n}\n\nvar emptyObject$1 = {};\n\n{\n  Object.freeze(emptyObject$1);\n}\n\nvar createHierarchy;\nvar getHostNode;\nvar getHostProps;\nvar lastNonHostInstance;\n\nvar getOwnerHierarchy;\nvar traverseOwnerTreeUp;\n\n{\n  createHierarchy = function(fiberHierarchy) {\n    return fiberHierarchy.map(function(fiber) {\n      return {\n        name: getComponentNameFromType(fiber.type),\n        getInspectorData: function(findNodeHandle) {\n          return {\n            props: getHostProps(fiber),\n            source: fiber._debugSource,\n            measure: function(callback) {\n              // If this is Fabric, we'll find a ShadowNode and use that to measure.\n              var hostFiber = findCurrentHostFiber(fiber);\n              var shadowNode =\n                hostFiber != null &&\n                hostFiber.stateNode !== null &&\n                hostFiber.stateNode.node;\n\n              if (shadowNode) {\n                nativeFabricUIManager.measure(shadowNode, callback);\n              } else {\n                return ReactNativePrivateInterface.UIManager.measure(\n                  getHostNode(fiber, findNodeHandle),\n                  callback\n                );\n              }\n            }\n          };\n        }\n      };\n    });\n  };\n\n  getHostNode = function(fiber, findNodeHandle) {\n    var hostNode; // look for children first for the hostNode\n    // as composite fibers do not have a hostNode\n\n    while (fiber) {\n      if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n        hostNode = findNodeHandle(fiber.stateNode);\n      }\n\n      if (hostNode) {\n        return hostNode;\n      }\n\n      fiber = fiber.child;\n    }\n\n    return null;\n  };\n\n  getHostProps = function(fiber) {\n    var host = findCurrentHostFiber(fiber);\n\n    if (host) {\n      return host.memoizedProps || emptyObject$1;\n    }\n\n    return emptyObject$1;\n  };\n\n  exports.getInspectorDataForInstance = function(closestInstance) {\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject$1,\n        selectedIndex: null,\n        source: null\n      };\n    }\n\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    var fiberHierarchy = getOwnerHierarchy(fiber);\n    var instance = lastNonHostInstance(fiberHierarchy);\n    var hierarchy = createHierarchy(fiberHierarchy);\n    var props = getHostProps(instance);\n    var source = instance._debugSource;\n    var selectedIndex = fiberHierarchy.indexOf(instance);\n    return {\n      hierarchy: hierarchy,\n      props: props,\n      selectedIndex: selectedIndex,\n      source: source\n    };\n  };\n\n  getOwnerHierarchy = function(instance) {\n    var hierarchy = [];\n    traverseOwnerTreeUp(hierarchy, instance);\n    return hierarchy;\n  };\n\n  lastNonHostInstance = function(hierarchy) {\n    for (var i = hierarchy.length - 1; i > 1; i--) {\n      var instance = hierarchy[i];\n\n      if (instance.tag !== HostComponent) {\n        return instance;\n      }\n    }\n\n    return hierarchy[0];\n  };\n\n  traverseOwnerTreeUp = function(hierarchy, instance) {\n    if (instance) {\n      hierarchy.unshift(instance);\n      traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n    }\n  };\n}\n\nvar getInspectorDataForViewTag;\nvar getInspectorDataForViewAtPoint;\n\n{\n  getInspectorDataForViewTag = function(viewTag) {\n    var closestInstance = getInstanceFromTag(viewTag); // Handle case where user clicks outside of ReactNative\n\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject$1,\n        selectedIndex: null,\n        source: null\n      };\n    }\n\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    var fiberHierarchy = getOwnerHierarchy(fiber);\n    var instance = lastNonHostInstance(fiberHierarchy);\n    var hierarchy = createHierarchy(fiberHierarchy);\n    var props = getHostProps(instance);\n    var source = instance._debugSource;\n    var selectedIndex = fiberHierarchy.indexOf(instance);\n    return {\n      hierarchy: hierarchy,\n      props: props,\n      selectedIndex: selectedIndex,\n      source: source\n    };\n  };\n\n  getInspectorDataForViewAtPoint = function(\n    findNodeHandle,\n    inspectedView,\n    locationX,\n    locationY,\n    callback\n  ) {\n    var closestInstance = null;\n\n    if (inspectedView._internalInstanceHandle != null) {\n      // For Fabric we can look up the instance handle directly and measure it.\n      nativeFabricUIManager.findNodeAtPoint(\n        inspectedView._internalInstanceHandle.stateNode.node,\n        locationX,\n        locationY,\n        function(internalInstanceHandle) {\n          if (internalInstanceHandle == null) {\n            callback(\n              assign(\n                {\n                  pointerY: locationY,\n                  frame: {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0\n                  }\n                },\n                exports.getInspectorDataForInstance(closestInstance)\n              )\n            );\n          }\n\n          closestInstance =\n            internalInstanceHandle.stateNode.canonical._internalInstanceHandle; // Note: this is deprecated and we want to remove it ASAP. Keeping it here for React DevTools compatibility for now.\n\n          var nativeViewTag =\n            internalInstanceHandle.stateNode.canonical._nativeTag;\n          nativeFabricUIManager.measure(\n            internalInstanceHandle.stateNode.node,\n            function(x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(\n                closestInstance\n              );\n              callback(\n                assign({}, inspectorData, {\n                  pointerY: locationY,\n                  frame: {\n                    left: pageX,\n                    top: pageY,\n                    width: width,\n                    height: height\n                  },\n                  touchedViewTag: nativeViewTag\n                })\n              );\n            }\n          );\n        }\n      );\n    } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n      // For Paper we fall back to the old strategy using the React tag.\n      ReactNativePrivateInterface.UIManager.findSubviewIn(\n        findNodeHandle(inspectedView),\n        [locationX, locationY],\n        function(nativeViewTag, left, top, width, height) {\n          var inspectorData = exports.getInspectorDataForInstance(\n            getInstanceFromTag(nativeViewTag)\n          );\n          callback(\n            assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            })\n          );\n        }\n      );\n    } else {\n      error(\n        \"getInspectorDataForViewAtPoint expects to receive a host component\"\n      );\n\n      return;\n    }\n  };\n}\n\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n\nfunction findHostInstance_DEPRECATED(componentOrHandle) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing findNodeHandle inside its render(). \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromType(owner.type) || \"A component\"\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrHandle == null) {\n    return null;\n  }\n\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle;\n  }\n\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical;\n  }\n\n  var hostInstance;\n\n  {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      \"findHostInstance_DEPRECATED\"\n    );\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n\n  if (hostInstance.canonical) {\n    // Fabric\n    return hostInstance.canonical;\n  } // $FlowFixMe[incompatible-return]\n\n  return hostInstance;\n}\n\nfunction findNodeHandle(componentOrHandle) {\n  {\n    var owner = ReactCurrentOwner$3.current;\n\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        error(\n          \"%s is accessing findNodeHandle inside its render(). \" +\n            \"render() should be a pure function of props and state. It should \" +\n            \"never access something that requires stale data from the previous \" +\n            \"render, such as refs. Move this logic to componentDidMount and \" +\n            \"componentDidUpdate instead.\",\n          getComponentNameFromType(owner.type) || \"A component\"\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrHandle == null) {\n    return null;\n  }\n\n  if (typeof componentOrHandle === \"number\") {\n    // Already a node handle\n    return componentOrHandle;\n  }\n\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle._nativeTag;\n  }\n\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical._nativeTag;\n  }\n\n  var hostInstance;\n\n  {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      \"findNodeHandle\"\n    );\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n\n  if (hostInstance.canonical) {\n    // Fabric\n    return hostInstance.canonical._nativeTag;\n  }\n\n  return hostInstance._nativeTag;\n}\n\nfunction dispatchCommand(handle, command, args) {\n  if (handle._nativeTag == null) {\n    {\n      error(\n        \"dispatchCommand was called with a ref that isn't a \" +\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\n      );\n    }\n\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    var stateNode = handle._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n    }\n  } else {\n    ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(\n      handle._nativeTag,\n      command,\n      args\n    );\n  }\n}\n\nfunction sendAccessibilityEvent(handle, eventType) {\n  if (handle._nativeTag == null) {\n    {\n      error(\n        \"sendAccessibilityEvent was called with a ref that isn't a \" +\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\n      );\n    }\n\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    var stateNode = handle._internalInstanceHandle.stateNode;\n\n    if (stateNode != null) {\n      nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n    }\n  } else {\n    ReactNativePrivateInterface.legacySendAccessibilityEvent(\n      handle._nativeTag,\n      eventType\n    );\n  }\n}\n\nfunction onRecoverableError(error$1) {\n  // TODO: Expose onRecoverableError option to userspace\n  // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\n  error(error$1);\n}\n\nfunction render(element, containerTag, callback) {\n  var root = roots.get(containerTag);\n\n  if (!root) {\n    // TODO (bvaughn): If we decide to keep the wrapper component,\n    // We could create a wrapper for containerTag as well to reduce special casing.\n    root = createContainer(\n      containerTag,\n      LegacyRoot,\n      null,\n      false,\n      null,\n      \"\",\n      onRecoverableError\n    );\n    roots.set(containerTag, root);\n  }\n\n  updateContainer(element, root, null, callback); // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n\n  return getPublicRootInstance(root);\n}\n\nfunction unmountComponentAtNode(containerTag) {\n  var root = roots.get(containerTag);\n\n  if (root) {\n    // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\n    updateContainer(null, root, null, function() {\n      roots.delete(containerTag);\n    });\n  }\n}\n\nfunction unmountComponentAtNodeAndRemoveContainer(containerTag) {\n  unmountComponentAtNode(containerTag); // Call back into native to remove all of the subviews from this container\n\n  ReactNativePrivateInterface.UIManager.removeRootView(containerTag);\n}\n\nfunction createPortal$1(children, containerTag) {\n  var key =\n    arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return createPortal(children, containerTag, null, key);\n}\n\nsetBatchingImplementation(batchedUpdates$1);\n\nfunction computeComponentStackForErrorReporting(reactTag) {\n  var fiber = getInstanceFromTag(reactTag);\n\n  if (!fiber) {\n    return \"\";\n  }\n\n  return getStackByFiberInDevAndProd(fiber);\n}\n\nvar roots = new Map();\nvar Internals = {\n  computeComponentStackForErrorReporting: computeComponentStackForErrorReporting\n};\ninjectIntoDevTools({\n  findFiberByHostInstance: getInstanceFromTag,\n  bundleType: 1,\n  version: ReactVersion,\n  rendererPackageName: \"react-native-renderer\",\n  rendererConfig: {\n    getInspectorDataForViewTag: getInspectorDataForViewTag,\n    getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(\n      null,\n      findNodeHandle\n    )\n  }\n});\n\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\nexports.createPortal = createPortal$1;\nexports.dispatchCommand = dispatchCommand;\nexports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\nexports.findNodeHandle = findNodeHandle;\nexports.render = render;\nexports.sendAccessibilityEvent = sendAccessibilityEvent;\nexports.unmountComponentAtNode = unmountComponentAtNode;\nexports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;\nexports.unstable_batchedUpdates = batchedUpdates;\n\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}