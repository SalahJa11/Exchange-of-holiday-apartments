{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"size\", \"style\", \"theme\", \"visible\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { withInternalTheme } from \"../core/theming\";\nimport { black, white } from \"../styles/themes/v2/colors\";\nimport getContrastingColor from \"../utils/getContrastingColor\";\nvar defaultSize = 20;\nvar Badge = function Badge(_ref) {\n  var _theme$colors;\n  var children = _ref.children,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    opacity = _React$useRef.current;\n  var _useWindowDimensions = useWindowDimensions(),\n    fontScale = _useWindowDimensions.fontScale;\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [visible, opacity, scale]);\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? theme.isV3 ? theme.colors.error : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.notification : _ref2$backgroundColor,\n    restStyle = _objectWithoutProperties(_ref2, _excluded2);\n  var textColor = theme.isV3 ? theme.colors.onError : getContrastingColor(backgroundColor, white, black);\n  var borderRadius = size / 2;\n  var paddingHorizontal = theme.isV3 ? 3 : 4;\n  return React.createElement(Animated.Text, _extends({\n    numberOfLines: 1,\n    style: [_objectSpread(_objectSpread({\n      opacity: opacity,\n      backgroundColor: backgroundColor,\n      color: textColor,\n      fontSize: size * 0.5\n    }, !theme.isV3 && theme.fonts.regular), {}, {\n      lineHeight: size / fontScale,\n      height: size,\n      minWidth: size,\n      borderRadius: borderRadius,\n      paddingHorizontal: paddingHorizontal\n    }), styles.container, restStyle]\n  }, rest), children);\n};\nexport default withInternalTheme(Badge);\nvar styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","black","white","getContrastingColor","defaultSize","Badge","_ref","children","size","style","theme","visible","rest","useRef","Animated","Value","opacity","current","useWindowDimensions","fontScale","isFirstRendering","scale","animation","useEffect","timing","toValue","duration","useNativeDriver","start","StyleSheet","flatten","backgroundColor","isV3","colors","error","_theme$colors","notification","restStyle","textColor","onError","borderRadius","paddingHorizontal","Text","numberOfLines","color","fontSize","fonts","regular","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","textAlignVertical","overflow"],"sources":["Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { InternalTheme } from '../types';\nimport getContrastingColor from '../utils/getContrastingColor';\n\nconst defaultSize = 20;\n\nexport type Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible?: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { fontScale } = useWindowDimensions();\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const {\n    backgroundColor = theme.isV3\n      ? theme.colors.error\n      : theme.colors?.notification,\n    ...restStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n\n  const textColor = theme.isV3\n    ? theme.colors.onError\n    : getContrastingColor(backgroundColor, white, black);\n\n  const borderRadius = size / 2;\n\n  const paddingHorizontal = theme.isV3 ? 3 : 4;\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...(!theme.isV3 && theme.fonts.regular),\n          lineHeight: size / fontScale,\n          height: size,\n          minWidth: size,\n          borderRadius,\n          paddingHorizontal,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withInternalTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}