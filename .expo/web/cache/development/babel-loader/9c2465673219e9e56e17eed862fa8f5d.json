{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"color\", \"size\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar MaterialCommunityIcons;\ntry {\n  MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\").default;\n} catch (e) {\n  var isErrorLogged = false;\n  MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n    var name = _ref.name,\n      color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n      console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n      isErrorLogged = true;\n    }\n    return React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color: color,\n        fontSize: size\n      }],\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\nexport var accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\nvar defaultIcon = function defaultIcon(_ref2) {\n  var name = _ref2.name,\n    color = _ref2.color,\n    size = _ref2.size,\n    direction = _ref2.direction,\n    allowFontScaling = _ref2.allowFontScaling;\n  return React.createElement(MaterialCommunityIcons, _extends({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }],\n      lineHeight: size\n    }, styles.icon],\n    pointerEvents: \"none\",\n    selectable: false\n  }, accessibilityProps));\n};\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAWA,IAAIC,sBAAJ;AASA,IAAI;EAEFA,sBAAsB,GAAGC,OAAO,6CAAP,CACtBC,OADH;AAED,CAJD,CAIE,OAAOC,CAAP,EAAU;EACV,IAAIC,aAAa,GAAG,KAApB;EAGAJ,sBAAsB,GAAG,sCAAoC;IAAA,IAAjCK,IAAF,QAAEA,IAAF;MAAQC,KAAR,QAAQA,KAAR;MAAeC,IAAf,QAAeA,IAAf;MAAwBC;IAEhD,IAAI,CAACJ,aAAL,EAAoB;MAClB,IACE,CAAC,8DAA8DK,IAA9D,CACCN,CAAC,CAACO,OADH,CADH,EAIE;QACAC,OAAO,CAACC,KAAR,CAAcT,CAAd;MACD;MAEDQ,OAAO,CAACE,IAAR,6BAC4BR,IAAK,qSADjC;MAKAD,aAAa,GAAG,IAAhB;IACD;IAED,OACEL,oBAACe,IAAD,eACMN,IADN;MAEEO,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;QAAEX,KAAF,EAAEA,KAAF;QAASY,QAAQ,EAAEX;MAAnB,CAAd,CAFT;MAIEY,aAAa,EAAC,MAJhB;MAKEC,UAAU,EAAE;IALd,aADF;EAWD,CA9BD;AA+BD;AAED,OAAO,IAAMC,kBAAkB,GAC7BC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACI;EACEC,IAAI,EAAE,KADR;EAEEC,SAAS,EAAE;AAFb,CADJ,GAKI;EACEC,2BAA2B,EAAE,IAD/B;EAEEC,yBAAyB,EAAE;AAF7B,CANC;AAWP,IAAMC,WAAW,GAAG,SAAdA,WAAW;EAAA,IACfvB,IADmB,SACnBA,IADmB;IAEnBC,KAFmB,SAEnBA,KAFmB;IAGnBC,IAHmB,SAGnBA,IAHmB;IAInBsB,SAJmB,SAInBA,SAJmB;IAKnBC;EAAAA,OAEA/B,oBAACC,sBAAD;IACE8B,gBAAgB,EAAEA,gBADpB;IAEEzB,IAAI,EAAEA,IAFR;IAGEC,KAAK,EAAEA,KAHT;IAIEC,IAAI,EAAEA,IAJR;IAKEQ,KAAK,EAAE,CACL;MACEgB,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEH,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B;MAArC,CAAD,CADb;MAEEI,UAAU,EAAE1B;IAFd,CADK,EAKLS,MAAM,CAACC,IALF,CALT;IAYEE,aAAa,EAAC,MAZhB;IAaEC,UAAU,EAAE;EAbd,GAcMC,kBAdN,EAPF;AAAA;AAyBA,IAAML,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;EAC/BlB,IAAI,EAAE;IACJmB,eAAe,EAAE;EADb;AADyB,CAAlB,CAAf;AAMA,eAAeR,WAAf","names":["React","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","rest","test","message","console","error","warn","Text","style","styles","icon","fontSize","pointerEvents","selectable","accessibilityProps","Platform","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","lineHeight","StyleSheet","create","backgroundColor"],"sources":["MaterialCommunityIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, TextProps, ViewProps } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: React.ComponentType<\n  TextProps & {\n    name: string;\n    color: string;\n    size: number;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons')\n    .default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"module"}