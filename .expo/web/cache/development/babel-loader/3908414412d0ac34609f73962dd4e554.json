{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"elevation\", \"style\", \"theme\", \"onShowAnimationFinished\", \"onHideAnimationFinished\"],\n  _excluded2 = [\"label\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nimport Button from \"./Button/Button\";\nimport Icon from \"./Icon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nvar DEFAULT_MAX_WIDTH = 960;\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n    icon = _ref.icon,\n    children = _ref.children,\n    _ref$actions = _ref.actions,\n    actions = _ref$actions === void 0 ? [] : _ref$actions,\n    contentStyle = _ref.contentStyle,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$onShowAnimationF = _ref.onShowAnimationFinished,\n    onShowAnimationFinished = _ref$onShowAnimationF === void 0 ? function () {} : _ref$onShowAnimationF,\n    _ref$onHideAnimationF = _ref.onHideAnimationFinished,\n    onHideAnimationFinished = _ref$onHideAnimationF === void 0 ? function () {} : _ref$onHideAnimationF,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    position = _React$useRef.current;\n  var _React$useState = React.useState({\n      height: 0,\n      measured: false\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start(onShowAnimationFinished);\n    } else {\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n  var handleLayout = function handleLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n  var height = Animated.multiply(position, layout.height);\n  var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [!theme.isV3 && styles.elevation, style],\n    theme: theme\n  }, theme.isV3 && {\n    elevation: elevation\n  }), React.createElement(View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ? [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] : null, !layout.measured && !visible ? {\n      opacity: 0\n    } : null]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(View, {\n    style: styles.icon\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(Text, {\n    style: [styles.message, {\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    }],\n    accessibilityLiveRegion: visible ? 'polite' : 'none',\n    accessibilityRole: \"alert\"\n  }, children)), React.createElement(View, {\n    style: styles.actions\n  }, actions.map(function (_ref3, i) {\n    var _theme$colors;\n    var label = _ref3.label,\n      others = _objectWithoutProperties(_ref3, _excluded2);\n    return React.createElement(Button, _extends({\n      key: i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button,\n      textColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary\n    }, others), label);\n  })))));\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  },\n  elevation: {\n    elevation: 1\n  }\n});\nexport default withInternalTheme(Banner);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","Button","Icon","Surface","Text","DEFAULT_MAX_WIDTH","Banner","_ref","visible","icon","children","actions","contentStyle","elevation","style","theme","onShowAnimationFinished","onHideAnimationFinished","rest","useRef","Animated","Value","position","current","useState","height","measured","layout","setLayout","scale","animation","useEffect","timing","duration","toValue","useNativeDriver","start","handleLayout","_ref2","nativeEvent","multiply","translateY","add","isV3","styles","View","wrapper","onLayout","absolute","transform","opacity","content","source","size","message","color","colors","onSurface","text","accessibilityLiveRegion","accessibilityRole","map","i","label","_ref3","others","key","compact","mode","button","textColor","_theme$colors","primary","StyleSheet","create","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"sources":["Banner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../types';\nimport Button from './Button/Button';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\n\nconst DEFAULT_MAX_WIDTH = 960;\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: React.ReactNode;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions?: Array<\n    {\n      label: string;\n    } & Omit<React.ComponentProps<typeof Button>, 'children'>\n  >;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Banner shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * @optional\n   * Optional callback that will be called after the opening animation finished running normally\n   */\n  onShowAnimationFinished?: Animated.EndCallback;\n  /**\n   * @optional\n   * Optional callback that will be called after the closing animation finished running normally\n   */\n  onHideAnimationFinished?: Animated.EndCallback;\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(true);\n *\n *   return (\n *     <Banner\n *       visible={visible}\n *       actions={[\n *         {\n *           label: 'Fix it',\n *           onPress: () => setVisible(false),\n *         },\n *         {\n *           label: 'Learn more',\n *           onPress: () => setVisible(false),\n *         },\n *       ]}\n *       icon={({size}) => (\n *         <Image\n *           source={{\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n *           }}\n *           style={{\n *             width: size,\n *             height: size,\n *           }}\n *         />\n *       )}>\n *       There was a problem processing a transaction on your credit card.\n *     </Banner>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Banner = ({\n  visible,\n  icon,\n  children,\n  actions = [],\n  contentStyle,\n  elevation = 1,\n  style,\n  theme,\n  onShowAnimationFinished = () => {},\n  onHideAnimationFinished = () => {},\n  ...rest\n}: Props) => {\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start(onShowAnimationFinished);\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n  return (\n    <Surface\n      {...rest}\n      style={[!theme.isV3 && styles.elevation, style]}\n      theme={theme}\n      {...(theme.isV3 && { elevation })}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View style={styles.content}>\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon source={icon} size={40} />\n              </View>\n            ) : null}\n            <Text\n              style={[\n                styles.message,\n                {\n                  color: theme.isV3\n                    ? theme.colors.onSurface\n                    : theme.colors.text,\n                },\n              ]}\n              accessibilityLiveRegion={visible ? 'polite' : 'none'}\n              accessibilityRole=\"alert\"\n            >\n              {children}\n            </Text>\n          </View>\n          <View style={styles.actions}>\n            {actions.map(({ label, ...others }, i) => (\n              <Button\n                key={/* eslint-disable-line react/no-array-index-key */ i}\n                compact\n                mode=\"text\"\n                style={styles.button}\n                textColor={theme.colors?.primary}\n                {...others}\n              >\n                {label}\n              </Button>\n            ))}\n          </View>\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n  elevation: {\n    elevation: 1,\n  },\n});\n\nexport default withInternalTheme(Banner);\n"]},"metadata":{},"sourceType":"module"}