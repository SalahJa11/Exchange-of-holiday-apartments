{"ast":null,"code":"export function idValidator(id) {\n  if (!id) return \"Id can't be empty.\";\n  var id = String(id).trim();\n  if (id.length > 9 || id.length < 5 || isNaN(id)) return \"Not a valid Id number\";\n  id = id.length < 9 ? (\"00000000\" + id).slice(-9) : id;\n  if (Array.from(id, Number).reduce(function (counter, digit, i) {\n    var step = digit * (i % 2 + 1);\n    return counter + (step > 9 ? step - 9 : step);\n  }) % 10 === 0) return \"\";else return \"Not a valid Id number\";\n}","map":{"version":3,"names":["idValidator","id","String","trim","length","isNaN","slice","Array","from","Number","reduce","counter","digit","i","step"],"sources":["C:/Users/salah/Documents/Exchange of holiday apartments/Coding/Final_Project/src/helpers/idValidator.js"],"sourcesContent":["export function idValidator(id) {\r\n  if (!id) return \"Id can't be empty.\";\r\n  var id = String(id).trim();\r\n  if (id.length > 9 || id.length < 5 || isNaN(id))\r\n    return \"Not a valid Id number\";\r\n\r\n  // Pad string with zeros up to 9 digits\r\n  id = id.length < 9 ? (\"00000000\" + id).slice(-9) : id;\r\n  //   console.log(\"id\", id);\r\n  if (\r\n    Array.from(id, Number).reduce((counter, digit, i) => {\r\n      const step = digit * ((i % 2) + 1);\r\n      return counter + (step > 9 ? step - 9 : step);\r\n    }) %\r\n      10 ===\r\n    0\r\n  )\r\n    return \"\";\r\n  else return \"Not a valid Id number\";\r\n  //   return (\r\n  //     Array.from(id, Number).reduce((counter, digit, i) => {\r\n  //       const step = digit * ((i % 2) + 1);\r\n  //       return counter + (step > 9 ? step - 9 : step);\r\n  //     }) %\r\n  //       10 ===\r\n  //     0\r\n  //   );\r\n}\r\n\r\n// Usage\r\n// [\"1234567890\", \"001200343\", \"231740705\", \"339677395\"].map(function (e) {\r\n//   console.log(\r\n//     e +\r\n//       \" is \" +\r\n//       (isValidIsraeliID(e) ? \"a valid\" : \"an invalid\") +\r\n//       \" Israeli ID\"\r\n//   );\r\n// });\r\n"],"mappings":"AAAA,OAAO,SAASA,WAAW,CAACC,EAAE,EAAE;EAC9B,IAAI,CAACA,EAAE,EAAE,OAAO,oBAAoB;EACpC,IAAIA,EAAE,GAAGC,MAAM,CAACD,EAAE,CAAC,CAACE,IAAI,EAAE;EAC1B,IAAIF,EAAE,CAACG,MAAM,GAAG,CAAC,IAAIH,EAAE,CAACG,MAAM,GAAG,CAAC,IAAIC,KAAK,CAACJ,EAAE,CAAC,EAC7C,OAAO,uBAAuB;EAGhCA,EAAE,GAAGA,EAAE,CAACG,MAAM,GAAG,CAAC,GAAG,CAAC,UAAU,GAAGH,EAAE,EAAEK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGL,EAAE;EAErD,IACEM,KAAK,CAACC,IAAI,CAACP,EAAE,EAAEQ,MAAM,CAAC,CAACC,MAAM,CAAC,UAACC,OAAO,EAAEC,KAAK,EAAEC,CAAC,EAAK;IACnD,IAAMC,IAAI,GAAGF,KAAK,IAAKC,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC;IAClC,OAAOF,OAAO,IAAIG,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAGA,IAAI,CAAC;EAC/C,CAAC,CAAC,GACA,EAAE,KACJ,CAAC,EAED,OAAO,EAAE,CAAC,KACP,OAAO,uBAAuB;AASrC"},"metadata":{},"sourceType":"module"}