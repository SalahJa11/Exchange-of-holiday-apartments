{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"source\", \"style\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nvar defaultSize = 64;\nvar AvatarImage = function AvatarImage(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    source = _ref.source,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var colors = theme.colors;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? colors.primary : _ref2$backgroundColor;\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size: size\n  }), typeof source !== 'function' && React.createElement(Image, {\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }));\n};\nAvatarImage.displayName = 'Avatar.Image';\nexport default withTheme(AvatarImage);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AASA,SAASC,SAAT;AAEA,IAAMC,WAAW,GAAG,EAApB;AA4CA,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAMJ;EAAA,qBALXC,IAAI;IAAJA,IAAI,0BAAGF,WADY;IAEnBG,MAFmB,QAEnBA,MAFmB;IAGnBC,KAHmB,QAGnBA,KAHmB;IAInBC,KAJmB,QAInBA,KAJmB;IAKhBC;EAEH,IAAQC,SAAWF,KAAnB,CAAQE;EAER,YAA6CC,UAAU,CAACC,OAAX,CAAmBL,KAAnB,KAA6B,EAA1E;IAAA,8BAAQM,eAAe;IAAfA,eAAe,sCAAGH,MAAM,CAACI;EAEjC,OACEb,oBAACc,IAAD;IACER,KAAK,EAAE,CACL;MACES,KAAK,EAAEX,IADT;MAEEY,MAAM,EAAEZ,IAFV;MAGEa,YAAY,EAAEb,IAAI,GAAG,CAHvB;MAIEQ;IAJF,CADK,EAOLN,KAPK;EADT,GAUME,IAVN,GAYG,OAAOH,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAAC;IAAED;EAAF,CAAD,CAZzC,EAaG,OAAOC,MAAP,KAAkB,UAAlB,IACCL,oBAACkB,KAAD;IACEb,MAAM,EAAEA,MADV;IAEEC,KAAK,EAAE;MAAES,KAAK,EAAEX,IAAT;MAAeY,MAAM,EAAEZ,IAAvB;MAA6Ba,YAAY,EAAEb,IAAI,GAAG;IAAlD;EAFT,EAdJ,CADF;AAsBD,CAjCD;AAmCAD,WAAW,CAACgB,WAAZ,GAA0B,cAA1B;AAEA,eAAelB,SAAS,CAACE,WAAD,CAAxB","names":["React","withTheme","defaultSize","AvatarImage","size","source","style","theme","rest","colors","StyleSheet","flatten","backgroundColor","primary","View","width","height","borderRadius","Image","displayName"],"sources":["AvatarImage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nconst defaultSize = 64;\n\nexport type AvatarImageSource =\n  | ImageSourcePropType\n  | ((props: { size: number }) => React.ReactNode);\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   * It accepts a standard React Native Image `source` prop\n   * Or a function that returns an `Image`.\n   */\n  source: AvatarImageSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nconst AvatarImage = ({\n  size = defaultSize,\n  source,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { colors } = theme;\n\n  const { backgroundColor = colors.primary } = StyleSheet.flatten(style) || {};\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        style,\n      ]}\n      {...rest}\n    >\n      {typeof source === 'function' && source({ size })}\n      {typeof source !== 'function' && (\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      )}\n    </View>\n  );\n};\n\nAvatarImage.displayName = 'Avatar.Image';\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"module"}