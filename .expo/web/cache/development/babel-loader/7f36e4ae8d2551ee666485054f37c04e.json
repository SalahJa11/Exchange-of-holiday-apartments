{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"accessibilityLabel\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\", \"showFastPaginationControls\", \"numberOfItemsPerPageList\", \"numberOfItemsPerPage\", \"onItemsPerPageChange\", \"selectPageDropdownLabel\", \"selectPageDropdownAccessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme, withInternalTheme } from \"../../core/theming\";\nimport Button from \"../Button/Button\";\nimport IconButton from \"../IconButton/IconButton\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Menu from \"../Menu/Menu\";\nimport Text from \"../Typography/Text\";\nvar PaginationControls = function PaginationControls(_ref) {\n  var page = _ref.page,\n    numberOfPages = _ref.numberOfPages,\n    onPageChange = _ref.onPageChange,\n    showFastPaginationControls = _ref.showFastPaginationControls;\n  var theme = useInternalTheme();\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  return React.createElement(React.Fragment, null, showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n        color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(0);\n    },\n    accessibilityLabel: \"page-first\"\n  }) : null, React.createElement(IconButton, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n        color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    },\n    accessibilityLabel: \"chevron-left\"\n  }), React.createElement(IconButton, {\n    icon: function icon(_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    },\n    accessibilityLabel: \"chevron-right\"\n  }), showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref5) {\n      var size = _ref5.size,\n        color = _ref5.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(numberOfPages - 1);\n    },\n    accessibilityLabel: \"page-last\"\n  }) : null);\n};\nvar PaginationDropdown = function PaginationDropdown(_ref6) {\n  var numberOfItemsPerPageList = _ref6.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref6.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref6.onItemsPerPageChange;\n  var _useInternalTheme = useInternalTheme(),\n    colors = _useInternalTheme.colors;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    showSelect = _React$useState2[0],\n    toggleSelect = _React$useState2[1];\n  return React.createElement(Menu, {\n    visible: showSelect,\n    onDismiss: function onDismiss() {\n      return toggleSelect(!showSelect);\n    },\n    anchor: React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return toggleSelect(true);\n      },\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle\n    }, \"\" + numberOfItemsPerPage)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(function (option) {\n    return React.createElement(Menu.Item, {\n      key: option,\n      titleStyle: option === numberOfItemsPerPage && {\n        color: colors === null || colors === void 0 ? void 0 : colors.primary\n      },\n      onPress: function onPress() {\n        onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n        toggleSelect(false);\n      },\n      title: option\n    });\n  }));\n};\nvar DataTablePagination = function DataTablePagination(_ref7) {\n  var label = _ref7.label,\n    accessibilityLabel = _ref7.accessibilityLabel,\n    page = _ref7.page,\n    numberOfPages = _ref7.numberOfPages,\n    onPageChange = _ref7.onPageChange,\n    style = _ref7.style,\n    theme = _ref7.theme,\n    _ref7$showFastPaginat = _ref7.showFastPaginationControls,\n    showFastPaginationControls = _ref7$showFastPaginat === void 0 ? false : _ref7$showFastPaginat,\n    numberOfItemsPerPageList = _ref7.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref7.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref7.onItemsPerPageChange,\n    selectPageDropdownLabel = _ref7.selectPageDropdownLabel,\n    selectPageDropdownAccessibilityLabel = _ref7.selectPageDropdownAccessibilityLabel,\n    rest = _objectWithoutProperties(_ref7, _excluded);\n  var labelColor = color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && React.createElement(View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange\n  })), React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), React.createElement(View, {\n    style: styles.iconsContainer\n  }, React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages\n  })));\n};\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nexport default withInternalTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","withInternalTheme","Button","IconButton","MaterialCommunityIcon","Menu","Text","PaginationControls","_ref","page","numberOfPages","onPageChange","showFastPaginationControls","theme","textColor","isV3","colors","onSurface","text","icon","size","_ref2","name","direction","I18nManager","getConstants","isRTL","iconColor","disabled","onPress","accessibilityLabel","_ref3","_ref4","_ref5","PaginationDropdown","_ref6","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","useState","showSelect","toggleSelect","visible","onDismiss","anchor","mode","style","styles","button","contentStyle","map","option","Item","key","titleStyle","primary","title","DataTablePagination","_ref7","label","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","labelColor","alpha","rgb","string","View","container","optionsContainer","numberOfLines","iconsContainer","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign"],"sources":["DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport { useInternalTheme, withInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: InternalTheme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme();\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useInternalTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withInternalTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}