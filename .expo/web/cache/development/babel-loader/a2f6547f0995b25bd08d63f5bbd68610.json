{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { withInternalTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/themes/v2/colors\";\nvar DataTableHeader = function DataTableHeader(_ref) {\n  var children = _ref.children,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var borderBottomColor = theme.isV3 ? theme.colors.surfaceVariant : color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.header, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), children);\n};\nDataTableHeader.displayName = 'DataTable.Header';\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2\n  }\n});\nexport default withInternalTheme(DataTableHeader);\nexport { DataTableHeader };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAG9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiB;AAC1B,SAASC,KAAK,EAAEC,KAAK;AAgDrB,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAGC,MAAgD;EAAA,IAA7CC,QAAQ,GAAgCD,KAAxCC,QAAQ;IAAEC,KAAK,GAAyBF,KAA9BE,KAAK;IAAEC,KAAK,GAAkBH,KAAvBG,KAAK;IAAKC,gCAAaJ;EACjE,IAAMK,iBAAiB,GAAGF,KAAK,CAACG,IAAI,GAChCH,KAAK,CAACI,MAAM,CAACC,cAAc,GAC3Bb,KAAK,CAACQ,KAAK,CAACM,IAAI,GAAGX,KAAK,GAAGD,KAAK,CAAC,CAC9Ba,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE;EAEf,OACElB,oBAACmB,IAAI,eAAKT,IAAI;IAAEF,KAAK,EAAE,CAACY,MAAM,CAACC,MAAM,EAAE;MAAEV;IAAkB,CAAC,EAAEH,KAAK;EAAE,IAClED,QAAQ,CACJ;AAEX,CAAC;AAEDF,eAAe,CAACiB,WAAW,GAAG,kBAAkB;AAEhD,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,MAAM,EAAE;IACNI,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,EAAE;IACVC,iBAAiB,EAAE,EAAE;IACrBC,iBAAiB,EAAEL,UAAU,CAACM,aAAa,GAAG;EAChD;AACF,CAAC,CAAC;AAEF,eAAe3B,iBAAiB,CAACG,eAAe,CAAC;AAGjD,SAASA,eAAe","names":["React","color","withInternalTheme","black","white","DataTableHeader","_ref","children","style","theme","rest","borderBottomColor","isV3","colors","surfaceVariant","dark","alpha","rgb","string","View","styles","header","displayName","StyleSheet","create","flexDirection","height","paddingHorizontal","borderBottomWidth","hairlineWidth"],"sources":["DataTableHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = theme.isV3\n    ? theme.colors.surfaceVariant\n    : color(theme.dark ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withInternalTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n"]},"metadata":{},"sourceType":"module"}