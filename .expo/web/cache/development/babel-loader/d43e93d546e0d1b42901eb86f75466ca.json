{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Items(_ref) {\n  var Name = _ref.Name,\n    image = _ref.image;\n  return _jsxs(View, {\n    style: styles.ItemsContainer,\n    children: [image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: styles.Image\n    }), _jsx(Text, {\n      children: Name\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  ItemsContainer: {\n    width: 150,\n    height: 150,\n    alignItems: 'center'\n  },\n  Image: {\n    width: 150,\n    height: 150,\n    borderWidth: 5,\n    borderRadius: 10,\n    borderColor: \"#1c6669\"\n  },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    width: 100\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","ImagePicker","Items","Name","image","styles","ItemsContainer","uri","Image","StyleSheet","create","width","height","alignItems","borderWidth","borderRadius","borderColor","appButtonContainer","elevation","backgroundColor","paddingVertical","paddingHorizontal","appButtonText","fontSize","color","fontWeight","alignSelf","textTransform"],"sources":["C:/Users/salah/Documents/Exchange of holiday apartments/Coding/ver3/src/components/Items.js"],"sourcesContent":["import React , { useState, useEffect }from 'react';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { StyleSheet, Text,ImageBackground,Image , View,SafeAreaView,TouchableOpacity, KeyboardAvoidingView,Platform,StatusBar, Button } from 'react-native';\nexport default function Items({Name , image } ) {\n//     const [image, setImage] = useState(null);\n\n//   const pickImage = async () => {\n//     // No permissions request is necessary for launching the image library\n//     let result = await ImagePicker.launchImageLibraryAsync({\n//       mediaTypes: ImagePicker.MediaTypeOptions.All,\n//       allowsEditing: true,\n//       aspect: [4, 3],\n//       quality: 1,\n//     });\n\n   \n\n//     if (!result.cancelled) {\n//       setImage(result.uri);\n//     }\n//   };\n\n    return (\n        \n       \n        <View style = {styles.ItemsContainer}  >\n           \n            {/* <Button title=\"Pick an image from camera roll\" onPress={pickImage} /> */}\n            \n      {image && <Image source={{ uri: image }} style={styles.Image} />}\n      <Text>{Name}</Text>\n     \n   \n        </View>\n        \n    );\n}\nconst styles = StyleSheet.create({\n    ItemsContainer : {\n      \n     width: 150, \n     height: 150 ,\n    \n     alignItems : 'center' , \n  \n  \n    \n    },\n    Image : {\n      width: 150, \n      height: 150,\n      borderWidth : 5,\n      borderRadius : 10,\n      borderColor :\"#1c6669\" ,\n    },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    width: 100,\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n    \n});"],"mappings":"AAAA,OAAOA,KAAK,IAAKC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAClD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjD,eAAe,SAASC,KAAK,OAAmB;EAAA,IAAjBC,IAAI,QAAJA,IAAI;IAAGC,KAAK,QAALA,KAAK;EAmBvC,OAGI,MAAC,IAAI;IAAC,KAAK,EAAIC,MAAM,CAACC,cAAe;IAAA,WAItCF,KAAK,IAAI,KAAC,KAAK;MAAC,MAAM,EAAE;QAAEG,GAAG,EAAEH;MAAM,CAAE;MAAC,KAAK,EAAEC,MAAM,CAACG;IAAM,EAAG,EAChE,KAAC,IAAI;MAAA,UAAEL;IAAI,EAAQ;EAAA,EAGV;AAGf;AACA,IAAME,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC7BJ,cAAc,EAAG;IAEhBK,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IAEXC,UAAU,EAAG;EAId,CAAC;EACDL,KAAK,EAAG;IACNG,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXE,WAAW,EAAG,CAAC;IACfC,YAAY,EAAG,EAAE;IACjBC,WAAW,EAAE;EACf,CAAC;EACHC,kBAAkB,EAAE;IAClBC,SAAS,EAAE,CAAC;IACZC,eAAe,EAAE,KAAK;IACtBJ,YAAY,EAAE,EAAE;IAChBK,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBV,KAAK,EAAE;EACT,CAAC;EACDW,aAAa,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,aAAa,EAAE;EACjB;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}