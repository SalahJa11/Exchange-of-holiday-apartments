{"ast":null,"code":"export function addEventListener(Module) {\n  var _Module$addEventListe;\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n  var eventName = rest[0],\n    handler = rest[1];\n  var removed = false;\n  var subscription = (_Module$addEventListe = Module.addEventListener(eventName, handler)) !== null && _Module$addEventListe !== void 0 ? _Module$addEventListe : {\n    remove: function remove() {\n      var _Module$removeEventLi, _Module$remove;\n      if (removed) {\n        return;\n      }\n      (_Module$removeEventLi = Module.removeEventListener) === null || _Module$removeEventLi === void 0 ? void 0 : _Module$removeEventLi.call(Module, eventName, handler);\n      (_Module$remove = Module.remove) === null || _Module$remove === void 0 ? void 0 : _Module$remove.call(Module, eventName, handler);\n      removed = true;\n    }\n  };\n  return subscription;\n}\nexport function addListener(Module) {\n  var _Module$addListener;\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    rest[_key2 - 1] = arguments[_key2];\n  }\n  var eventName = rest[0],\n    handler = rest[1];\n  var removed = false;\n  var subscription = (_Module$addListener = Module.addListener(eventName, handler)) !== null && _Module$addListener !== void 0 ? _Module$addListener : {\n    remove: function remove() {\n      if (removed) {\n        return;\n      }\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    }\n  };\n  return subscription;\n}","map":{"version":3,"mappings":"AAKA,OAAO,SAASA,gBAAgB,CAQ9BC,MAAS,EAAuD;EAAA;EAAA,kCAAlDC,IAAI;IAAJA,IAAI;EAAA;EAClB,IAAOC,SAAS,GAAaD,IAAI;IAAfE,OAAO,GAAIF,IAAI;EAEjC,IAAIG,OAAO,GAAG,KAAK;EAEnB,IAAMC,YAAY,4BAAGL,MAAM,CAACD,gBAAgB,CAACG,SAAS,EAAEC,OAAO,CAAC,yEAAI;IAClEG,MAAM,EAAE,kBAAM;MAAA;MACZ,IAAIF,OAAO,EAAE;QACX;MACF;MAEA,+BAAM,CAACG,mBAAmB,0DAA1BC,iCAAM,EAAuBN,SAAS,EAAEC,OAAO,CAAC;MAChD,wBAAM,CAACG,MAAM,mDAAbG,0BAAM,EAAUP,SAAS,EAAEC,OAAO,CAAC;MACnCC,OAAO,GAAG,IAAI;IAChB;EACF,CAAC;EAED,OAAOC,YAAY;AACrB;AAEA,OAAO,SAASK,WAAW,CAKzBV,MAAS,EAAkD;EAAA;EAAA,mCAA7CC,IAAI;IAAJA,IAAI;EAAA;EAClB,IAAOC,SAAS,GAAaD,IAAI;IAAfE,OAAO,GAAIF,IAAI;EAEjC,IAAIG,OAAO,GAAG,KAAK;EAEnB,IAAMC,YAAY,0BAAGL,MAAM,CAACU,WAAW,CAACR,SAAS,EAAEC,OAAO,CAAC,qEAAI;IAC7DG,MAAM,EAAE,kBAAM;MACZ,IAAIF,OAAO,EAAE;QACX;MACF;MAEAJ,MAAM,CAACO,mBAAmB,CAACL,SAAS,EAAEC,OAAO,CAAC;MAC9CC,OAAO,GAAG,IAAI;IAChB;EACF,CAAC;EAED,OAAOC,YAAY;AACrB","names":["addEventListener","Module","rest","eventName","handler","removed","subscription","remove","removeEventListener","_Module$removeEventLi","_Module$remove","addListener"],"sources":["addEventListener.tsx"],"sourcesContent":["import type {\n  NativeEventSubscription,\n  EmitterSubscription,\n} from 'react-native';\n\nexport function addEventListener<\n  T extends {\n    addEventListener: (\n      ...args: any\n    ) => NativeEventSubscription | EmitterSubscription;\n  } & { removeEventListener?: (...args: any) => void } & {\n    remove?: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addEventListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addEventListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener?.(eventName, handler);\n      Module.remove?.(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n\nexport function addListener<\n  T extends {\n    addListener: (...args: any) => EmitterSubscription;\n    removeEventListener: (...args: any) => void;\n  }\n>(Module: T, ...rest: Parameters<typeof Module.addListener>) {\n  const [eventName, handler] = rest;\n\n  let removed = false;\n\n  const subscription = Module.addListener(eventName, handler) ?? {\n    remove: () => {\n      if (removed) {\n        return;\n      }\n\n      Module.removeEventListener(eventName, handler);\n      removed = true;\n    },\n  };\n\n  return subscription;\n}\n"]},"metadata":{},"sourceType":"module"}