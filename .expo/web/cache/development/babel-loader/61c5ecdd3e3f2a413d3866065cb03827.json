{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getContentMaxWidth, getMenuItemColor, MAX_WIDTH, MIN_WIDTH } from \"./utils\";\nvar MenuItem = function MenuItem(_ref) {\n  var leadingIcon = _ref.leadingIcon,\n    trailingIcon = _ref.trailingIcon,\n    dense = _ref.dense,\n    title = _ref.title,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    contentStyle = _ref.contentStyle,\n    testID = _ref.testID,\n    titleStyle = _ref.titleStyle,\n    accessibilityLabel = _ref.accessibilityLabel,\n    theme = _ref.theme;\n  var _getMenuItemColor = getMenuItemColor({\n      theme: theme,\n      disabled: disabled\n    }),\n    titleColor = _getMenuItemColor.titleColor,\n    iconColor = _getMenuItemColor.iconColor,\n    underlayColor = _getMenuItemColor.underlayColor;\n  var isV3 = theme.isV3;\n  var containerPadding = isV3 ? 12 : 8;\n  var iconWidth = isV3 ? 24 : 40;\n  var minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n  var maxWidth = getContentMaxWidth({\n    isV3: isV3,\n    iconWidth: iconWidth,\n    leadingIcon: leadingIcon,\n    trailingIcon: trailingIcon\n  });\n  var titleTextStyle = _objectSpread({\n    color: titleColor\n  }, isV3 ? theme.fonts.bodyLarge : {});\n  return React.createElement(TouchableRipple, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    underlayColor: underlayColor\n  }, React.createElement(View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle]\n  }, title)), isV3 && trailingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\nMenuItem.displayName = 'Menu.Item';\nvar styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nexport default withInternalTheme(MenuItem);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","Icon","TouchableRipple","Text","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","MenuItem","_ref","leadingIcon","trailingIcon","dense","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","titleColor","iconColor","underlayColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","color","fonts","bodyLarge","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","accessibilityState","View","row","item","width","pointerEvents","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","variant","selectable","numberOfLines","displayName","StyleSheet","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"sources":["MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  testID,\n  titleStyle,\n  accessibilityLabel,\n  theme,\n}: Props) => {\n  const { titleColor, iconColor, underlayColor } = getMenuItemColor({\n    theme,\n    disabled,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={{ disabled }}\n      underlayColor={underlayColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default withInternalTheme(MenuItem);\n"]},"metadata":{},"sourceType":"module"}