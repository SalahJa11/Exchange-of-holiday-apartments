{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackIcon from \"./AppbarBackIcon\";\nvar AppbarBackAction = React.forwardRef(function (_ref, ref) {\n  var _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Back' : _ref$accessibilityLab,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(AppbarAction, _extends({\n    accessibilityLabel: accessibilityLabel\n  }, rest, {\n    icon: AppbarBackIcon,\n    isLeading: true,\n    ref: ref\n  }));\n});\nAppbarBackAction.displayName = 'Appbar.BackAction';\nexport default AppbarBackAction;\nexport { AppbarBackAction };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAS9B,OAAOC,YAAY;AACnB,OAAOC,cAAc;AAoDrB,IAAMC,gBAAgB,GAAGH,KAAK,CAACI,UAAU,CACvC,gBAAkDC,GAAG;EAAA,4BAALC,KAA7CC,kBAAkB;IAAlBA,kBAAkB,sCAAG,MAAM;IAAKC,gCAAaF;EAAA,OAC9CN,oBAACC,YAAY;IACXM,kBAAkB,EAAEA;EAAmB,GACnCC,IAAI;IACRC,IAAI,EAAEP,cAAe;IACrBQ,SAAS;IACTL,GAAG,EAAEA;EAAI,GACT;AAAA,CACH,CACF;AAEDF,gBAAgB,CAACQ,WAAW,GAAG,mBAAmB;AAElD,eAAeR,gBAAgB;AAG/B,SAASA,gBAAgB","names":["React","AppbarAction","AppbarBackIcon","AppbarBackAction","forwardRef","ref","_ref","accessibilityLabel","rest","icon","isLeading","displayName"],"sources":["AppbarBackAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  GestureResponderEvent,\n  StyleProp,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport type { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackIcon from './AppbarBackIcon';\n\nexport type Props = $Omit<\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\n  'icon'\n> & {\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n};\n\n/**\n * A component used to display a back button in the appbar.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-backaction-android.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarBackAction = React.forwardRef<View, Props>(\n  ({ accessibilityLabel = 'Back', ...rest }: Props, ref) => (\n    <AppbarAction\n      accessibilityLabel={accessibilityLabel}\n      {...rest}\n      icon={AppbarBackIcon}\n      isLeading\n      ref={ref}\n    />\n  )\n);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\n\nexport default AppbarBackAction;\n\n// @component-docs ignore-next-line\nexport { AppbarBackAction };\n"]},"metadata":{},"sourceType":"module"}