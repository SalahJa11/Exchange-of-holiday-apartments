{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"animated\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"loading\", \"testID\", \"size\", \"customSize\", \"mode\", \"variant\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../../core/theming\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport CrossFadeIcon from \"../CrossFadeIcon\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from \"./utils\";\nvar FAB = React.forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? true : _ref$animated,\n    customColor = _ref.color,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    theme = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    _ref$uppercase = _ref.uppercase,\n    uppercase = _ref$uppercase === void 0 ? !theme.isV3 : _ref$uppercase,\n    loading = _ref.loading,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'fab' : _ref$testID,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    customSize = _ref.customSize,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var isV3 = theme.isV3,\n    animation = theme.animation;\n  var scale = animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var IconComponent = animated ? CrossFadeIcon : Icon;\n  var fabStyle = getFabStyle({\n    customSize: customSize,\n    size: size,\n    theme: theme\n  });\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? fabStyle.borderRadius : _ref2$borderRadius,\n    customBackgroundColor = _ref2.backgroundColor;\n  var _getFABColors = getFABColors({\n      theme: theme,\n      variant: variant,\n      disabled: disabled,\n      customColor: customColor,\n      customBackgroundColor: customBackgroundColor\n    }),\n    backgroundColor = _getFABColors.backgroundColor,\n    foregroundColor = _getFABColors.foregroundColor,\n    rippleColor = _getFABColors.rippleColor;\n  var isLargeSize = size === 'large';\n  var isFlatMode = mode === 'flat';\n  var iconSize = isLargeSize ? 36 : 24;\n  var loadingIndicatorSize = isLargeSize ? 24 : 18;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var extendedStyle = getExtendedFabStyle({\n    customSize: customSize,\n    theme: theme\n  });\n  var textStyle = _objectSpread({\n    color: foregroundColor\n  }, font);\n  var md3Elevation = isFlatMode || disabled ? 0 : 3;\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n  return React.createElement(Surface, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor,\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }]\n    }, styles.container, !isV3 && styles.elevated, !isV3 && disabled && styles.disabled, style],\n    pointerEvents: visible ? 'auto' : 'none',\n    testID: testID + \"-container\"\n  }, isV3 && {\n    elevation: md3Elevation\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, label ? extendedStyle : fabStyle],\n    testID: testID + \"-content\",\n    pointerEvents: \"none\"\n  }, icon && loading !== true ? React.createElement(IconComponent, {\n    source: icon,\n    size: customSize ? customSize / 2 : iconSize,\n    color: foregroundColor\n  }) : null, loading ? React.createElement(ActivityIndicator, {\n    size: customSize ? customSize / 2 : loadingIndicatorSize,\n    color: foregroundColor\n  }) : null, label ? React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle]\n  }, label) : null)));\n});\nvar styles = StyleSheet.create({\n  elevated: {\n    elevation: 6\n  },\n  container: {\n    overflow: 'hidden'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default withInternalTheme(FAB);\nvar FABWithTheme = withInternalTheme(FAB);\nexport { FABWithTheme as FAB };","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","ActivityIndicator","CrossFadeIcon","Icon","Surface","TouchableRipple","Text","getExtendedFabStyle","getFABColors","getFabStyle","FAB","forwardRef","ref","icon","_ref","label","accessibilityLabel","accessibilityState","animated","customColor","color","disabled","onPress","onLongPress","delayLongPress","theme","style","visible","uppercase","isV3","loading","testID","size","customSize","mode","variant","rest","useRef","Animated","Value","visibility","current","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","fabStyle","StyleSheet","flatten","borderRadius","customBackgroundColor","backgroundColor","foregroundColor","rippleColor","isLargeSize","isFlatMode","iconSize","loadingIndicatorSize","font","fonts","labelLarge","medium","extendedStyle","textStyle","md3Elevation","newAccessibilityState","opacity","transform","styles","container","elevated","pointerEvents","elevation","borderless","accessibilityRole","View","content","source","selectable","uppercaseLabel","create","overflow","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","FABWithTheme"],"sources":["FAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from './utils';\n\ntype FABSize = 'small' | 'medium' | 'large';\n\ntype FABMode = 'flat' | 'elevated';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  @deprecated Deprecated in v.3x - use prop size=\"small\".\n   *\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Size of the `FAB`.\n   * - `small` - FAB with small height (40).\n   * - `medium` - FAB with default medium height (56).\n   * - `large` - FAB with large height (96).\n   */\n  size?: FABSize;\n  /**\n   * Custom size for the `FAB`. This prop takes precedence over size prop\n   */\n  customSize?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the `FAB`. You can change the mode to adjust the the shadow:\n   * - `flat` - button without a shadow.\n   * - `elevated` - button with a shadow.\n   */\n  mode?: FABMode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-1.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-2.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-3.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-4.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     icon=\"plus\"\n *     style={styles.fab}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = React.forwardRef<View, Props>(\n  (\n    {\n      icon,\n      label,\n      accessibilityLabel = label,\n      accessibilityState,\n      animated = true,\n      color: customColor,\n      disabled,\n      onPress,\n      onLongPress,\n      delayLongPress,\n      theme,\n      style,\n      visible = true,\n      uppercase = !theme.isV3,\n      loading,\n      testID = 'fab',\n      size = 'medium',\n      customSize,\n      mode = 'elevated',\n      variant = 'primary',\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const { current: visibility } = React.useRef<Animated.Value>(\n      new Animated.Value(visible ? 1 : 0)\n    );\n    const { isV3, animation } = theme;\n    const { scale } = animation;\n\n    React.useEffect(() => {\n      if (visible) {\n        Animated.timing(visibility, {\n          toValue: 1,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }).start();\n      } else {\n        Animated.timing(visibility, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [visible, scale, visibility]);\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const fabStyle = getFabStyle({ customSize, size, theme });\n\n    const {\n      borderRadius = fabStyle.borderRadius,\n      backgroundColor: customBackgroundColor,\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const { backgroundColor, foregroundColor, rippleColor } = getFABColors({\n      theme,\n      variant,\n      disabled,\n      customColor,\n      customBackgroundColor,\n    });\n\n    const isLargeSize = size === 'large';\n    const isFlatMode = mode === 'flat';\n    const iconSize = isLargeSize ? 36 : 24;\n    const loadingIndicatorSize = isLargeSize ? 24 : 18;\n    const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n    const extendedStyle = getExtendedFabStyle({ customSize, theme });\n    const textStyle = {\n      color: foregroundColor,\n      ...font,\n    };\n\n    const md3Elevation = isFlatMode || disabled ? 0 : 3;\n\n    const newAccessibilityState = { ...accessibilityState, disabled };\n\n    return (\n      <Surface\n        ref={ref}\n        {...rest}\n        style={\n          [\n            {\n              borderRadius,\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            !isV3 && styles.elevated,\n            !isV3 && disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        testID={`${testID}-container`}\n        {...(isV3 && { elevation: md3Elevation })}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={newAccessibilityState}\n          testID={testID}\n        >\n          <View\n            style={[styles.content, label ? extendedStyle : fabStyle]}\n            testID={`${testID}-content`}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <IconComponent\n                source={icon}\n                size={customSize ? customSize / 2 : iconSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator\n                size={customSize ? customSize / 2 : loadingIndicatorSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {label ? (\n              <Text\n                variant=\"labelLarge\"\n                selectable={false}\n                style={[\n                  styles.label,\n                  uppercase && styles.uppercaseLabel,\n                  textStyle,\n                ]}\n              >\n                {label}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  elevated: {\n    elevation: 6,\n  },\n  container: {\n    overflow: 'hidden',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withInternalTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withInternalTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]},"metadata":{},"sourceType":"module"}