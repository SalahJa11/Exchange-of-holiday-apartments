{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\", \"showDivider\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { withInternalTheme } from \"../../core/theming\";\nimport { MD3Colors } from \"../../styles/themes/v3/tokens\";\nimport Divider from \"../Divider\";\nimport Text from \"../Typography/Text\";\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n    title = _ref.title,\n    theme = _ref.theme,\n    style = _ref.style,\n    _ref$showDivider = _ref.showDivider,\n    showDivider = _ref$showDivider === void 0 ? true : _ref$showDivider,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var isV3 = theme.isV3;\n  var titleColor = isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  var titleMargin = isV3 ? 28 : 16;\n  var font = isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(View, {\n    style: [styles.titleContainer, isV3 && styles.v3TitleContainer]\n  }, title && React.createElement(Text, {\n    variant: \"titleSmall\",\n    numberOfLines: 1,\n    style: [_objectSpread({\n      color: titleColor,\n      marginLeft: titleMargin\n    }, font)]\n  }, title)), children, showDivider && React.createElement(Divider, _extends({}, isV3 && {\n    horizontalInset: true,\n    bold: true\n  }, {\n    style: [styles.divider, isV3 && styles.v3Divider]\n  })));\n};\nDrawerSection.displayName = 'Drawer.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  v3TitleContainer: {\n    height: 56\n  },\n  divider: {\n    marginTop: 4\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50\n  }\n});\nexport default withInternalTheme(DrawerSection);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAG9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiB;AAC1B,SAASC,SAAS;AAElB,OAAOC,OAAO;AACd,OAAOC,IAAI;AA0DX,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGC,MAOT;EAAA,IANXC,QAAQ,GAMFD,KANNC,QAAQ;IACRC,KAAK,GAKCF,KALNE,KAAK;IACLC,KAAK,GAICH,KAJNG,KAAK;IACLC,KAAK,GAGCJ,KAHNI,KAAK;IAAA,mBAGCJ,KAFNK,WAAW;IAAXA,WAAW,iCAAG,IAAI;IACfC,gCACGN;EACN,IAAQO,OAASJ,KAAK,CAAdI;EACR,IAAMC,UAAU,GAAGD,IAAI,GACnBJ,KAAK,CAACM,MAAM,CAACC,gBAAgB,GAC7BhB,KAAK,CAACS,KAAK,CAACM,MAAM,CAACE,IAAI,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;EACvD,IAAMC,WAAW,GAAGR,IAAI,GAAG,EAAE,GAAG,EAAE;EAClC,IAAMS,IAAI,GAAGT,IAAI,GAAGJ,KAAK,CAACc,KAAK,CAACC,UAAU,GAAGf,KAAK,CAACc,KAAK,CAACE,MAAM;EAE/D,OACE1B,oBAAC2B,IAAI;IAAChB,KAAK,EAAE,CAACiB,MAAM,CAACC,SAAS,EAAElB,KAAK;EAAE,GAAKE,IAAI,GAC7CJ,KAAK,IACJT,oBAAC2B,IAAI;IAAChB,KAAK,EAAE,CAACiB,MAAM,CAACE,cAAc,EAAEhB,IAAI,IAAIc,MAAM,CAACG,gBAAgB;EAAE,GACnEtB,KAAK,IACJT,oBAACK,IAAI;IACH2B,OAAO,EAAC,YAAY;IACpBC,aAAa,EAAE,CAAE;IACjBtB,KAAK,EAAE;MAEHV,KAAK,EAAEc,UAAU;MACjBmB,UAAU,EAAEZ;IAAW,GACpBC;EAEL,GAEDd,KAAK,CAET,CAEJ,EACAD,QAAQ,EACRI,WAAW,IACVZ,oBAACI,OAAO,eACDU,IAAI,IAAI;IAAEqB,eAAe,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAK,CAAC;IAClDzB,KAAK,EAAE,CAACiB,MAAM,CAACS,OAAO,EAAEvB,IAAI,IAAIc,MAAM,CAACU,SAAS;EAAE,GAErD,CACI;AAEX,CAAC;AAEDhC,aAAa,CAACiC,WAAW,GAAG,gBAAgB;AAE5C,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,YAAY,EAAE;EAChB,CAAC;EACDZ,cAAc,EAAE;IACda,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE;EAClB,CAAC;EACDb,gBAAgB,EAAE;IAChBY,MAAM,EAAE;EACV,CAAC;EACDN,OAAO,EAAE;IACPQ,SAAS,EAAE;EACb,CAAC;EACDP,SAAS,EAAE;IACTQ,eAAe,EAAE3C,SAAS,CAAC4C;EAC7B;AACF,CAAC,CAAC;AAEF,eAAe7C,iBAAiB,CAACI,aAAa,CAAC","names":["React","color","withInternalTheme","MD3Colors","Divider","Text","DrawerSection","_ref","children","title","theme","style","showDivider","rest","isV3","titleColor","colors","onSurfaceVariant","text","alpha","rgb","string","titleMargin","font","fonts","titleSmall","medium","View","styles","container","titleContainer","v3TitleContainer","variant","numberOfLines","marginLeft","horizontalInset","bold","divider","v3Divider","displayName","StyleSheet","create","marginBottom","height","justifyContent","marginTop","backgroundColor","neutralVariant50"],"sources":["DrawerSection.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport { MD3Colors } from '../../styles/themes/v3/tokens';\nimport type { InternalTheme } from '../../types';\nimport Divider from '../Divider';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  /**\n   * Whether to show `Divider` at the end of the section. True by default.\n   */\n  showDivider?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({\n  children,\n  title,\n  theme,\n  style,\n  showDivider = true,\n  ...rest\n}: Props) => {\n  const { isV3 } = theme;\n  const titleColor = isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n  const titleMargin = isV3 ? 28 : 16;\n  const font = isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={[styles.titleContainer, isV3 && styles.v3TitleContainer]}>\n          {title && (\n            <Text\n              variant=\"titleSmall\"\n              numberOfLines={1}\n              style={[\n                {\n                  color: titleColor,\n                  marginLeft: titleMargin,\n                  ...font,\n                },\n              ]}\n            >\n              {title}\n            </Text>\n          )}\n        </View>\n      )}\n      {children}\n      {showDivider && (\n        <Divider\n          {...(isV3 && { horizontalInset: true, bold: true })}\n          style={[styles.divider, isV3 && styles.v3Divider]}\n        />\n      )}\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  v3TitleContainer: {\n    height: 56,\n  },\n  divider: {\n    marginTop: 4,\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50,\n  },\n});\n\nexport default withInternalTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module"}