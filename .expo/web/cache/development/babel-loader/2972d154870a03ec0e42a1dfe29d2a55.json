{"ast":null,"code":"import * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withInternalTheme } from \"../../core/theming\";\nimport CheckboxAndroid from \"./CheckboxAndroid\";\nimport CheckboxIOS from \"./CheckboxIOS\";\nvar Checkbox = function Checkbox(props) {\n  return Platform.OS === 'ios' ? React.createElement(CheckboxIOS, props) : React.createElement(CheckboxAndroid, props);\n};\nexport default withInternalTheme(Checkbox);\nvar CheckboxWithTheme = withInternalTheme(Checkbox);\nexport { CheckboxWithTheme as Checkbox };","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAG9B,SAASC,iBAAiB;AAE1B,OAAOC,eAAe;AACtB,OAAOC,WAAW;AA4ElB,IAAMC,QAAQ,GAAIC,SAAZD,QAAQ,CAAIC,KAAY;EAAA,OAC5BC,QAAQ,CAACC,EAAE,KAAK,KAAK,GACnBP,oBAACG,WAAW,EAAKE,KAAK,CAAI,GAE1BL,oBAACE,eAAe,EAAKG,KAAK,CAC3B;AAAA;AAEH,eAAeJ,iBAAiB,CAACG,QAAQ,CAAC;AAG1C,IAAMI,iBAAiB,GAAGP,iBAAiB,CAACG,QAAQ,CAAC;AAErD,SAASI,iBAAiB,IAAIJ,QAAQ","names":["React","withInternalTheme","CheckboxAndroid","CheckboxIOS","Checkbox","props","Platform","OS","CheckboxWithTheme"],"sources":["Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\n\nexport type Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = (props: Props) =>\n  Platform.OS === 'ios' ? (\n    <CheckboxIOS {...props} />\n  ) : (\n    <CheckboxAndroid {...props} />\n  );\n\nexport default withInternalTheme(Checkbox);\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = withInternalTheme(Checkbox);\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n"]},"metadata":{},"sourceType":"module"}